{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.signOut = exports.forgotPassword = exports.resendVerificationEmail = exports.signUp = exports.signIn = void 0;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _auth = _interopRequireDefault(require(\"@react-native-firebase/auth\"));\n\nvar _firestore = _interopRequireDefault(require(\"@react-native-firebase/firestore\"));\n\nvar _storage = _interopRequireDefault(require(\"@react-native-firebase/storage\"));\n\nvar _types = require(\"./types\");\n\nvar sendVerificationEmail = function sendVerificationEmail(user) {\n  return user.sendEmailVerification();\n};\n\nvar signIn = function signIn(creds) {\n  return function _callee(dispatch) {\n    var email, password, response;\n    return _regenerator.default.async(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            dispatch({\n              type: _types.SIGNIN_REQUEST\n            });\n            _context.prev = 1;\n            email = creds.email, password = creds.password;\n            _context.next = 5;\n            return _regenerator.default.awrap((0, _auth.default)().signInWithEmailAndPassword(email, password));\n\n          case 5:\n            response = _context.sent;\n            dispatch({\n              type: _types.SIGNIN_SUCCESS,\n              payload: response.user\n            });\n            _context.next = 12;\n            break;\n\n          case 9:\n            _context.prev = 9;\n            _context.t0 = _context[\"catch\"](1);\n            dispatch({\n              type: _types.SIGNIN_FAILED,\n              payload: _context.t0\n            });\n\n          case 12:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[1, 9]], Promise);\n  };\n};\n\nexports.signIn = signIn;\n\nvar signUp = function signUp(creds, user, avatarFilePath) {\n  return function _callee2(dispatch) {\n    var _auth$currentUser, email, password, response, avatarUrl, avatarReference, userRef, now;\n\n    return _regenerator.default.async(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            dispatch({\n              type: _types.SIGNUP_REQUEST\n            });\n            _context2.prev = 1;\n            email = creds.email, password = creds.password;\n            _context2.next = 5;\n            return _regenerator.default.awrap((0, _auth.default)().createUserWithEmailAndPassword(email, password));\n\n          case 5:\n            response = _context2.sent;\n            avatarUrl = '';\n\n            if (!(avatarFilePath && avatarFilePath !== '')) {\n              _context2.next = 14;\n              break;\n            }\n\n            avatarReference = (0, _storage.default)().ref(\"avatars/\" + response.user.uid + \"/\" + response.user.uid + \".png\");\n            _context2.next = 11;\n            return _regenerator.default.awrap(avatarReference.putFile(avatarFilePath));\n\n          case 11:\n            _context2.next = 13;\n            return _regenerator.default.awrap((0, _storage.default)().ref(\"avatars/\" + response.user.uid + \"/\" + response.user.uid + \".png\").getDownloadURL());\n\n          case 13:\n            avatarUrl = _context2.sent;\n\n          case 14:\n            userRef = (0, _firestore.default)().collection('users').doc(response.user.uid);\n            now = Date.now();\n            user = (0, _extends2.default)({}, user, {\n              createdAt: now,\n              updatedAt: now,\n              displayPhoto: avatarUrl\n            });\n            _context2.next = 19;\n            return _regenerator.default.awrap(userRef.set(user));\n\n          case 19:\n            _context2.next = 21;\n            return _regenerator.default.awrap(sendVerificationEmail(response.user));\n\n          case 21:\n            dispatch({\n              type: _types.SIGNUP_SUCCESS,\n              payload: response.user\n            });\n            (_auth$currentUser = (0, _auth.default)().currentUser) == null ? void 0 : _auth$currentUser.updateProfile({\n              displayName: user.name,\n              photoURL: avatarUrl\n            });\n            _context2.next = 28;\n            break;\n\n          case 25:\n            _context2.prev = 25;\n            _context2.t0 = _context2[\"catch\"](1);\n            dispatch({\n              type: _types.SIGNUP_FAILED,\n              payload: _context2.t0\n            });\n\n          case 28:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, [[1, 25]], Promise);\n  };\n};\n\nexports.signUp = signUp;\n\nvar resendVerificationEmail = function resendVerificationEmail(user) {\n  return function _callee3(dispatch) {\n    return _regenerator.default.async(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            dispatch({\n              type: _types.RESEND_VERIFICATION_EMAIL_REQUEST\n            });\n            _context3.prev = 1;\n            _context3.next = 4;\n            return _regenerator.default.awrap(sendVerificationEmail(user));\n\n          case 4:\n            dispatch({\n              type: _types.RESEND_VERIFICATION_EMAIL_SUCCESS,\n              payload: {}\n            });\n            _context3.next = 10;\n            break;\n\n          case 7:\n            _context3.prev = 7;\n            _context3.t0 = _context3[\"catch\"](1);\n            dispatch({\n              type: _types.RESEND_VERIFICATION_EMAIL_FAILED,\n              payload: _context3.t0\n            });\n\n          case 10:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, null, null, [[1, 7]], Promise);\n  };\n};\n\nexports.resendVerificationEmail = resendVerificationEmail;\n\nvar forgotPassword = function forgotPassword(email) {\n  return function _callee4(dispatch) {\n    return _regenerator.default.async(function _callee4$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            dispatch({\n              type: _types.FORGOT_PASSWORD_REQUEST\n            });\n            _context4.prev = 1;\n            _context4.next = 4;\n            return _regenerator.default.awrap((0, _auth.default)().sendPasswordResetEmail(email));\n\n          case 4:\n            dispatch({\n              type: _types.FORGOT_PASSWORD_SUCCESS,\n              payload: {}\n            });\n            _context4.next = 10;\n            break;\n\n          case 7:\n            _context4.prev = 7;\n            _context4.t0 = _context4[\"catch\"](1);\n            dispatch({\n              type: _types.FORGOT_PASSWORD_FAILED,\n              payload: _context4.t0\n            });\n\n          case 10:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, null, null, [[1, 7]], Promise);\n  };\n};\n\nexports.forgotPassword = forgotPassword;\n\nvar signOut = function signOut() {\n  return function _callee5(dispatch) {\n    return _regenerator.default.async(function _callee5$(_context5) {\n      while (1) {\n        switch (_context5.prev = _context5.next) {\n          case 0:\n            _context5.next = 2;\n            return _regenerator.default.awrap((0, _auth.default)().signOut());\n\n          case 2:\n            dispatch({\n              type: _types.SIGNOUT_SUCCESS\n            });\n\n          case 3:\n          case \"end\":\n            return _context5.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n};\n\nexports.signOut = signOut;","map":{"version":3,"sources":["C:/Program Files/nodejs/ComeClosely/app/state/ducks/auth/actions.ts"],"names":["sendVerificationEmail","user","sendEmailVerification","signIn","creds","dispatch","type","SIGNIN_REQUEST","email","password","signInWithEmailAndPassword","response","SIGNIN_SUCCESS","payload","SIGNIN_FAILED","signUp","avatarFilePath","SIGNUP_REQUEST","createUserWithEmailAndPassword","avatarUrl","avatarReference","ref","uid","putFile","getDownloadURL","userRef","collection","doc","now","Date","createdAt","updatedAt","displayPhoto","set","SIGNUP_SUCCESS","currentUser","updateProfile","displayName","name","photoURL","SIGNUP_FAILED","resendVerificationEmail","RESEND_VERIFICATION_EMAIL_REQUEST","RESEND_VERIFICATION_EMAIL_SUCCESS","RESEND_VERIFICATION_EMAIL_FAILED","forgotPassword","FORGOT_PASSWORD_REQUEST","sendPasswordResetEmail","FORGOT_PASSWORD_SUCCESS","FORGOT_PASSWORD_FAILED","signOut","SIGNOUT_SUCCESS"],"mappings":"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","sourcesContent":["import auth, { FirebaseAuthTypes } from '@react-native-firebase/auth';\r\nimport firestore from '@react-native-firebase/firestore';\r\nimport storage from '@react-native-firebase/storage';\r\n\r\nimport { Creds, UserI } from './../../types';\r\nimport {\r\n  SIGNIN_REQUEST,\r\n  SIGNIN_SUCCESS,\r\n  SIGNIN_FAILED,\r\n  SIGNUP_REQUEST,\r\n  SIGNUP_SUCCESS,\r\n  SIGNUP_FAILED,\r\n  RESEND_VERIFICATION_EMAIL_REQUEST,\r\n  RESEND_VERIFICATION_EMAIL_SUCCESS,\r\n  RESEND_VERIFICATION_EMAIL_FAILED,\r\n  FORGOT_PASSWORD_REQUEST,\r\n  FORGOT_PASSWORD_SUCCESS,\r\n  FORGOT_PASSWORD_FAILED,\r\n  SIGNOUT_SUCCESS,\r\n} from './types';\r\n\r\nconst sendVerificationEmail = (user: FirebaseAuthTypes.User): Promise<void> => {\r\n  return user.sendEmailVerification();\r\n};\r\n\r\nexport const signIn = (creds: Creds) => {\r\n  return async (dispatch: Function) => {\r\n    dispatch({ type: SIGNIN_REQUEST });\r\n    try {\r\n      const { email, password } = creds;\r\n      const response = await auth().signInWithEmailAndPassword(email, password);\r\n      dispatch({ type: SIGNIN_SUCCESS, payload: response.user });\r\n    } catch (error) {\r\n      dispatch({ type: SIGNIN_FAILED, payload: error });\r\n    }\r\n  };\r\n};\r\n\r\nexport const signUp = (\r\n  creds: Creds,\r\n  user: UserI,\r\n  avatarFilePath: string | undefined,\r\n) => {\r\n  return async (dispatch: Function) => {\r\n    dispatch({ type: SIGNUP_REQUEST });\r\n    try {\r\n      /* Create a User on firebase Authentication */\r\n      const { email, password } = creds;\r\n      const response = await auth().createUserWithEmailAndPassword(\r\n        email,\r\n        password,\r\n      );\r\n      let avatarUrl = '';\r\n\r\n      /* Upload User's avatar photo */\r\n      if (avatarFilePath && avatarFilePath !== '') {\r\n        const avatarReference = storage().ref(\r\n          `avatars/${response.user.uid}/${response.user.uid}.png`,\r\n        );\r\n        await avatarReference.putFile(avatarFilePath);\r\n        avatarUrl = await storage()\r\n          .ref(`avatars/${response.user.uid}/${response.user.uid}.png`)\r\n          .getDownloadURL();\r\n      }\r\n      /* Add the user data in a firestore collection */\r\n      const userRef = firestore().collection('users').doc(response.user.uid);\r\n      const now = Date.now();\r\n      user = {\r\n        ...user,\r\n        createdAt: now,\r\n        updatedAt: now,\r\n        displayPhoto: avatarUrl,\r\n      };\r\n      await userRef.set(user);\r\n\r\n      /* Send verification email to user */\r\n      await sendVerificationEmail(response.user);\r\n\r\n      dispatch({ type: SIGNUP_SUCCESS, payload: response.user });\r\n      auth().currentUser?.updateProfile({\r\n        displayName: user.name,\r\n        photoURL: avatarUrl\r\n      })\r\n    } catch (error) {\r\n      dispatch({ type: SIGNUP_FAILED, payload: error });\r\n    }\r\n  };\r\n};\r\n\r\nexport const resendVerificationEmail = (user: FirebaseAuthTypes.User) => {\r\n  return async (dispatch: Function) => {\r\n    dispatch({ type: RESEND_VERIFICATION_EMAIL_REQUEST });\r\n    try {\r\n      await sendVerificationEmail(user);\r\n      dispatch({ type: RESEND_VERIFICATION_EMAIL_SUCCESS, payload: {} });\r\n    } catch (error) {\r\n      dispatch({ type: RESEND_VERIFICATION_EMAIL_FAILED, payload: error });\r\n    }\r\n  };\r\n};\r\n\r\nexport const forgotPassword = (email: string) => {\r\n  return async (dispatch: Function) => {\r\n    dispatch({ type: FORGOT_PASSWORD_REQUEST });\r\n    try {\r\n      await auth().sendPasswordResetEmail(email);\r\n      dispatch({ type: FORGOT_PASSWORD_SUCCESS, payload: {} });\r\n    } catch (error) {\r\n      dispatch({ type: FORGOT_PASSWORD_FAILED, payload: error });\r\n    }\r\n  };\r\n};\r\n\r\nexport const signOut = () => {\r\n  return async (dispatch: Function) => {\r\n    await auth().signOut();\r\n    dispatch({ type: SIGNOUT_SUCCESS });\r\n  };\r\n};\r\n"]},"metadata":{},"sourceType":"script"}