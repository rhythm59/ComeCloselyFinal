{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.scrollInterpolator = scrollInterpolator;\nexports.animatedStyles = animatedStyles;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _reactNativeSnapCarousel = require(\"react-native-snap-carousel\");\n\nvar SLIDER_WIDTH = _reactNative.Dimensions.get('window').width;\n\nvar TRANSLATE_VALUE = Math.round(SLIDER_WIDTH * 0.3 / 4);\n\nfunction scrollInterpolator(index, carouselProps) {\n  var range = [1, 0, -1];\n  var inputRange = (0, _reactNativeSnapCarousel.getInputRangeFromIndexes)(range, index, carouselProps);\n  var outputRange = range;\n  return {\n    inputRange: inputRange,\n    outputRange: outputRange\n  };\n}\n\nfunction animatedStyles(index, animatedValue, carouselProps) {\n  var translateProp = carouselProps.vertical ? 'translateY' : 'translateX';\n  var animatedOpacity = {};\n  var animatedTransform = {};\n\n  if (carouselProps.inactiveSlideOpacity < 1) {\n    animatedOpacity = {\n      opacity: animatedValue.interpolate({\n        inputRange: [-1, 0, 1],\n        outputRange: [carouselProps.inactiveSlideOpacity, 1, carouselProps.inactiveSlideOpacity]\n      })\n    };\n  }\n\n  if (carouselProps.inactiveSlideScale < 1) {\n    animatedTransform = {\n      transform: [(0, _defineProperty2.default)({\n        scale: animatedValue.interpolate({\n          inputRange: [-1, 0, 1],\n          outputRange: [carouselProps.inactiveSlideScale, 1, carouselProps.inactiveSlideScale]\n        })\n      }, translateProp, animatedValue.interpolate({\n        inputRange: [-1, 0, 1],\n        outputRange: [TRANSLATE_VALUE * carouselProps.inactiveSlideScale, 0, -TRANSLATE_VALUE * carouselProps.inactiveSlideScale]\n      }))]\n    };\n  }\n\n  return (0, _extends2.default)({}, animatedOpacity, animatedTransform);\n}","map":{"version":3,"sources":["C:/Program Files/nodejs/ComeClosely/app/views/screens/Home/animations.ts"],"names":["SLIDER_WIDTH","Dimensions","get","width","TRANSLATE_VALUE","Math","round","scrollInterpolator","index","carouselProps","range","inputRange","outputRange","animatedStyles","animatedValue","translateProp","vertical","animatedOpacity","animatedTransform","inactiveSlideOpacity","opacity","interpolate","inactiveSlideScale","transform","scale"],"mappings":";;;;;;;;;;;;AAAA;;AACA;;AAEA,IAAMA,YAAY,GAAGC,wBAAWC,GAAX,CAAe,QAAf,EAAyBC,KAA9C;;AACA,IAAMC,eAAe,GAAGC,IAAI,CAACC,KAAL,CAAYN,YAAY,GAAG,GAAhB,GAAuB,CAAlC,CAAxB;;AAEO,SAASO,kBAAT,CAA4BC,KAA5B,EAA2CC,aAA3C,EAA+D;AACpE,MAAMC,KAAK,GAAG,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAC,CAAR,CAAd;AACA,MAAMC,UAAU,GAAG,uDAAyBD,KAAzB,EAAgCF,KAAhC,EAAuCC,aAAvC,CAAnB;AACA,MAAMG,WAAW,GAAGF,KAApB;AAEA,SAAO;AAACC,IAAAA,UAAU,EAAVA,UAAD;AAAaC,IAAAA,WAAW,EAAXA;AAAb,GAAP;AACD;;AACM,SAASC,cAAT,CACLL,KADK,EAELM,aAFK,EAGLL,aAHK,EAIL;AACA,MAAMM,aAAa,GAAGN,aAAa,CAACO,QAAd,GAAyB,YAAzB,GAAwC,YAA9D;AACA,MAAIC,eAAe,GAAG,EAAtB;AACA,MAAIC,iBAAiB,GAAG,EAAxB;;AAEA,MAAIT,aAAa,CAACU,oBAAd,GAAqC,CAAzC,EAA4C;AAC1CF,IAAAA,eAAe,GAAG;AAChBG,MAAAA,OAAO,EAAEN,aAAa,CAACO,WAAd,CAA0B;AACjCV,QAAAA,UAAU,EAAE,CAAC,CAAC,CAAF,EAAK,CAAL,EAAQ,CAAR,CADqB;AAEjCC,QAAAA,WAAW,EAAE,CACXH,aAAa,CAACU,oBADH,EAEX,CAFW,EAGXV,aAAa,CAACU,oBAHH;AAFoB,OAA1B;AADO,KAAlB;AAUD;;AAED,MAAIV,aAAa,CAACa,kBAAd,GAAmC,CAAvC,EAA0C;AACxCJ,IAAAA,iBAAiB,GAAG;AAClBK,MAAAA,SAAS,EAAE;AAEPC,QAAAA,KAAK,EAAEV,aAAa,CAACO,WAAd,CAA0B;AAC/BV,UAAAA,UAAU,EAAE,CAAC,CAAC,CAAF,EAAK,CAAL,EAAQ,CAAR,CADmB;AAE/BC,UAAAA,WAAW,EAAE,CACXH,aAAa,CAACa,kBADH,EAEX,CAFW,EAGXb,aAAa,CAACa,kBAHH;AAFkB,SAA1B;AAFA,SAUNP,aAVM,EAUUD,aAAa,CAACO,WAAd,CAA0B;AACzCV,QAAAA,UAAU,EAAE,CAAC,CAAC,CAAF,EAAK,CAAL,EAAQ,CAAR,CAD6B;AAEzCC,QAAAA,WAAW,EAAE,CACXR,eAAe,GAAGK,aAAa,CAACa,kBADrB,EAEX,CAFW,EAGX,CAAClB,eAAD,GAAmBK,aAAa,CAACa,kBAHtB;AAF4B,OAA1B,CAVV;AADO,KAApB;AAsBD;;AAED,oCACKL,eADL,EAEKC,iBAFL;AAID","sourcesContent":["import {Dimensions} from 'react-native';\nimport {getInputRangeFromIndexes} from 'react-native-snap-carousel';\n\nconst SLIDER_WIDTH = Dimensions.get('window').width;\nconst TRANSLATE_VALUE = Math.round((SLIDER_WIDTH * 0.3) / 4);\n\nexport function scrollInterpolator(index: number, carouselProps: any) {\n  const range = [1, 0, -1];\n  const inputRange = getInputRangeFromIndexes(range, index, carouselProps);\n  const outputRange = range;\n\n  return {inputRange, outputRange};\n}\nexport function animatedStyles(\n  index: number,\n  animatedValue: any,\n  carouselProps: any,\n) {\n  const translateProp = carouselProps.vertical ? 'translateY' : 'translateX';\n  let animatedOpacity = {};\n  let animatedTransform = {};\n\n  if (carouselProps.inactiveSlideOpacity < 1) {\n    animatedOpacity = {\n      opacity: animatedValue.interpolate({\n        inputRange: [-1, 0, 1],\n        outputRange: [\n          carouselProps.inactiveSlideOpacity,\n          1,\n          carouselProps.inactiveSlideOpacity,\n        ],\n      }),\n    };\n  }\n\n  if (carouselProps.inactiveSlideScale < 1) {\n    animatedTransform = {\n      transform: [\n        {\n          scale: animatedValue.interpolate({\n            inputRange: [-1, 0, 1],\n            outputRange: [\n              carouselProps.inactiveSlideScale,\n              1,\n              carouselProps.inactiveSlideScale,\n            ],\n          }),\n          [translateProp]: animatedValue.interpolate({\n            inputRange: [-1, 0, 1],\n            outputRange: [\n              TRANSLATE_VALUE * carouselProps.inactiveSlideScale,\n              0,\n              -TRANSLATE_VALUE * carouselProps.inactiveSlideScale,\n            ],\n          }),\n        },\n      ],\n    };\n  }\n\n  return {\n    ...animatedOpacity,\n    ...animatedTransform,\n  };\n}\n"]},"metadata":{},"sourceType":"script"}