{"ast":null,"code":"Object.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar REGULAR = ['background: blue', 'color: white'].join(';');\nvar SUCCESS = ['background: green', 'color: white'].join(';');\nvar STARTED = ['background: darkorange', 'color: white'].join(';');\nvar FAILURE = ['background: red', 'color: white'].join(';');\n\nvar createLogger = function createLogger() {\n  var active = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n  return function (store) {\n    return function (next) {\n      return function (action) {\n        if (!active) {\n          return next(action);\n        }\n\n        var prevState = store.getState();\n        var result = next(action);\n        var nextState = store.getState();\n        logGroupCollapsed(\"%c \" + action.type + \" \", determineStyle(action));\n        logInfo('%cprev state', 'color: darkorange', prevState);\n        logInfo('%caction payload', 'color: blue', action.payload);\n        logInfo('%cnext state', 'color: darkgreen', nextState);\n        logGroupEnd();\n        return result;\n      };\n    };\n  };\n};\n\nvar _default = createLogger;\nexports.default = _default;\n\nfunction logGroupCollapsed() {\n  var logFunction = typeof console.groupCollapsed === 'function' ? console.groupCollapsed : console.info;\n  logFunction.apply(void 0, arguments);\n}\n\nfunction logGroupEnd() {\n  var logFunction = typeof console.groupEnd === 'function' ? console.groupEnd : console.info;\n  logFunction.apply(void 0, arguments);\n}\n\nfunction logInfo() {\n  var _console;\n\n  (_console = console).info.apply(_console, arguments);\n}\n\nfunction determineStyle(action) {\n  if (!action.meta || !action.meta.async) {\n    return REGULAR;\n  }\n\n  if (action.type.indexOf('_COMPLETED') > -1) {\n    return SUCCESS;\n  }\n\n  if (action.type.indexOf('_FAILED') > -1) {\n    return FAILURE;\n  }\n\n  return STARTED;\n}","map":{"version":3,"sources":["C:/Program Files/nodejs/ComeClosely/app/state/middlewares/logger.ts"],"names":["REGULAR","join","SUCCESS","STARTED","FAILURE","createLogger","active","store","next","action","prevState","getState","result","nextState","logGroupCollapsed","type","determineStyle","logInfo","payload","logGroupEnd","logFunction","console","groupCollapsed","info","groupEnd","meta","async","indexOf"],"mappings":";;;;AAAA,IAAMA,OAAO,GAAG,CAAC,kBAAD,EAAqB,cAArB,EAAqCC,IAArC,CAA0C,GAA1C,CAAhB;AACA,IAAMC,OAAO,GAAG,CAAC,mBAAD,EAAsB,cAAtB,EAAsCD,IAAtC,CAA2C,GAA3C,CAAhB;AACA,IAAME,OAAO,GAAG,CAAC,wBAAD,EAA2B,cAA3B,EAA2CF,IAA3C,CAAgD,GAAhD,CAAhB;AACA,IAAMG,OAAO,GAAG,CAAC,iBAAD,EAAoB,cAApB,EAAoCH,IAApC,CAAyC,GAAzC,CAAhB;;AAEA,IAAMI,YAAY,GAAG,SAAfA,YAAe;AAAA,MAACC,MAAD,uEAAU,IAAV;AAAA,SAAmB,UAACC,KAAD;AAAA,WAAgB,UAACC,IAAD;AAAA,aAAe,UACrEC,MADqE,EAElE;AACH,YAAI,CAACH,MAAL,EAAa;AACX,iBAAOE,IAAI,CAACC,MAAD,CAAX;AACD;;AAED,YAAMC,SAAS,GAAGH,KAAK,CAACI,QAAN,EAAlB;AACA,YAAMC,MAAM,GAAGJ,IAAI,CAACC,MAAD,CAAnB;AACA,YAAMI,SAAS,GAAGN,KAAK,CAACI,QAAN,EAAlB;AACAG,QAAAA,iBAAiB,SAAOL,MAAM,CAACM,IAAd,QAAuBC,cAAc,CAACP,MAAD,CAArC,CAAjB;AACAQ,QAAAA,OAAO,CAAC,cAAD,EAAiB,mBAAjB,EAAsCP,SAAtC,CAAP;AACAO,QAAAA,OAAO,CAAC,kBAAD,EAAqB,aAArB,EAAoCR,MAAM,CAACS,OAA3C,CAAP;AACAD,QAAAA,OAAO,CAAC,cAAD,EAAiB,kBAAjB,EAAqCJ,SAArC,CAAP;AACAM,QAAAA,WAAW;AACX,eAAOP,MAAP;AACD,OAhBuD;AAAA,KAAhB;AAAA,GAAnB;AAAA,CAArB;;eAkBeP,Y;;;AAEf,SAASS,iBAAT,GAA2C;AACzC,MAAMM,WAAW,GACf,OAAOC,OAAO,CAACC,cAAf,KAAkC,UAAlC,GACID,OAAO,CAACC,cADZ,GAEID,OAAO,CAACE,IAHd;AAIAH,EAAAA,WAAW,MAAX;AACD;;AAED,SAASD,WAAT,GAAqC;AACnC,MAAMC,WAAW,GACf,OAAOC,OAAO,CAACG,QAAf,KAA4B,UAA5B,GAAyCH,OAAO,CAACG,QAAjD,GAA4DH,OAAO,CAACE,IADtE;AAEAH,EAAAA,WAAW,MAAX;AACD;;AAED,SAASH,OAAT,GAAiC;AAAA;;AAC/B,cAAAI,OAAO,EAACE,IAAR;AACD;;AAED,SAASP,cAAT,CAAwBP,MAAxB,EAAqC;AACnC,MAAI,CAACA,MAAM,CAACgB,IAAR,IAAgB,CAAChB,MAAM,CAACgB,IAAP,CAAYC,KAAjC,EAAwC;AACtC,WAAO1B,OAAP;AACD;;AAED,MAAIS,MAAM,CAACM,IAAP,CAAYY,OAAZ,CAAoB,YAApB,IAAoC,CAAC,CAAzC,EAA4C;AAC1C,WAAOzB,OAAP;AACD;;AAED,MAAIO,MAAM,CAACM,IAAP,CAAYY,OAAZ,CAAoB,SAApB,IAAiC,CAAC,CAAtC,EAAyC;AACvC,WAAOvB,OAAP;AACD;;AAED,SAAOD,OAAP;AACD","sourcesContent":["const REGULAR = ['background: blue', 'color: white'].join(';');\nconst SUCCESS = ['background: green', 'color: white'].join(';');\nconst STARTED = ['background: darkorange', 'color: white'].join(';');\nconst FAILURE = ['background: red', 'color: white'].join(';');\n\nconst createLogger = (active = true) => (store: any) => (next: any) => (\n  action: any,\n) => {\n  if (!active) {\n    return next(action);\n  }\n\n  const prevState = store.getState();\n  const result = next(action);\n  const nextState = store.getState();\n  logGroupCollapsed(`%c ${action.type} `, determineStyle(action));\n  logInfo('%cprev state', 'color: darkorange', prevState);\n  logInfo('%caction payload', 'color: blue', action.payload);\n  logInfo('%cnext state', 'color: darkgreen', nextState);\n  logGroupEnd();\n  return result;\n};\n\nexport default createLogger;\n\nfunction logGroupCollapsed(...args: any[]) {\n  const logFunction =\n    typeof console.groupCollapsed === 'function'\n      ? console.groupCollapsed\n      : console.info;\n  logFunction(...args);\n}\n\nfunction logGroupEnd(...args: any[]) {\n  const logFunction =\n    typeof console.groupEnd === 'function' ? console.groupEnd : console.info;\n  logFunction(...args);\n}\n\nfunction logInfo(...args: any[]) {\n  console.info(...args);\n}\n\nfunction determineStyle(action: any) {\n  if (!action.meta || !action.meta.async) {\n    return REGULAR;\n  }\n\n  if (action.type.indexOf('_COMPLETED') > -1) {\n    return SUCCESS;\n  }\n\n  if (action.type.indexOf('_FAILED') > -1) {\n    return FAILURE;\n  }\n\n  return STARTED;\n}\n"]},"metadata":{},"sourceType":"script"}