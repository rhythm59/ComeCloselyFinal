{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _assertThisInitialized2 = _interopRequireDefault(require(\"@babel/runtime/helpers/assertThisInitialized\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _auth = _interopRequireDefault(require(\"@react-native-firebase/auth\"));\n\nvar _reactRedux = require(\"react-redux\");\n\nvar _config = require(\"../../config\");\n\nvar _styles = _interopRequireDefault(require(\"./styles\"));\n\nvar _utils = require(\"../../../utils\");\n\nvar _services = require(\"../../../services\");\n\nvar _memories = require(\"../../../state/ducks/memories\");\n\nvar _jsxFileName = \"C:\\\\Program Files\\\\nodejs\\\\ComeClosely\\\\app\\\\views\\\\screens\\\\Comments\\\\index.tsx\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nvar INITIAL_STATE = {\n  commentsList: [],\n  memoryData: {},\n  newCommentText: '',\n  isLoading: false\n};\n\nvar Comments = function (_React$Component) {\n  (0, _inherits2.default)(Comments, _React$Component);\n\n  var _super = _createSuper(Comments);\n\n  function Comments(props) {\n    var _this;\n\n    (0, _classCallCheck2.default)(this, Comments);\n    _this = _super.call(this, props);\n\n    _this.addNewComment = function _callee() {\n      var _this$state, newCommentText, memoryData, commentMessageBackup, user;\n\n      return _regenerator.default.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _this$state = _this.state, newCommentText = _this$state.newCommentText, memoryData = _this$state.memoryData;\n              commentMessageBackup = newCommentText.trim();\n              user = _this.props.user;\n              _context.prev = 3;\n\n              _this.setState({\n                isLoading: true,\n                newCommentText: ''\n              });\n\n              _context.next = 7;\n              return _regenerator.default.awrap(_services.MemoryServices.addCommentToMemory(newCommentText, memoryData, user));\n\n            case 7:\n              _context.next = 13;\n              break;\n\n            case 9:\n              _context.prev = 9;\n              _context.t0 = _context[\"catch\"](3);\n              console.log(_context.t0);\n\n              _this.setState({\n                isLoading: false,\n                newCommentText: commentMessageBackup\n              });\n\n            case 13:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, [[3, 9]], Promise);\n    };\n\n    _this.likeMemoryComment = function _callee2(commentData) {\n      return _regenerator.default.async(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return _regenerator.default.awrap(_services.MemoryServices.likeDislikeCommentOnMemory(commentData));\n\n            case 2:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.state = (0, _extends2.default)({}, INITIAL_STATE);\n    _this.closeTapped = _this.closeTapped.bind((0, _assertThisInitialized2.default)(_this));\n    _this.commentList = _this.commentList.bind((0, _assertThisInitialized2.default)(_this));\n    return _this;\n  }\n\n  (0, _createClass2.default)(Comments, [{\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, prevState) {\n      var memoryId = this.props.route.params.memoryId;\n      var memoryData = this.props.memories.find(function (item) {\n        return item.id == memoryId;\n      });\n      var newMemoryData = prevProps.memories.find(function (item) {\n        return item.id == memoryId;\n      });\n\n      if (JSON.stringify(memoryData) !== JSON.stringify(newMemoryData)) {\n        this.setState({\n          memoryData: memoryData\n        });\n      }\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var memoryId = this.props.route.params.memoryId;\n      this.props.getMemories(memoryId);\n      var memoryData = this.props.memories.find(function (item) {\n        return item.id == memoryId;\n      });\n      memoryData = memoryData ? memoryData : {};\n      this.setState({\n        memoryData: memoryData\n      });\n    }\n  }, {\n    key: \"closeTapped\",\n    value: function closeTapped() {\n      this.props.navigation.goBack();\n    }\n  }, {\n    key: \"commentList\",\n    value: function commentList(_ref) {\n      var _item$likedByUsers$sp,\n          _this2 = this,\n          _auth$currentUser;\n\n      var item = _ref.item;\n      var likesText = item.likedByUsers ? ((_item$likedByUsers$sp = item.likedByUsers.split()) == null ? void 0 : _item$likedByUsers$sp.length) + ' likes' : null;\n      return _react.default.createElement(_reactNative.View, {\n        style: _styles.default.commentContainer,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 7\n        }\n      }, _react.default.createElement(_reactNative.View, {\n        style: _styles.default.commentAvatarContainer,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 9\n        }\n      }, _react.default.createElement(_reactNative.View, {\n        style: [_styles.default.memoriesBottomProfileView, {\n          marginLeft: 0\n        }],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 11\n        }\n      }, _react.default.createElement(_reactNative.ImageBackground, {\n        style: {\n          flex: 1\n        },\n        source: item.userAvatar ? {\n          uri: item.userAvatar\n        } : _config.AppImages.loginImage,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 13\n        }\n      }))), _react.default.createElement(_reactNative.View, {\n        style: _styles.default.commentDetailsContainer,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 9\n        }\n      }, _react.default.createElement(_reactNative.Text, {\n        style: _styles.default.commentOwnerText,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 11\n        }\n      }, item.userName), _react.default.createElement(_reactNative.Text, {\n        style: _styles.default.commentDescText,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 11\n        }\n      }, item.message), _react.default.createElement(_reactNative.Text, {\n        style: _styles.default.commentLikesText,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 11\n        }\n      }, likesText)), _react.default.createElement(_reactNative.TouchableOpacity, {\n        onPress: function onPress() {\n          return _this2.likeMemoryComment(item);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 9\n        }\n      }, _react.default.createElement(_reactNative.ImageBackground, {\n        resizeMode: 'contain',\n        style: _styles.default.commentLikeImage,\n        source: item.likedByUsers && ((0, _auth.default)().currentUser && item.likedByUsers.indexOf((_auth$currentUser = (0, _auth.default)().currentUser) == null ? void 0 : _auth$currentUser.uid)) != -1 ? _config.AppImages.filledHeart : _config.AppImages.outlineHeart,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 11\n        }\n      })));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this,\n          _auth$currentUser2,\n          _memoryData$likedByUs;\n\n      var _this$state2 = this.state,\n          memoryData = _this$state2.memoryData,\n          newCommentText = _this$state2.newCommentText,\n          isLoading = _this$state2.isLoading;\n      var commentsList = this.props.commentsList;\n      return _react.default.createElement(_reactNative.View, {\n        style: _styles.default.mainScreenView,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 7\n        }\n      }, isLoading && _react.default.createElement(_reactNative.ActivityIndicator, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 11\n        }\n      }), _react.default.createElement(_reactNative.View, {\n        style: _styles.default.keyboardDissmiss,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 9\n        }\n      }, _react.default.createElement(_reactNative.View, {\n        style: _styles.default.mainScreenSubView,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 11\n        }\n      }, _react.default.createElement(_reactNative.SafeAreaView, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 13\n        }\n      }, _react.default.createElement(_reactNative.View, {\n        style: _styles.default.inputContent,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 15\n        }\n      }, _react.default.createElement(_reactNative.View, {\n        style: _styles.default.inputProfileView,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 17\n        }\n      }, _react.default.createElement(_reactNative.ImageBackground, {\n        style: {\n          flex: 1\n        },\n        source: {\n          uri: this.props.user.displayPhoto\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 19\n        }\n      })), _react.default.createElement(_reactNative.View, {\n        style: _styles.default.textInputCommentMainView,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 17\n        }\n      }, _react.default.createElement(_reactNative.TextInput, {\n        onChangeText: function onChangeText(newCommentText) {\n          return _this3.setState({\n            newCommentText: newCommentText\n          });\n        },\n        placeholder: 'Add Comment…',\n        value: newCommentText,\n        style: _styles.default.textinputComment,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 19\n        }\n      })), _react.default.createElement(_reactNative.TouchableOpacity, {\n        disabled: !newCommentText.trim(),\n        onPress: this.addNewComment,\n        style: _styles.default.sendIcon,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 17\n        }\n      }, _react.default.createElement(_reactNative.Image, {\n        style: _styles.default.sendImage,\n        source: _config.AppImages.send,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 19\n        }\n      })))), _react.default.createElement(_reactNative.View, {\n        style: _styles.default.mainView,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 13\n        }\n      }, _react.default.createElement(_reactNative.View, {\n        style: _styles.default.memoriesMainView,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 15\n        }\n      }, _react.default.createElement(_reactNative.View, {\n        style: _styles.default.memoriesImageView,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 17\n        }\n      }, _react.default.createElement(_reactNative.Image, {\n        source: {\n          uri: memoryData.image\n        },\n        style: _styles.default.memoriesImage,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 19\n        }\n      }), _react.default.createElement(_reactNative.View, {\n        style: _styles.default.headerMainView,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 19\n        }\n      }, _react.default.createElement(_reactNative.View, {\n        style: _styles.default.BackButtonView,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 21\n        }\n      }, _react.default.createElement(_reactNative.TouchableOpacity, {\n        onPress: this.closeTapped,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 23\n        }\n      }, _react.default.createElement(_reactNative.Image, {\n        source: _config.AppImages.arrowleft,\n        style: _styles.default.backArrowImg,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 25\n        }\n      }))), _react.default.createElement(_reactNative.Text, {\n        style: _styles.default.commentsText,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 21\n        }\n      }, \"Comments\"))), _react.default.createElement(_reactNative.View, {\n        style: _styles.default.memoriesBottomMainView,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 17\n        }\n      }, _react.default.createElement(_reactNative.View, {\n        style: _styles.default.memoriesBottomFirstView,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 19\n        }\n      }, _react.default.createElement(_reactNative.View, {\n        style: _styles.default.memoriesBottomProfileView,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 21\n        }\n      }, _react.default.createElement(_reactNative.ImageBackground, {\n        style: {\n          flex: 1\n        },\n        source: memoryData.userAvatar ? {\n          uri: memoryData.userAvatar\n        } : _config.AppImages.loginImage,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 23\n        }\n      })), _react.default.createElement(_reactNative.View, {\n        style: _styles.default.memoriesBottomSecondView,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 21\n        }\n      }, _react.default.createElement(_reactNative.View, {\n        style: _styles.default.memorisBottomCommentView,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 23\n        }\n      }, _react.default.createElement(_reactNative.TouchableOpacity, {\n        style: _styles.default.commentsImageView,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 25\n        }\n      }, _react.default.createElement(_reactNative.ImageBackground, {\n        style: _styles.default.commentsImage,\n        resizeMode: 'contain',\n        source: _config.AppImages.comment,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 27\n        }\n      })), _react.default.createElement(_reactNative.View, {\n        style: _styles.default.commentsCountView,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 25\n        }\n      }, _react.default.createElement(_reactNative.Text, {\n        style: _styles.default.commentsCountTxt,\n        adjustsFontSizeToFit: true,\n        numberOfLines: 1,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 27\n        }\n      }, memoryData.commentsCounter ? memoryData.commentsCounter : null))), _react.default.createElement(_reactNative.View, {\n        style: _styles.default.memorisBottomLikesView,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 23\n        }\n      }, _react.default.createElement(_reactNative.TouchableOpacity, {\n        style: _styles.default.filledHeartImageView,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 25\n        }\n      }, _react.default.createElement(_reactNative.ImageBackground, {\n        resizeMode: 'contain',\n        style: _styles.default.filledHeartMainImage,\n        source: memoryData.likedByUsers && ((0, _auth.default)().currentUser && memoryData.likedByUsers.indexOf((_auth$currentUser2 = (0, _auth.default)().currentUser) == null ? void 0 : _auth$currentUser2.uid)) != -1 ? _config.AppImages.filledHeart : _config.AppImages.outlineHeart,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 27\n        }\n      })), _react.default.createElement(_reactNative.View, {\n        style: _styles.default.postlikeCountView,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 25\n        }\n      }, _react.default.createElement(_reactNative.Text, {\n        style: _styles.default.postlikeCountTxt,\n        adjustsFontSizeToFit: true,\n        numberOfLines: 1,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 27\n        }\n      }, memoryData.likedByUsers ? (_memoryData$likedByUs = memoryData.likedByUsers.split()) == null ? void 0 : _memoryData$likedByUs.length : null))), _react.default.createElement(_reactNative.View, {\n        style: _styles.default.postNameMainView,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 23\n        }\n      }, _react.default.createElement(_reactNative.View, {\n        style: _styles.default.postNameView,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 25\n        }\n      }, _react.default.createElement(_reactNative.Text, {\n        style: _styles.default.postNameTxt,\n        adjustsFontSizeToFit: true,\n        numberOfLines: 1,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 27\n        }\n      }, memoryData.userName)), _react.default.createElement(_reactNative.View, {\n        style: _styles.default.postTimeView,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 256,\n          columnNumber: 25\n        }\n      }, _react.default.createElement(_reactNative.Text, {\n        style: _styles.default.postTimeTxt,\n        adjustsFontSizeToFit: true,\n        numberOfLines: 1,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 257,\n          columnNumber: 27\n        }\n      }, (0, _utils.timeSince)(memoryData.createdAt)))))))), _react.default.createElement(_reactNative.FlatList, {\n        style: _styles.default.commentsFlatList,\n        data: commentsList.filter(function (c) {\n          return c.memoryId == memoryData.id;\n        }),\n        renderItem: this.commentList,\n        keyExtractor: function keyExtractor(item) {\n          return item.id;\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 269,\n          columnNumber: 15\n        }\n      })))));\n    }\n  }]);\n  return Comments;\n}(_react.default.Component);\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    getMemories: function getMemories(memoryId) {\n      return dispatch(_memories.memoriesOperations.getCommentsByMemoryId(memoryId));\n    }\n  };\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    memories: state.memories.memories,\n    commentsList: state.memories.commentsOnMemory,\n    user: state.user.user\n  };\n};\n\nvar _default = (0, _reactRedux.connect)(mapStateToProps, mapDispatchToProps)(Comments);\n\nexports.default = _default;","map":{"version":3,"sources":["C:/Program Files/nodejs/ComeClosely/app/views/screens/Comments/index.tsx"],"names":["INITIAL_STATE","commentsList","memoryData","newCommentText","isLoading","Comments","props","addNewComment","state","commentMessageBackup","trim","user","setState","MemoryServices","addCommentToMemory","console","log","likeMemoryComment","commentData","likeDislikeCommentOnMemory","closeTapped","bind","commentList","prevProps","prevState","memoryId","route","params","memories","find","item","id","newMemoryData","JSON","stringify","getMemories","navigation","goBack","likesText","likedByUsers","split","length","styles","commentContainer","commentAvatarContainer","memoriesBottomProfileView","marginLeft","flex","userAvatar","uri","AppImages","loginImage","commentDetailsContainer","commentOwnerText","userName","commentDescText","message","commentLikesText","commentLikeImage","currentUser","indexOf","uid","filledHeart","outlineHeart","mainScreenView","keyboardDissmiss","mainScreenSubView","inputContent","inputProfileView","displayPhoto","textInputCommentMainView","textinputComment","sendIcon","sendImage","send","mainView","memoriesMainView","memoriesImageView","image","memoriesImage","headerMainView","BackButtonView","arrowleft","backArrowImg","commentsText","memoriesBottomMainView","memoriesBottomFirstView","memoriesBottomSecondView","memorisBottomCommentView","commentsImageView","commentsImage","comment","commentsCountView","commentsCountTxt","commentsCounter","memorisBottomLikesView","filledHeartImageView","filledHeartMainImage","postlikeCountView","postlikeCountTxt","postNameMainView","postNameView","postNameTxt","postTimeView","postTimeTxt","createdAt","commentsFlatList","filter","c","React","Component","mapDispatchToProps","dispatch","memoriesOperations","getCommentsByMemoryId","mapStateToProps","commentsOnMemory"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport {\r\n  Keyboard,\r\n  TouchableWithoutFeedback,\r\n  SafeAreaView,\r\n  FlatList,\r\n  Image,\r\n  Text,\r\n  TextInput,\r\n  View,\r\n  TouchableOpacity,\r\n  ImageBackground,\r\n  StatusBar,\r\n  ActivityIndicator,\r\n} from 'react-native';\r\nimport auth from '@react-native-firebase/auth';\r\nimport { connect } from 'react-redux';\r\n\r\n\r\nimport { AppImages } from '../../config';\r\nimport styles from './styles';\r\nimport { timeSince } from '../../../utils';\r\nimport { MemoryServices } from '../../../services';\r\nimport { memoriesOperations } from '../../../state/ducks/memories';\r\n\r\ninterface CommentI {\r\n  message: string,\r\n  createdAt: number,\r\n  likedByUsers: string\r\n  userAvatar: string,\r\n  userName: string,\r\n}\r\n\r\n\r\ninterface ComponentProps {\r\n  navigation: any;\r\n  route: any;\r\n  getMemories: typeof Function,\r\n  memories: any;\r\n  commentsList: any;\r\n  user: any;\r\n}\r\ninterface ComponentState {\r\n  commentsList: Array<CommentI>;\r\n  memoryData: any,\r\n  newCommentText: string,\r\n  isLoading: boolean,\r\n}\r\nconst INITIAL_STATE: ComponentState = {\r\n  commentsList: [],\r\n  memoryData: {},\r\n  newCommentText: '',\r\n  isLoading: false,\r\n};\r\n\r\nclass Comments extends React.Component<ComponentProps, ComponentState> {\r\n\r\n  constructor(props: ComponentProps) {\r\n    super(props);\r\n    this.state = {\r\n      ...INITIAL_STATE,\r\n    };\r\n    this.closeTapped = this.closeTapped.bind(this);\r\n    this.commentList = this.commentList.bind(this);\r\n  }\r\n\r\n  componentDidUpdate(prevProps: any, prevState: any) {\r\n    const { memoryId } = this.props.route.params\r\n    let memoryData = this.props.memories.find((item: any) => item.id == memoryId);\r\n    let newMemoryData = prevProps.memories.find((item: any) => item.id == memoryId);\r\n    if (JSON.stringify(memoryData) !== JSON.stringify(newMemoryData)) {\r\n      this.setState({ memoryData })\r\n    }\r\n  }\r\n  componentDidMount() {\r\n    const { memoryId } = this.props.route.params\r\n    this.props.getMemories(memoryId)\r\n    let memoryData = this.props.memories.find((item: any) => item.id == memoryId)\r\n    memoryData = memoryData ? memoryData : {}\r\n\r\n    this.setState({ memoryData });\r\n\r\n  }\r\n\r\n  closeTapped() {\r\n    this.props.navigation.goBack();\r\n  }\r\n\r\n  addNewComment = async () => {\r\n    const { newCommentText, memoryData } = this.state;\r\n    const commentMessageBackup = newCommentText.trim()\r\n    const { user } = this.props;\r\n    try {\r\n      this.setState({ isLoading: true, newCommentText: '' })\r\n\r\n      await MemoryServices.addCommentToMemory(newCommentText, memoryData, user)\r\n\r\n    } catch (error) {\r\n      console.log(error)\r\n      this.setState({ isLoading: false, newCommentText: commentMessageBackup })\r\n\r\n    }\r\n  }\r\n\r\n  likeMemoryComment = async (commentData: any) => {\r\n    await MemoryServices.likeDislikeCommentOnMemory(commentData)\r\n  }\r\n\r\n  // commentList({ name, message, image, date }: any) {\r\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\r\n  commentList({ item }) {\r\n    let likesText = item.likedByUsers ? ((item.likedByUsers.split()?.length) + ' likes') : null\r\n    return (\r\n      <View style={styles.commentContainer}>\r\n        <View style={styles.commentAvatarContainer}>\r\n          <View style={[styles.memoriesBottomProfileView, { marginLeft: 0 }]}>\r\n            <ImageBackground\r\n              style={{ flex: 1 }}\r\n              source={item.userAvatar ? { uri: item.userAvatar } : AppImages.loginImage}\r\n            />\r\n          </View>\r\n        </View>\r\n        <View style={styles.commentDetailsContainer}>\r\n          <Text style={styles.commentOwnerText}>{item.userName}</Text>\r\n          <Text style={styles.commentDescText}>{item.message}</Text>\r\n          <Text style={styles.commentLikesText}>{likesText}</Text>\r\n        </View>\r\n        <TouchableOpacity onPress={() => this.likeMemoryComment(item)}>\r\n          <ImageBackground\r\n            resizeMode={'contain'}\r\n            style={styles.commentLikeImage}\r\n            source={(item.likedByUsers &&\r\n              (auth().currentUser && item.likedByUsers.indexOf(auth().currentUser?.uid)) != -1) ?\r\n              AppImages.filledHeart :\r\n              AppImages.outlineHeart}\r\n          />\r\n        </TouchableOpacity>\r\n      </View>\r\n    );\r\n  }\r\n\r\n\r\n  render() {\r\n    const { memoryData, newCommentText, isLoading } = this.state;\r\n    const { commentsList } = this.props;\r\n    return (\r\n      <View style={styles.mainScreenView}>\r\n        {\r\n          isLoading &&\r\n          <ActivityIndicator />\r\n        }\r\n        <View\r\n          // onPress={Keyboard.dismiss}\r\n          // accessible={false}\r\n          style={styles.keyboardDissmiss}>\r\n          <View style={styles.mainScreenSubView}>\r\n            <SafeAreaView>\r\n              <View style={styles.inputContent}>\r\n                <View style={styles.inputProfileView} >\r\n                  <ImageBackground\r\n                    style={{ flex: 1 }}\r\n                    source={{ uri: this.props.user.displayPhoto }}\r\n                  />\r\n                </View>\r\n                <View style={styles.textInputCommentMainView}>\r\n                  <TextInput\r\n                    onChangeText={newCommentText => this.setState({ newCommentText })}\r\n                    placeholder={'Add Comment…'}\r\n                    value={newCommentText}\r\n                    style={styles.textinputComment}\r\n                  />\r\n                </View>\r\n                <TouchableOpacity\r\n                  disabled={!newCommentText.trim()}\r\n                  onPress={this.addNewComment}\r\n                  style={styles.sendIcon}>\r\n                  <Image style={styles.sendImage} source={AppImages.send} />\r\n                </TouchableOpacity>\r\n              </View>\r\n            </SafeAreaView>\r\n            <View style={styles.mainView}>\r\n              <View style={styles.memoriesMainView}>\r\n                <View style={styles.memoriesImageView}>\r\n                  <Image\r\n                    source={{ uri: memoryData.image }}\r\n                    style={styles.memoriesImage}\r\n                  />\r\n                  <View style={styles.headerMainView}>\r\n                    <View style={styles.BackButtonView}>\r\n                      <TouchableOpacity onPress={this.closeTapped}>\r\n                        <Image\r\n                          source={AppImages.arrowleft}\r\n                          style={styles.backArrowImg}\r\n                        />\r\n                      </TouchableOpacity>\r\n                    </View>\r\n                    <Text style={styles.commentsText}>Comments</Text>\r\n                  </View>\r\n                </View>\r\n                <View style={styles.memoriesBottomMainView}>\r\n                  <View style={styles.memoriesBottomFirstView}>\r\n                    <View style={styles.memoriesBottomProfileView}>\r\n                      <ImageBackground\r\n                        style={{ flex: 1 }}\r\n                        source={memoryData.userAvatar ? { uri: memoryData.userAvatar } : AppImages.loginImage}\r\n                      />\r\n                    </View>\r\n                    <View style={styles.memoriesBottomSecondView}>\r\n                      <View style={styles.memorisBottomCommentView}>\r\n                        <TouchableOpacity style={styles.commentsImageView}>\r\n                          <ImageBackground\r\n                            style={styles.commentsImage}\r\n                            resizeMode={'contain'}\r\n                            source={AppImages.comment}\r\n                          />\r\n                        </TouchableOpacity>\r\n                        <View style={styles.commentsCountView}>\r\n                          <Text\r\n                            style={styles.commentsCountTxt}\r\n                            adjustsFontSizeToFit\r\n                            numberOfLines={1}>\r\n                            {memoryData.commentsCounter ? memoryData.commentsCounter : null}\r\n                          </Text>\r\n                        </View>\r\n                      </View>\r\n                      <View style={styles.memorisBottomLikesView}>\r\n                        <TouchableOpacity style={styles.filledHeartImageView}>\r\n                          <ImageBackground\r\n                            resizeMode={'contain'}\r\n                            style={styles.filledHeartMainImage}\r\n                            source={(memoryData.likedByUsers &&\r\n                              (auth().currentUser && memoryData.likedByUsers.indexOf(auth().currentUser?.uid)) != -1) ?\r\n                              AppImages.filledHeart :\r\n                              AppImages.outlineHeart}\r\n                          // source={AppImages.filledHeart}\r\n                          />\r\n                        </TouchableOpacity>\r\n                        <View style={styles.postlikeCountView}>\r\n                          <Text\r\n                            style={styles.postlikeCountTxt}\r\n                            adjustsFontSizeToFit\r\n                            numberOfLines={1}>\r\n                            {memoryData.likedByUsers ? memoryData.likedByUsers.split()?.length : null}\r\n                          </Text>\r\n                        </View>\r\n                      </View>\r\n                      <View style={styles.postNameMainView}>\r\n                        <View style={styles.postNameView}>\r\n                          <Text\r\n                            style={styles.postNameTxt}\r\n                            adjustsFontSizeToFit\r\n                            numberOfLines={1}>\r\n                            {memoryData.userName}\r\n                          </Text>\r\n                        </View>\r\n                        <View style={styles.postTimeView}>\r\n                          <Text\r\n                            style={styles.postTimeTxt}\r\n                            adjustsFontSizeToFit\r\n                            numberOfLines={1}>\r\n                            {timeSince(memoryData.createdAt)}\r\n                          </Text>\r\n                        </View>\r\n                      </View>\r\n                    </View>\r\n                  </View>\r\n                </View>\r\n              </View>\r\n              <FlatList\r\n                style={styles.commentsFlatList}\r\n                data={commentsList.filter((c: any) => c.memoryId == memoryData.id)}\r\n                renderItem={this.commentList}\r\n                keyExtractor={(item) => item.id}\r\n              />\r\n            </View>\r\n          </View>\r\n        </View>\r\n      </View>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch: Function) => {\r\n  return {\r\n    getMemories: (memoryId: string) => dispatch(memoriesOperations.getCommentsByMemoryId(memoryId)),\r\n  };\r\n};\r\n\r\nconst mapStateToProps = (state: any) => {\r\n  return {\r\n    memories: state.memories.memories,\r\n    commentsList: state.memories.commentsOnMemory,\r\n    user: state.user.user,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Comments);\r\n// export default Comments;\r\n"]},"metadata":{},"sourceType":"script"}