{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _assertThisInitialized2 = _interopRequireDefault(require(\"@babel/runtime/helpers/assertThisInitialized\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _reactNativeImagePicker = _interopRequireDefault(require(\"react-native-image-picker\"));\n\nvar _reactRedux = require(\"react-redux\");\n\nvar _config = require(\"../../config\");\n\nvar _styles = _interopRequireDefault(require(\"./styles\"));\n\nvar _services = require(\"../../../services\");\n\nvar _auth = require(\"../../../../app/providers/auth\");\n\nvar _jsxFileName = \"C:\\\\Program Files\\\\nodejs\\\\ComeClosely\\\\app\\\\views\\\\screens\\\\PostMemory\\\\index.tsx\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nvar INITIAL_STATE = {\n  isLoading: false,\n  title: '',\n  description: '',\n  location: '',\n  dataSource: [],\n  tagList: [],\n  selected_category: null,\n  avatarSource: '',\n  avatarBackgroundColor: 'rgba(0,0,0,0)'\n};\nvar options = {\n  title: 'Choose Photo',\n  takePhotoButtonTitle: 'Camera',\n  chooseFromLibraryButtonTitle: 'Gallery',\n  mediaType: 'photo',\n  quality: 0.5,\n  storageOptions: {\n    skipBackup: true,\n    path: 'images'\n  }\n};\n\nvar PostMemory = function (_React$Component) {\n  (0, _inherits2.default)(PostMemory, _React$Component);\n\n  var _super = _createSuper(PostMemory);\n\n  function PostMemory(props) {\n    var _this;\n\n    (0, _classCallCheck2.default)(this, PostMemory);\n    _this = _super.call(this, props);\n\n    _this._handleCategorySelect = function (index) {\n      _this.setState({\n        selected_category: index\n      });\n    };\n\n    _this.setStateProperty = function (key) {\n      return function (value) {\n        _this.setState((0, _defineProperty2.default)({}, key, value));\n      };\n    };\n\n    _this.handleSubmit = function () {\n      var _this$state = _this.state,\n          title = _this$state.title,\n          description = _this$state.description,\n          location = _this$state.location,\n          avatarSource = _this$state.avatarSource,\n          selected_category = _this$state.selected_category;\n\n      _this.setState({\n        isLoading: true\n      });\n\n      if (title && avatarSource) {\n        _services.MemoryServices.saveMemory({\n          userId: _this.props.user.id,\n          userName: _this.props.user.name,\n          image: avatarSource,\n          title: title,\n          description: description,\n          location: location,\n          tagId: selected_category,\n          userAvatar: _this.props.user.displayPhoto\n        }).then(function () {\n          _this.setState((0, _extends2.default)({}, INITIAL_STATE));\n\n          _this.props.navigation.navigate('Home');\n        }).catch(function (e) {\n          _this.setState({\n            isLoading: false\n          });\n\n          _reactNative.Alert.alert('There was an error while uploading memory.\\n' + e.message);\n        });\n      } else {\n        _this.setState({\n          isLoading: false\n        });\n\n        _reactNative.Alert.alert('Some fields are missing.');\n      }\n    };\n\n    _this.tagListItem = function (data) {\n      return _react.default.createElement(_reactNative.TouchableOpacity, {\n        style: [_styles.default.eventTypeListItemView, {\n          backgroundColor: _this.state.selected_category === data.item.id ? '#FF2485' : 'white'\n        }],\n        onPress: function onPress() {\n          return _this._handleCategorySelect(data.item.id);\n        },\n        __self: (0, _assertThisInitialized2.default)(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 5\n        }\n      }, _react.default.createElement(_reactNative.Text, {\n        style: {\n          fontSize: 12,\n          alignSelf: 'center',\n          fontFamily: 'Gilroy-ExtraBold',\n          color: _this.state.selected_category === data.item.id ? 'white' : '#BEBEBE'\n        },\n        __self: (0, _assertThisInitialized2.default)(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 7\n        }\n      }, data.item.name));\n    };\n\n    _this.state = (0, _extends2.default)({}, INITIAL_STATE);\n    return _this;\n  }\n\n  (0, _createClass2.default)(PostMemory, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      _services.MemoryServices.getMemoryTags().then(function (tagList) {\n        if (Array.isArray(tagList)) {\n          _this2.setState({\n            tagList: tagList\n          });\n        }\n      }).catch(function (e) {\n        return console.error(e.message);\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var _this$state2 = this.state,\n          title = _this$state2.title,\n          description = _this$state2.description,\n          location = _this$state2.location,\n          avatarSource = _this$state2.avatarSource,\n          isLoading = _this$state2.isLoading;\n      return _react.default.createElement(_reactNative.View, {\n        style: _styles.default.container,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 7\n        }\n      }, _react.default.createElement(_reactNative.Image, {\n        style: _styles.default.backGroundImage,\n        source: _config.AppImages.homeNavigation,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 9\n        }\n      }), _react.default.createElement(_reactNative.View, {\n        style: _styles.default.postMemoryTitleMainView,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 9\n        }\n      }, _react.default.createElement(_reactNative.View, {\n        style: _styles.default.overlay,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 11\n        }\n      }, _react.default.createElement(_reactNative.View, {\n        style: _styles.default.postMemoryTitleChildView,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 13\n        }\n      }, _react.default.createElement(_reactNative.View, {\n        style: _styles.default.postMemoryTitleContainer,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 15\n        }\n      }, _react.default.createElement(_reactNative.Text, {\n        style: _styles.default.postMemoryText,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 17\n        }\n      }, \"Post a Memory\"), _react.default.createElement(_reactNative.View, {\n        style: _styles.default.backImageMainView,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 17\n        }\n      }, _react.default.createElement(_reactNative.TouchableOpacity, {\n        onPress: function onPress() {\n          _this3.props.navigation.goBack();\n        },\n        style: _styles.default.closeButtonView,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 19\n        }\n      }, _react.default.createElement(_reactNative.Image, {\n        source: _config.AppImages.close,\n        style: _styles.default.closeIcon,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 21\n        }\n      }))))))), _react.default.createElement(_reactNative.ScrollView, {\n        style: _styles.default.postMemoryScrollView,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 9\n        }\n      }, _react.default.createElement(_reactNative.View, {\n        style: _styles.default.postMemoryChildScrollView,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 11\n        }\n      }, _react.default.createElement(_reactNative.View, {\n        style: _styles.default.titleMainView,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 13\n        }\n      }, _react.default.createElement(_reactNative.View, {\n        style: _styles.default.titleImageMianView,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 15\n        }\n      }, _react.default.createElement(_reactNative.TouchableHighlight, {\n        style: _styles.default.dotsBorders,\n        underlayColor: \"rgba(0,0,0,0)\",\n        onPress: function onPress() {\n          _reactNativeImagePicker.default.showImagePicker(options, function (response) {\n            console.log('Response = ', response);\n\n            if (response.didCancel) {\n              console.log('User cancelled image picker');\n            } else if (response.error) {\n              console.log('ImagePicker Error: ', response.error);\n            } else if (response.customButton) {\n              console.log('User tapped custom button: ', response.customButton);\n            } else {\n              _this3.setState({\n                avatarSource: response.uri\n              });\n\n              _this3.setState({\n                avatarBackgroundColor: 'black'\n              });\n            }\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 17\n        }\n      }, _react.default.createElement(_reactNative.View, {\n        style: _styles.default.borderInsideView,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 19\n        }\n      }, _react.default.createElement(_reactNative.View, {\n        style: _styles.default.borderInsideView,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 21\n        }\n      }, _react.default.createElement(_reactNative.Image, {\n        source: _config.AppImages.camera,\n        style: _styles.default.image,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 23\n        }\n      })), _react.default.createElement(_reactNative.Image, {\n        source: {\n          uri: avatarSource\n        },\n        style: _styles.default.avatarImage,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 21\n        }\n      })))), _react.default.createElement(_reactNative.View, {\n        style: _styles.default.textInputMainView,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 15\n        }\n      }, _react.default.createElement(_reactNative.View, {\n        style: _styles.default.textInputTitleView,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 17\n        }\n      }, _react.default.createElement(_reactNative.Text, {\n        style: _styles.default.textTitleView,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 19\n        }\n      }, \"Title\")), _react.default.createElement(_reactNative.View, {\n        style: _styles.default.titleView,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 17\n        }\n      }, _react.default.createElement(_reactNative.TextInput, {\n        value: title,\n        onChangeText: this.setStateProperty('title'),\n        style: _styles.default.titleArea,\n        underlineColorAndroid: \"transparent\",\n        placeholder: \"Type something\",\n        placeholderTextColor: \"grey\",\n        textAlignVertical: 'top',\n        multiline: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 19\n        }\n      })))), _react.default.createElement(_reactNative.View, {\n        style: _styles.default.eventTypeMainView,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 13\n        }\n      }, _react.default.createElement(_reactNative.Text, {\n        style: _styles.default.eventTypeText,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 15\n        }\n      }, \"Tags\")), _react.default.createElement(_reactNative.View, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 13\n        }\n      }, _react.default.createElement(_reactNative.View, {\n        style: _styles.default.listcontainer,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 15\n        }\n      }, _react.default.createElement(_reactNative.FlatList, {\n        horizontal: true,\n        showsHorizontalScrollIndicator: false,\n        legacyImplementation: false,\n        data: this.state.tagList,\n        renderItem: function renderItem(item) {\n          return _this3.tagListItem(item);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 17\n        }\n      }))), _react.default.createElement(_reactNative.View, {\n        style: _styles.default.locationTitleMainView,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 13\n        }\n      }, _react.default.createElement(_reactNative.Text, {\n        style: _styles.default.loactionTitle,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 15\n        }\n      }, \"Location\")), _react.default.createElement(_reactNative.View, {\n        style: _styles.default.locationLineView,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 13\n        }\n      }, _react.default.createElement(_reactNative.View, {\n        style: _styles.default.locationMainView,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 15\n        }\n      }, _react.default.createElement(_reactNative.TextInput, {\n        value: location,\n        underlineColorAndroid: \"transparent\",\n        placeholder: \"Type something\",\n        placeholderTextColor: \"grey\",\n        onChangeText: this.setStateProperty('location'),\n        style: _styles.default.locationTextInputView,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 17\n        }\n      }), _react.default.createElement(_reactNative.Image, {\n        style: _styles.default.locationImageView,\n        source: _config.AppImages.mappin,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 252,\n          columnNumber: 17\n        }\n      }))), _react.default.createElement(_reactNative.View, {\n        style: _styles.default.descriptionMainView,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 258,\n          columnNumber: 13\n        }\n      }, _react.default.createElement(_reactNative.Text, {\n        style: _styles.default.descriptionText,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 259,\n          columnNumber: 15\n        }\n      }, \"Description\")), _react.default.createElement(_reactNative.View, {\n        style: _styles.default.descriptionView,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 261,\n          columnNumber: 13\n        }\n      }, _react.default.createElement(_reactNative.TextInput, {\n        value: description,\n        onChangeText: this.setStateProperty('description'),\n        style: _styles.default.textArea,\n        underlineColorAndroid: \"transparent\",\n        placeholder: \"Type something\",\n        placeholderTextColor: \"grey\",\n        textAlignVertical: 'top',\n        multiline: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 262,\n          columnNumber: 15\n        }\n      })), _react.default.createElement(_reactNative.View, {\n        style: _styles.default.postMemoryMainView,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 273,\n          columnNumber: 13\n        }\n      }, _react.default.createElement(_reactNative.TouchableOpacity, {\n        onPress: this.handleSubmit,\n        style: _styles.default.createEventButton,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 274,\n          columnNumber: 15\n        }\n      }, isLoading ? _react.default.createElement(_reactNative.ActivityIndicator, {\n        style: {\n          width: 160\n        },\n        color: \"white\",\n        size: \"small\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 276,\n          columnNumber: 19\n        }\n      }) : _react.default.createElement(_reactNative.Text, {\n        style: _styles.default.createEventButtonText,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 277,\n          columnNumber: 19\n        }\n      }, \"POST MEMORY\"))))));\n    }\n  }]);\n  return PostMemory;\n}(_react.default.Component);\n\nPostMemory.contextType = _auth.AuthContext;\n\nvar mapDispatchToProps = function mapDispatchToProps() {\n  return {};\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    user: state.user.user\n  };\n};\n\nvar _default = (0, _reactRedux.connect)(mapStateToProps, mapDispatchToProps)(PostMemory);\n\nexports.default = _default;","map":{"version":3,"sources":["C:/Program Files/nodejs/ComeClosely/app/views/screens/PostMemory/index.tsx"],"names":["INITIAL_STATE","isLoading","title","description","location","dataSource","tagList","selected_category","avatarSource","avatarBackgroundColor","options","takePhotoButtonTitle","chooseFromLibraryButtonTitle","mediaType","quality","storageOptions","skipBackup","path","PostMemory","props","_handleCategorySelect","index","setState","setStateProperty","key","value","handleSubmit","state","MemoryServices","saveMemory","userId","user","id","userName","name","image","tagId","userAvatar","displayPhoto","then","navigation","navigate","catch","e","Alert","alert","message","tagListItem","data","styles","eventTypeListItemView","backgroundColor","item","fontSize","alignSelf","fontFamily","color","getMemoryTags","Array","isArray","console","error","container","backGroundImage","AppImages","homeNavigation","postMemoryTitleMainView","overlay","postMemoryTitleChildView","postMemoryTitleContainer","postMemoryText","backImageMainView","goBack","closeButtonView","close","closeIcon","postMemoryScrollView","postMemoryChildScrollView","titleMainView","titleImageMianView","dotsBorders","ImagePicker","showImagePicker","response","log","didCancel","customButton","uri","borderInsideView","camera","avatarImage","textInputMainView","textInputTitleView","textTitleView","titleView","titleArea","eventTypeMainView","eventTypeText","listcontainer","locationTitleMainView","loactionTitle","locationLineView","locationMainView","locationTextInputView","locationImageView","mappin","descriptionMainView","descriptionText","descriptionView","textArea","postMemoryMainView","createEventButton","width","createEventButtonText","React","Component","contextType","AuthContext","mapDispatchToProps","mapStateToProps"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport {\r\n  View,\r\n  Text,\r\n  ScrollView,\r\n  Image,\r\n  FlatList,\r\n  TouchableOpacity,\r\n  TextInput,\r\n  TouchableHighlight,\r\n  Alert,\r\n  ActivityIndicator,\r\n} from 'react-native';\r\nimport ImagePicker, { ImagePickerOptions } from 'react-native-image-picker';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { AppImages } from '../../config';\r\nimport styles from './styles';\r\nimport { MemoryServices } from '../../../services';\r\nimport { AuthContext } from '../../../../app/providers/auth';\r\n\r\ninterface ComponentProp {\r\n  navigation: any;\r\n  user: any\r\n}\r\ninterface ComponentState {\r\n  isLoading: boolean,\r\n  title: string;\r\n  description: string;\r\n  location: string;\r\n  dataSource: [];\r\n  tagList: Array<string>;\r\n  selected_category: number | null;\r\n  avatarSource: string;\r\n  avatarBackgroundColor: string;\r\n}\r\nconst INITIAL_STATE: ComponentState = {\r\n  isLoading: false,\r\n  title: '',\r\n  description: '',\r\n  location: '',\r\n  dataSource: [],\r\n  tagList: [],\r\n  // tagList: ['party', 'food', 'Fashion', 'Business', 'Events'],\r\n  selected_category: null,\r\n  avatarSource: '',\r\n  avatarBackgroundColor: 'rgba(0,0,0,0)',\r\n};\r\n\r\nconst options: ImagePickerOptions = {\r\n  title: 'Choose Photo',\r\n  takePhotoButtonTitle: 'Camera',\r\n  chooseFromLibraryButtonTitle: 'Gallery',\r\n  mediaType: 'photo',\r\n  quality: 0.5,\r\n  storageOptions: {\r\n    skipBackup: true,\r\n    path: 'images',\r\n  },\r\n};\r\n\r\nclass PostMemory extends React.Component<ComponentProp, ComponentState> {\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = { ...INITIAL_STATE };\r\n  }\r\n\r\n  _handleCategorySelect = (index: number) => {\r\n    this.setState({ selected_category: index });\r\n  };\r\n\r\n  componentDidMount() {\r\n    MemoryServices.getMemoryTags()\r\n      .then(tagList => {\r\n        if (Array.isArray(tagList)) {\r\n          this.setState({ tagList })\r\n        }\r\n      })\r\n      .catch(e => console.error(e.message))\r\n  }\r\n  setStateProperty = (key: any) => (value: any) => {\r\n    this.setState({ [key]: value })\r\n  }\r\n\r\n  handleSubmit = () => {\r\n    const { title, description, location, avatarSource, selected_category } = this.state;\r\n    // console.log(this.props.currentUser.uid)\r\n    this.setState({ isLoading: true })\r\n    if (title && avatarSource) {\r\n      MemoryServices.saveMemory({\r\n        userId: this.props.user.id,\r\n        userName: this.props.user.name,\r\n        image: avatarSource,\r\n        title, description, location,\r\n        tagId: selected_category,\r\n        userAvatar: this.props.user.displayPhoto\r\n      })\r\n        .then(() => {\r\n          this.setState({ ...INITIAL_STATE })\r\n          this.props.navigation.navigate('Home')\r\n        })\r\n        .catch(e => {\r\n          this.setState({ isLoading: false })\r\n          Alert.alert('There was an error while uploading memory.\\n' + e.message)\r\n        })\r\n    }\r\n    else {\r\n      this.setState({ isLoading: false })\r\n      Alert.alert('Some fields are missing.')\r\n    }\r\n  }\r\n  tagListItem = (data: any) => (\r\n    <TouchableOpacity\r\n      style={[\r\n        styles.eventTypeListItemView,\r\n        // eslint-disable-next-line react-native/no-inline-styles\r\n        {\r\n          backgroundColor:\r\n            this.state.selected_category === data.item.id ? '#FF2485' : 'white',\r\n        },\r\n      ]}\r\n      onPress={() => this._handleCategorySelect(data.item.id)}>\r\n      <Text\r\n        // eslint-disable-next-line react-native/no-inline-styles\r\n        style={{\r\n          fontSize: 12,\r\n          alignSelf: 'center',\r\n          fontFamily: 'Gilroy-ExtraBold',\r\n          color:\r\n            this.state.selected_category === data.item.id ? 'white' : '#BEBEBE',\r\n        }}>\r\n        {data.item.name}\r\n      </Text>\r\n    </TouchableOpacity>\r\n  );\r\n\r\n  render() {\r\n    const { title, description, location, avatarSource, isLoading } = this.state;\r\n    return (\r\n      <View style={styles.container}>\r\n        <Image\r\n          style={styles.backGroundImage}\r\n          source={AppImages.homeNavigation}\r\n        />\r\n        <View style={styles.postMemoryTitleMainView}>\r\n          <View style={styles.overlay}>\r\n            <View style={styles.postMemoryTitleChildView}>\r\n              <View style={styles.postMemoryTitleContainer}>\r\n                <Text style={styles.postMemoryText}>Post a Memory</Text>\r\n                <View style={styles.backImageMainView}>\r\n                  <TouchableOpacity\r\n                    onPress={() => {\r\n                      this.props.navigation.goBack();\r\n                    }}\r\n                    style={styles.closeButtonView}>\r\n                    <Image source={AppImages.close} style={styles.closeIcon} />\r\n                  </TouchableOpacity>\r\n                </View>\r\n              </View>\r\n            </View>\r\n          </View>\r\n        </View>\r\n        <ScrollView style={styles.postMemoryScrollView}>\r\n          <View style={styles.postMemoryChildScrollView}>\r\n            <View style={styles.titleMainView}>\r\n              <View style={styles.titleImageMianView}>\r\n                <TouchableHighlight\r\n                  style={styles.dotsBorders}\r\n                  underlayColor=\"rgba(0,0,0,0)\"\r\n                  onPress={() => {\r\n                    ImagePicker.showImagePicker(options, (response) => {\r\n                      console.log('Response = ', response);\r\n                      if (response.didCancel) {\r\n                        console.log('User cancelled image picker');\r\n                      } else if (response.error) {\r\n                        console.log('ImagePicker Error: ', response.error);\r\n                      } else if (response.customButton) {\r\n                        console.log(\r\n                          'User tapped custom button: ',\r\n                          response.customButton,\r\n                        );\r\n                      } else {\r\n                        // const source = { uri: response.uri };\r\n                        // You can also display the image using data:\r\n                        this.setState({\r\n                          avatarSource: response.uri,\r\n                        });\r\n                        this.setState({\r\n                          avatarBackgroundColor: 'black',\r\n                        });\r\n                      }\r\n                    });\r\n                  }}>\r\n                  <View style={styles.borderInsideView}>\r\n                    <View style={styles.borderInsideView}>\r\n                      <Image source={AppImages.camera} style={styles.image} />\r\n                    </View>\r\n                    <Image\r\n                      source={{ uri: avatarSource }}\r\n                      style={styles.avatarImage}\r\n                    />\r\n                  </View>\r\n                </TouchableHighlight>\r\n              </View>\r\n              <View style={styles.textInputMainView}>\r\n                <View style={styles.textInputTitleView}>\r\n                  <Text style={styles.textTitleView}>Title</Text>\r\n                </View>\r\n                <View style={styles.titleView}>\r\n                  <TextInput\r\n                    value={title}\r\n                    onChangeText={this.setStateProperty('title')}\r\n                    style={styles.titleArea}\r\n                    underlineColorAndroid=\"transparent\"\r\n                    placeholder=\"Type something\"\r\n                    placeholderTextColor=\"grey\"\r\n                    textAlignVertical={'top'}\r\n                    multiline={true}\r\n                  />\r\n                </View>\r\n              </View>\r\n            </View>\r\n            <View style={styles.eventTypeMainView}>\r\n              <Text style={styles.eventTypeText}>Tags</Text>\r\n            </View>\r\n            <View>\r\n              <View style={styles.listcontainer}>\r\n                <FlatList\r\n                  horizontal\r\n                  showsHorizontalScrollIndicator={false}\r\n                  legacyImplementation={false}\r\n                  data={this.state.tagList}\r\n                  renderItem={(item) => this.tagListItem(item)}\r\n                // keyExtractor={item => item.id.toString()}\r\n                />\r\n              </View>\r\n            </View>\r\n            <View style={styles.locationTitleMainView}>\r\n              <Text style={styles.loactionTitle}>Location</Text>\r\n            </View>\r\n            <View style={styles.locationLineView}>\r\n              <View style={styles.locationMainView}>\r\n                <TextInput\r\n                  value={location}\r\n                  underlineColorAndroid=\"transparent\"\r\n                  placeholder=\"Type something\"\r\n                  placeholderTextColor=\"grey\"\r\n                  onChangeText={this.setStateProperty('location')}\r\n                  style={styles.locationTextInputView}>\r\n                  {/* Grand Canyon Nation */}\r\n                </TextInput>\r\n                <Image\r\n                  style={styles.locationImageView}\r\n                  source={AppImages.mappin}\r\n                />\r\n              </View>\r\n            </View>\r\n            <View style={styles.descriptionMainView}>\r\n              <Text style={styles.descriptionText}>Description</Text>\r\n            </View>\r\n            <View style={styles.descriptionView}>\r\n              <TextInput\r\n                value={description}\r\n                onChangeText={this.setStateProperty('description')}\r\n                style={styles.textArea}\r\n                underlineColorAndroid=\"transparent\"\r\n                placeholder=\"Type something\"\r\n                placeholderTextColor=\"grey\"\r\n                textAlignVertical={'top'}\r\n                multiline={true}\r\n              />\r\n            </View>\r\n            <View style={styles.postMemoryMainView}>\r\n              <TouchableOpacity onPress={this.handleSubmit} style={styles.createEventButton}>\r\n                {isLoading ?\r\n                  <ActivityIndicator style={{ width: 160 }} color=\"white\" size=\"small\" /> :\r\n                  <Text style={styles.createEventButtonText}>POST MEMORY</Text>\r\n                }\r\n              </TouchableOpacity>\r\n            </View>\r\n          </View>\r\n        </ScrollView>\r\n      </View>\r\n    );\r\n  }\r\n}\r\nPostMemory.contextType = AuthContext;\r\n\r\nconst mapDispatchToProps = () => {\r\n  return {\r\n  };\r\n};\r\n\r\nconst mapStateToProps = (state: any) => {\r\n  // console.log(state.user.)\r\n  return {\r\n    user: state.user.user,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(PostMemory);\r\n// function WrapPostMemory(props: any) {\r\n//   return (\r\n//     <AuthContext.Consumer>\r\n//       {/* <AuthProvider> */}\r\n//       {({ currentUser, isLoading }) => (\r\n//         <PostMemory currentUser={currentUser} {...props} />\r\n//       )}\r\n//       {/* </AuthProvider> */}\r\n//     </AuthContext.Consumer>\r\n//   )\r\n// }\r\n// export default WrapPostMemory;\r\n// export default PostMemory;\r\n"]},"metadata":{},"sourceType":"script"}