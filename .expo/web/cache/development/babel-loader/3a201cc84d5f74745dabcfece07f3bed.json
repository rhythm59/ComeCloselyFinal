{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _reactNativeTextinputWithIcons = _interopRequireDefault(require(\"react-native-textinput-with-icons\"));\n\nvar _reactNativeElements = require(\"react-native-elements\");\n\nvar _formik = require(\"formik\");\n\nvar Yup = _interopRequireWildcard(require(\"yup\"));\n\nrequire(\"react-native-gesture-handler\");\n\nvar _styles = _interopRequireDefault(require(\"./styles\"));\n\nvar _FormButton = _interopRequireDefault(require(\"../../components/FormButton\"));\n\nvar _FormFieldWrapper = _interopRequireDefault(require(\"../../components/FormFieldWrapper\"));\n\nvar _jsxFileName = \"C:\\\\Program Files\\\\nodejs\\\\ComeClosely\\\\app\\\\views\\\\screens\\\\SignUp\\\\index.tsx\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nvar INITIAL_STATE = {\n  email: '',\n  name: '',\n  phone: '',\n  password: '',\n  confirmPassword: ''\n};\nvar validationSchema = Yup.object().shape({\n  name: Yup.string().label('Name').required('Please enter your name').min(3, 'Must have at least 3 characters').max(100, 'Must have at most 100 characters'),\n  phone: Yup.string().label('Phone').required('Please enter your Phone Number'),\n  email: Yup.string().label('Email').required('Please enter your email').email('Enter a valid email'),\n  password: Yup.string().label('Password').required('Please enter your password'),\n  confirmPassword: Yup.string().label('Confirm Password').required('Please enter your password again').test('passwords-match', 'Passwords must match', function (value) {\n    return this.parent.password === value;\n  })\n});\n\nvar SignUp = function (_React$Component) {\n  (0, _inherits2.default)(SignUp, _React$Component);\n\n  var _super = _createSuper(SignUp);\n\n  function SignUp(props) {\n    var _this;\n\n    (0, _classCallCheck2.default)(this, SignUp);\n    _this = _super.call(this, props);\n\n    _this.handleSubmit = function _callee(values) {\n      return _regenerator.default.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _this.props.navigation.navigate('UploadProfile', values);\n\n            case 1:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    return _this;\n  }\n\n  (0, _createClass2.default)(SignUp, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return _react.default.createElement(_reactNative.KeyboardAvoidingView, {\n        behavior: _reactNative.Platform.OS === 'ios' ? 'padding' : undefined,\n        style: _styles.default.mainViewContainer,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 7\n        }\n      }, _react.default.createElement(_reactNative.ScrollView, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 9\n        }\n      }, _react.default.createElement(_reactNative.SafeAreaView, {\n        style: _styles.default.mainView,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }\n      }, _react.default.createElement(_reactNative.View, {\n        style: _styles.default.titleViewContainer,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 13\n        }\n      }, _react.default.createElement(_reactNative.Text, {\n        style: _styles.default.titleView,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 15\n        }\n      }, _react.default.createElement(_reactNative.Text, {\n        style: _styles.default.title,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 17\n        }\n      }, \"Come\"), _react.default.createElement(_reactNative.Text, {\n        style: _styles.default.titleColor,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 17\n        }\n      }, \"Closely\"))), _react.default.createElement(_formik.Formik, {\n        initialValues: INITIAL_STATE,\n        validationSchema: validationSchema,\n        onSubmit: function onSubmit(values) {\n          _this2.handleSubmit(values);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 13\n        }\n      }, function (formikProps) {\n        return _react.default.createElement(_react.Fragment, {\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 17\n          }\n        }, _react.default.createElement(_reactNative.View, {\n          style: _styles.default.topView,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 19\n          }\n        }, _react.default.createElement(_FormFieldWrapper.default, {\n          formikProps: formikProps,\n          formikKey: \"email\",\n          containerStyles: _styles.default.fieldWrapper,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 21\n          }\n        }, _react.default.createElement(_reactNativeTextinputWithIcons.default, {\n          style: _styles.default.textInput,\n          color: \"#515C6F\",\n          underlineActiveColor: \"#FF2485\",\n          fontFamily: \"Poppins-Regular\",\n          label: \"Email Address\",\n          labelColor: \"#D4D4D4\",\n          labelActiveColor: \"#FF2485\",\n          leftIcon: \"email-outline\",\n          leftIconType: \"material\",\n          mode: \"outlined\",\n          leftIconColor: \"#707070\",\n          value: formikProps.values.email,\n          onChangeText: formikProps.handleChange('email'),\n          onBlur: formikProps.handleBlur('email'),\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 23\n          }\n        })), _react.default.createElement(_FormFieldWrapper.default, {\n          formikProps: formikProps,\n          formikKey: \"name\",\n          containerStyles: _styles.default.fieldWrapper,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 21\n          }\n        }, _react.default.createElement(_reactNativeTextinputWithIcons.default, {\n          style: _styles.default.textInput,\n          color: \"#515C6F\",\n          underlineActiveColor: \"#FF2485\",\n          fontFamily: \"Poppins-Regular\",\n          label: \"Name\",\n          labelColor: \"#D4D4D4\",\n          labelActiveColor: \"#FF2485\",\n          leftIcon: \"account-outline\",\n          leftIconType: \"material\",\n          mode: \"outlined\",\n          leftIconColor: \"#707070\",\n          value: formikProps.values.name,\n          onChangeText: formikProps.handleChange('name'),\n          onBlur: formikProps.handleBlur('name'),\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 23\n          }\n        })), _react.default.createElement(_FormFieldWrapper.default, {\n          formikProps: formikProps,\n          formikKey: \"phone\",\n          containerStyles: _styles.default.fieldWrapper,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 21\n          }\n        }, _react.default.createElement(_reactNativeTextinputWithIcons.default, {\n          style: _styles.default.textInput,\n          color: \"#515C6F\",\n          underlineActiveColor: \"#FF2485\",\n          fontFamily: \"Poppins-Regular\",\n          label: \"Phone Number\",\n          labelColor: \"#D4D4D4\",\n          labelActiveColor: \"#FF2485\",\n          leftIcon: \"phone-outline\",\n          leftIconType: \"material\",\n          mode: \"outlined\",\n          leftIconColor: \"#707070\",\n          value: formikProps.values.phone,\n          onChangeText: formikProps.handleChange('phone'),\n          onBlur: formikProps.handleBlur('phone'),\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 23\n          }\n        })), _react.default.createElement(_FormFieldWrapper.default, {\n          formikProps: formikProps,\n          formikKey: \"password\",\n          containerStyles: _styles.default.fieldWrapper,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 21\n          }\n        }, _react.default.createElement(_reactNativeTextinputWithIcons.default, {\n          style: _styles.default.textInput,\n          color: \"#515C6F\",\n          underlineActiveColor: \"#FF2485\",\n          fontFamily: \"Poppins-Regular\",\n          label: \"Password\",\n          labelColor: \"#D4D4D4\",\n          labelActiveColor: \"#FF2485\",\n          leftIcon: \"lock\",\n          leftIconType: \"awesome\",\n          mode: \"outlined\",\n          leftIconColor: \"#707070\",\n          secureTextEntry: true,\n          value: formikProps.values.password,\n          onChangeText: formikProps.handleChange('password'),\n          onBlur: formikProps.handleBlur('password'),\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 23\n          }\n        })), _react.default.createElement(_FormFieldWrapper.default, {\n          formikProps: formikProps,\n          formikKey: \"confirmPassword\",\n          containerStyles: _styles.default.fieldWrapper,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 21\n          }\n        }, _react.default.createElement(_reactNativeTextinputWithIcons.default, {\n          style: _styles.default.textInput,\n          color: \"#515C6F\",\n          underlineActiveColor: \"#FF2485\",\n          fontFamily: \"Poppins-Regular\",\n          label: \"Confirm Password\",\n          labelColor: \"#D4D4D4\",\n          labelActiveColor: \"#FF2485\",\n          leftIcon: \"lock\",\n          leftIconType: \"awesome\",\n          mode: \"outlined\",\n          leftIconColor: \"#707070\",\n          secureTextEntry: true,\n          value: formikProps.values.confirmPassword,\n          onChangeText: formikProps.handleChange('confirmPassword'),\n          onBlur: formikProps.handleBlur('confirmPassword'),\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 23\n          }\n        }))), _react.default.createElement(_reactNative.View, {\n          style: _styles.default.centerView,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 19\n          }\n        }, _react.default.createElement(_reactNative.View, {\n          style: _styles.default.buttonSubmitView,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 210,\n            columnNumber: 21\n          }\n        }, _react.default.createElement(_FormButton.default, {\n          title: \"NEXT STEP\",\n          containerStyles: _styles.default.buttonSubmit,\n          disabled: !formikProps.isValid,\n          onPress: formikProps.handleSubmit,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 23\n          }\n        })), _react.default.createElement(_reactNative.View, {\n          style: _styles.default.bottomView,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 220,\n            columnNumber: 21\n          }\n        }, _react.default.createElement(_reactNative.View, {\n          style: _styles.default.socialView,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 221,\n            columnNumber: 23\n          }\n        }, _react.default.createElement(_reactNativeElements.SocialIcon, {\n          style: _styles.default.buttonFacebook,\n          button: true,\n          type: \"facebook\",\n          iconSize: 20,\n          onPress: function onPress() {},\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 222,\n            columnNumber: 25\n          }\n        }), _react.default.createElement(_reactNativeElements.SocialIcon, {\n          style: _styles.default.buttonTwitter,\n          iconSize: 20,\n          button: true,\n          type: \"twitter\",\n          onPress: function onPress() {},\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 232,\n            columnNumber: 25\n          }\n        }))), _react.default.createElement(_reactNative.View, {\n          style: _styles.default.bottomTextView,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 244,\n            columnNumber: 21\n          }\n        }, _react.default.createElement(_reactNative.Text, {\n          style: _styles.default.bottomText,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 245,\n            columnNumber: 23\n          }\n        }, \"By creating an account, you agree to our\"), _react.default.createElement(_reactNative.View, {\n          style: _styles.default.termsView,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 249,\n            columnNumber: 23\n          }\n        }, _react.default.createElement(_reactNative.TouchableOpacity, {\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 250,\n            columnNumber: 25\n          }\n        }, _react.default.createElement(_reactNative.Text, {\n          style: _styles.default.textTerms,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 251,\n            columnNumber: 27\n          }\n        }, \"Terms of Service\")), _react.default.createElement(_reactNative.Text, {\n          style: _styles.default.and,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 253,\n            columnNumber: 25\n          }\n        }, \"and\"), _react.default.createElement(_reactNative.TouchableOpacity, {\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 254,\n            columnNumber: 25\n          }\n        }, _react.default.createElement(_reactNative.Text, {\n          style: _styles.default.textTerms,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 255,\n            columnNumber: 27\n          }\n        }, \"Privacy Policy\"))))));\n      }))));\n    }\n  }]);\n  return SignUp;\n}(_react.default.Component);\n\nvar _default = SignUp;\nexports.default = _default;","map":{"version":3,"sources":["C:/Program Files/nodejs/ComeClosely/app/views/screens/SignUp/index.tsx"],"names":["INITIAL_STATE","email","name","phone","password","confirmPassword","validationSchema","Yup","object","shape","string","label","required","min","max","test","value","parent","SignUp","props","handleSubmit","values","navigation","navigate","Platform","OS","undefined","styles","mainViewContainer","mainView","titleViewContainer","titleView","title","titleColor","formikProps","topView","fieldWrapper","textInput","handleChange","handleBlur","centerView","buttonSubmitView","buttonSubmit","isValid","bottomView","socialView","buttonFacebook","buttonTwitter","bottomTextView","bottomText","termsView","textTerms","and","React","Component"],"mappings":"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","sourcesContent":["import React, {Fragment} from 'react';\nimport {\n  Platform,\n  View,\n  Text,\n  SafeAreaView,\n  TouchableOpacity,\n  KeyboardAvoidingView,\n  ScrollView,\n} from 'react-native';\n\nimport TextInput from 'react-native-textinput-with-icons';\nimport {SocialIcon} from 'react-native-elements';\nimport {Formik} from 'formik';\nimport * as Yup from 'yup';\nimport 'react-native-gesture-handler';\n\nimport styles from './styles';\nimport FormButton from '../../components/FormButton';\nimport FormFieldWrapper from '../../components/FormFieldWrapper';\n\ninterface ComponentProp {\n  navigation: any;\n}\ninterface ComponentState {\n  email: string;\n  name: string;\n  phone: string;\n  password: string;\n  confirmPassword: string;\n}\nconst INITIAL_STATE: ComponentState = {\n  email: '',\n  name: '',\n  phone: '',\n  password: '',\n  confirmPassword: '',\n};\n\nconst validationSchema = Yup.object().shape({\n  name: Yup.string()\n    .label('Name')\n    .required('Please enter your name')\n    .min(3, 'Must have at least 3 characters')\n    .max(100, 'Must have at most 100 characters'),\n  phone: Yup.string().label('Phone').required('Please enter your Phone Number'),\n  email: Yup.string()\n    .label('Email')\n    .required('Please enter your email')\n    .email('Enter a valid email'),\n  password: Yup.string()\n    .label('Password')\n    .required('Please enter your password'),\n  confirmPassword: Yup.string()\n    .label('Confirm Password')\n    .required('Please enter your password again')\n    .test('passwords-match', 'Passwords must match', function (value) {\n      return this.parent.password === value;\n    }),\n});\n\nclass SignUp extends React.Component<ComponentProp, ComponentState> {\n  constructor(props: any) {\n    super(props);\n  }\n\n  handleSubmit = async (values: ComponentState) => {\n    this.props.navigation.navigate('UploadProfile', values);\n  };\n\n  render() {\n    return (\n      <KeyboardAvoidingView\n        behavior={Platform.OS === 'ios' ? 'padding' : undefined}\n        style={styles.mainViewContainer}>\n        <ScrollView>\n          <SafeAreaView style={styles.mainView}>\n            <View style={styles.titleViewContainer}>\n              <Text style={styles.titleView}>\n                <Text style={styles.title}>Come</Text>\n                <Text style={styles.titleColor}>Closely</Text>\n              </Text>\n            </View>\n\n            <Formik\n              initialValues={INITIAL_STATE}\n              validationSchema={validationSchema}\n              onSubmit={(values) => {\n                this.handleSubmit(values);\n              }}>\n              {(formikProps) => (\n                <Fragment>\n                  <View style={styles.topView}>\n                    <FormFieldWrapper\n                      formikProps={formikProps}\n                      formikKey=\"email\"\n                      containerStyles={styles.fieldWrapper}>\n                      <TextInput\n                        style={styles.textInput}\n                        color=\"#515C6F\"\n                        underlineActiveColor=\"#FF2485\"\n                        fontFamily=\"Poppins-Regular\"\n                        label=\"Email Address\"\n                        labelColor=\"#D4D4D4\"\n                        labelActiveColor=\"#FF2485\"\n                        leftIcon=\"email-outline\"\n                        leftIconType=\"material\"\n                        mode=\"outlined\"\n                        leftIconColor=\"#707070\"\n                        value={formikProps.values.email}\n                        onChangeText={formikProps.handleChange('email')}\n                        onBlur={formikProps.handleBlur('email')}\n                      />\n                    </FormFieldWrapper>\n\n                    <FormFieldWrapper\n                      formikProps={formikProps}\n                      formikKey=\"name\"\n                      containerStyles={styles.fieldWrapper}>\n                      <TextInput\n                        style={styles.textInput}\n                        color=\"#515C6F\"\n                        underlineActiveColor=\"#FF2485\"\n                        fontFamily=\"Poppins-Regular\"\n                        label=\"Name\"\n                        labelColor=\"#D4D4D4\"\n                        labelActiveColor=\"#FF2485\"\n                        leftIcon=\"account-outline\"\n                        leftIconType=\"material\"\n                        mode=\"outlined\"\n                        leftIconColor=\"#707070\"\n                        value={formikProps.values.name}\n                        onChangeText={formikProps.handleChange('name')}\n                        onBlur={formikProps.handleBlur('name')}\n                      />\n                    </FormFieldWrapper>\n\n                    <FormFieldWrapper\n                      formikProps={formikProps}\n                      formikKey=\"phone\"\n                      containerStyles={styles.fieldWrapper}>\n                      <TextInput\n                        style={styles.textInput}\n                        color=\"#515C6F\"\n                        underlineActiveColor=\"#FF2485\"\n                        fontFamily=\"Poppins-Regular\"\n                        label=\"Phone Number\"\n                        labelColor=\"#D4D4D4\"\n                        labelActiveColor=\"#FF2485\"\n                        leftIcon=\"phone-outline\"\n                        leftIconType=\"material\"\n                        mode=\"outlined\"\n                        leftIconColor=\"#707070\"\n                        value={formikProps.values.phone}\n                        onChangeText={formikProps.handleChange('phone')}\n                        onBlur={formikProps.handleBlur('phone')}\n                      />\n                    </FormFieldWrapper>\n\n                    <FormFieldWrapper\n                      formikProps={formikProps}\n                      formikKey=\"password\"\n                      containerStyles={styles.fieldWrapper}>\n                      <TextInput\n                        style={styles.textInput}\n                        color=\"#515C6F\"\n                        underlineActiveColor=\"#FF2485\"\n                        fontFamily=\"Poppins-Regular\"\n                        label=\"Password\"\n                        labelColor=\"#D4D4D4\"\n                        labelActiveColor=\"#FF2485\"\n                        leftIcon=\"lock\"\n                        leftIconType=\"awesome\"\n                        mode=\"outlined\"\n                        leftIconColor=\"#707070\"\n                        secureTextEntry={true}\n                        value={formikProps.values.password}\n                        onChangeText={formikProps.handleChange('password')}\n                        onBlur={formikProps.handleBlur('password')}\n                      />\n                    </FormFieldWrapper>\n\n                    <FormFieldWrapper\n                      formikProps={formikProps}\n                      formikKey=\"confirmPassword\"\n                      containerStyles={styles.fieldWrapper}>\n                      <TextInput\n                        style={styles.textInput}\n                        color=\"#515C6F\"\n                        underlineActiveColor=\"#FF2485\"\n                        fontFamily=\"Poppins-Regular\"\n                        label=\"Confirm Password\"\n                        labelColor=\"#D4D4D4\"\n                        labelActiveColor=\"#FF2485\"\n                        leftIcon=\"lock\"\n                        leftIconType=\"awesome\"\n                        mode=\"outlined\"\n                        leftIconColor=\"#707070\"\n                        secureTextEntry={true}\n                        value={formikProps.values.confirmPassword}\n                        onChangeText={formikProps.handleChange(\n                          'confirmPassword',\n                        )}\n                        onBlur={formikProps.handleBlur('confirmPassword')}\n                      />\n                    </FormFieldWrapper>\n                  </View>\n\n                  <View style={styles.centerView}>\n                    <View style={styles.buttonSubmitView}>\n                      <FormButton\n                        title=\"NEXT STEP\"\n                        containerStyles={styles.buttonSubmit}\n                        disabled={!formikProps.isValid}\n                        onPress={formikProps.handleSubmit}\n                      />\n                    </View>\n\n                    {/* social icon  */}\n                    <View style={styles.bottomView}>\n                      <View style={styles.socialView}>\n                        <SocialIcon\n                          style={styles.buttonFacebook}\n                          button\n                          type=\"facebook\"\n                          iconSize={20}\n                          onPress={() => {\n                            // alert('facebook');\n                          }}\n                        />\n\n                        <SocialIcon\n                          style={styles.buttonTwitter}\n                          iconSize={20}\n                          button\n                          type=\"twitter\"\n                          onPress={() => {\n                            // alert('twitter');\n                          }}\n                        />\n                      </View>\n                    </View>\n\n                    <View style={styles.bottomTextView}>\n                      <Text style={styles.bottomText}>\n                        By creating an account, you agree to our\n                      </Text>\n\n                      <View style={styles.termsView}>\n                        <TouchableOpacity>\n                          <Text style={styles.textTerms}>Terms of Service</Text>\n                        </TouchableOpacity>\n                        <Text style={styles.and}>and</Text>\n                        <TouchableOpacity>\n                          <Text style={styles.textTerms}>Privacy Policy</Text>\n                        </TouchableOpacity>\n                      </View>\n                    </View>\n                  </View>\n                </Fragment>\n              )}\n            </Formik>\n          </SafeAreaView>\n        </ScrollView>\n      </KeyboardAvoidingView>\n    );\n  }\n}\n\nexport default SignUp;\n"]},"metadata":{},"sourceType":"script"}