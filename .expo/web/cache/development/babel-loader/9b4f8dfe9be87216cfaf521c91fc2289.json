{"ast":null,"code":"var _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _ProgressBar = _interopRequireDefault(require(\"./ProgressBar\"));\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Program Files\\\\nodejs\\\\ComeClosely\\\\app\\\\views\\\\screens\\\\Messenger\\\\components\\\\ProgressArray.tsx\";\n\nvar ProgressArray = function ProgressArray(props) {\n  var opacity = (0, _react.useRef)(new _reactNative.Animated.Value(1)).current;\n  (0, _react.useEffect)(function () {\n    if (props.pause) {\n      _reactNative.Animated.timing(opacity, {\n        toValue: 0,\n        duration: 300,\n        useNativeDriver: false\n      }).start();\n    } else {\n      _reactNative.Animated.timing(opacity, {\n        toValue: 1,\n        duration: 300,\n        useNativeDriver: false\n      }).start();\n    }\n  }, [opacity, props.pause]);\n  return _react.default.createElement(_reactNative.Animated.View, {\n    style: [styles.progressBarArray, {\n      opacity: opacity\n    }],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 5\n    }\n  }, props.length.map(function (i, index) {\n    return _react.default.createElement(_ProgressBar.default, {\n      index: index,\n      duration: props.duration || 3,\n      isNewStory: props.isNewStory,\n      currentIndex: props.currentIndex,\n      next: props.next,\n      active: i === props.currentIndex ? 1 : i < props.currentIndex ? 2 : 0,\n      isLoaded: props.isLoaded,\n      pause: props.pause,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }\n    });\n  }));\n};\n\nvar styles = _reactNative.StyleSheet.create({\n  progressBarArray: {\n    flexDirection: 'row',\n    position: 'absolute',\n    top: 30,\n    width: '98%',\n    height: 10,\n    justifyContent: 'space-between',\n    alignItems: 'center'\n  }\n});\n\nvar _default = ProgressArray;\nexports.default = _default;","map":{"version":3,"sources":["C:/Program Files/nodejs/ComeClosely/app/views/screens/Messenger/components/ProgressArray.tsx"],"names":["ProgressArray","props","opacity","Animated","Value","current","pause","timing","toValue","duration","useNativeDriver","start","styles","progressBarArray","length","map","i","index","isNewStory","currentIndex","next","isLoaded","StyleSheet","create","flexDirection","position","top","width","height","justifyContent","alignItems"],"mappings":";;;;;;;;;AAAA;;AACA;;AACA;;;;;AAgBA,IAAMA,aAAa,GAAG,SAAhBA,aAAgB,CAACC,KAAD,EAA0B;AAC9C,MAAMC,OAAO,GAAG,mBAAO,IAAIC,sBAASC,KAAb,CAAmB,CAAnB,CAAP,EAA8BC,OAA9C;AAEA,wBAAU,YAAM;AACd,QAAIJ,KAAK,CAACK,KAAV,EAAiB;AACfH,4BAASI,MAAT,CAAgBL,OAAhB,EAAyB;AACvBM,QAAAA,OAAO,EAAE,CADc;AAEvBC,QAAAA,QAAQ,EAAE,GAFa;AAGvBC,QAAAA,eAAe,EAAE;AAHM,OAAzB,EAKGC,KALH;AAMD,KAPD,MAOO;AACLR,4BAASI,MAAT,CAAgBL,OAAhB,EAAyB;AACvBM,QAAAA,OAAO,EAAE,CADc;AAEvBC,QAAAA,QAAQ,EAAE,GAFa;AAGvBC,QAAAA,eAAe,EAAE;AAHM,OAAzB,EAKGC,KALH;AAMD;AACF,GAhBD,EAgBG,CAACT,OAAD,EAAUD,KAAK,CAACK,KAAhB,CAhBH;AAkBA,SACE,6BAAC,qBAAD,CAAU,IAAV;AAAe,IAAA,KAAK,EAAE,CAACM,MAAM,CAACC,gBAAR,EAA0B;AAACX,MAAAA,OAAO,EAAPA;AAAD,KAA1B,CAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGD,KAAK,CAACa,MAAN,CAAaC,GAAb,CAAiB,UAACC,CAAD,EAASC,KAAT;AAAA,WAChB,6BAAC,oBAAD;AACE,MAAA,KAAK,EAAEA,KADT;AAEE,MAAA,QAAQ,EAAEhB,KAAK,CAACQ,QAAN,IAAkB,CAF9B;AAGE,MAAA,UAAU,EAAER,KAAK,CAACiB,UAHpB;AAIE,MAAA,YAAY,EAAEjB,KAAK,CAACkB,YAJtB;AAKE,MAAA,IAAI,EAAElB,KAAK,CAACmB,IALd;AAOE,MAAA,MAAM,EAAEJ,CAAC,KAAKf,KAAK,CAACkB,YAAZ,GAA2B,CAA3B,GAA+BH,CAAC,GAAGf,KAAK,CAACkB,YAAV,GAAyB,CAAzB,GAA6B,CAPtE;AAQE,MAAA,QAAQ,EAAElB,KAAK,CAACoB,QARlB;AASE,MAAA,KAAK,EAAEpB,KAAK,CAACK,KATf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADgB;AAAA,GAAjB,CADH,CADF;AAiBD,CAtCD;;AAwCA,IAAMM,MAAM,GAAGU,wBAAWC,MAAX,CAAkB;AAC/BV,EAAAA,gBAAgB,EAAE;AAChBW,IAAAA,aAAa,EAAE,KADC;AAEhBC,IAAAA,QAAQ,EAAE,UAFM;AAGhBC,IAAAA,GAAG,EAAE,EAHW;AAIhBC,IAAAA,KAAK,EAAE,KAJS;AAKhBC,IAAAA,MAAM,EAAE,EALQ;AAMhBC,IAAAA,cAAc,EAAE,eANA;AAOhBC,IAAAA,UAAU,EAAE;AAPI;AADa,CAAlB,CAAf;;eAYe9B,a","sourcesContent":["import React, {useEffect, useRef} from 'react';\nimport {Animated, StyleSheet} from 'react-native';\nimport ProgressBar from './ProgressBar';\nimport {StoryI} from '../types';\n\ninterface ComponentProp {\n  pause: boolean;\n  duration: number;\n  currentIndex: number;\n  isNewStory: boolean;\n  isLoaded: boolean;\n  stories: Array<StoryI>;\n  currentStory: StoryI;\n  length: any;\n  next: any;\n  progress: any;\n}\n\nconst ProgressArray = (props: ComponentProp) => {\n  const opacity = useRef(new Animated.Value(1)).current;\n\n  useEffect(() => {\n    if (props.pause) {\n      Animated.timing(opacity, {\n        toValue: 0,\n        duration: 300,\n        useNativeDriver: false,\n        //timing: 300,\n      }).start();\n    } else {\n      Animated.timing(opacity, {\n        toValue: 1,\n        duration: 300,\n        useNativeDriver: false,\n        //timing: 300,\n      }).start();\n    }\n  }, [opacity, props.pause]);\n\n  return (\n    <Animated.View style={[styles.progressBarArray, {opacity}]}>\n      {props.length.map((i: any, index: number) => (\n        <ProgressBar\n          index={index}\n          duration={props.duration || 3}\n          isNewStory={props.isNewStory}\n          currentIndex={props.currentIndex}\n          next={props.next}\n          /* length={props.stories.length} */\n          active={i === props.currentIndex ? 1 : i < props.currentIndex ? 2 : 0}\n          isLoaded={props.isLoaded}\n          pause={props.pause}\n        />\n      ))}\n    </Animated.View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  progressBarArray: {\n    flexDirection: 'row',\n    position: 'absolute',\n    top: 30,\n    width: '98%',\n    height: 10,\n    justifyContent: 'space-between',\n    alignItems: 'center',\n  },\n});\n\nexport default ProgressArray;\n"]},"metadata":{},"sourceType":"script"}