{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _assertThisInitialized2 = _interopRequireDefault(require(\"@babel/runtime/helpers/assertThisInitialized\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _reactNativeTextinputWithIcons = _interopRequireDefault(require(\"react-native-textinput-with-icons\"));\n\nvar _config = require(\"../../config\");\n\nvar _styles = _interopRequireDefault(require(\"./styles\"));\n\nvar _jsxFileName = \"C:\\\\Program Files\\\\nodejs\\\\ComeClosely\\\\app\\\\views\\\\screens\\\\ChangePassword\\\\index.tsx\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nvar INITIAL_STATE = {\n  currentPassword: '',\n  newPassword: '',\n  repeatNewPassword: ''\n};\n\nvar ChangePassword = function (_React$Component) {\n  (0, _inherits2.default)(ChangePassword, _React$Component);\n\n  var _super = _createSuper(ChangePassword);\n\n  (0, _createClass2.default)(ChangePassword, [{\n    key: \"closeTapped\",\n    value: function closeTapped() {\n      this.props.navigation.goBack();\n    }\n  }]);\n\n  function ChangePassword(props) {\n    var _this;\n\n    (0, _classCallCheck2.default)(this, ChangePassword);\n    _this = _super.call(this, props);\n    _this.state = (0, _extends2.default)({}, INITIAL_STATE);\n    _this.closeTapped = _this.closeTapped.bind((0, _assertThisInitialized2.default)(_this));\n    return _this;\n  }\n\n  (0, _createClass2.default)(ChangePassword, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return _react.default.createElement(_reactNative.SafeAreaView, {\n        style: _styles.default.container,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 7\n        }\n      }, _react.default.createElement(_reactNative.View, {\n        style: _styles.default.navigationBar,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 9\n        }\n      }, _react.default.createElement(_reactNative.Text, {\n        numberOfLines: 1,\n        adjustsFontSizeToFit: true,\n        style: _styles.default.navigationText,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }\n      }, \"Password\"), _react.default.createElement(_reactNative.View, {\n        style: _styles.default.closeView,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }\n      }, _react.default.createElement(_reactNative.TouchableOpacity, {\n        onPress: this.closeTapped,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 13\n        }\n      }, _react.default.createElement(_reactNative.Image, {\n        source: _config.AppImages.close,\n        style: _styles.default.closeImg,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 15\n        }\n      })))), _react.default.createElement(_reactNative.View, {\n        style: _styles.default.lineView,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 9\n        }\n      }), _react.default.createElement(_reactNative.View, {\n        style: {\n          marginTop: 25\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 9\n        }\n      }, _react.default.createElement(_reactNative.View, {\n        style: _styles.default.inputCotainer,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }\n      }, _react.default.createElement(_reactNativeTextinputWithIcons.default, {\n        style: _styles.default.textInputBackground,\n        label: \"Current Password\",\n        labelActiveColor: \"#FF2485\",\n        underlineActiveColor: \"#FF2485\",\n        underlineColor: \"#FF2485\",\n        labelColor: \"#2B2424\",\n        fontFamily: \"Gilroy-Semibold\",\n        containerMaxWidth: \"100%\",\n        value: this.state.currentPassword,\n        onChangeText: function onChangeText(currentPassword) {\n          return _this2.setState({\n            currentPassword: currentPassword\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 13\n        }\n      })), _react.default.createElement(_reactNative.View, {\n        style: _styles.default.newPasswordInputCotainer,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }\n      }, _react.default.createElement(_reactNativeTextinputWithIcons.default, {\n        style: _styles.default.newPasswordTextInputBackground,\n        label: \"New Password\",\n        labelActiveColor: \"#FF2485\",\n        underlineActiveColor: \"#FF2485\",\n        underlineColor: \"#FF2485\",\n        containerMaxWidth: \"100%\",\n        labelColor: \"#2B2424\",\n        fontFamily: \"Gilroy-Semibold\",\n        value: this.state.newPassword,\n        onChangeText: function onChangeText(newPassword) {\n          return _this2.setState({\n            newPassword: newPassword\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 13\n        }\n      })), _react.default.createElement(_reactNative.View, {\n        style: _styles.default.repeatNewPasswordinputCotainer,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }\n      }, _react.default.createElement(_reactNativeTextinputWithIcons.default, {\n        style: _styles.default.RepeatnewPasswordTextinputBackground,\n        label: \"Repeat the new Password\",\n        labelActiveColor: \"#FF2485\",\n        underlineActiveColor: \"#FF2485\",\n        underlineColor: \"#FF2485\",\n        containerMaxWidth: \"100%\",\n        labelColor: \"#2B2424\",\n        fontFamily: \"Gilroy-Semibold\",\n        value: this.state.repeatNewPassword,\n        onChangeText: function onChangeText(repeatNewPassword) {\n          return _this2.setState({\n            repeatNewPassword: repeatNewPassword\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 13\n        }\n      })), _react.default.createElement(_reactNative.TouchableHighlight, {\n        underlayColor: \"rgba(0,0,0,0.0)\",\n        style: _styles.default.SubmitMainView,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 11\n        }\n      }, _react.default.createElement(_reactNative.Text, {\n        style: _styles.default.SubmitText,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 13\n        }\n      }, \"SUBMIT\"))));\n    }\n  }]);\n  return ChangePassword;\n}(_react.default.Component);\n\nvar _default = ChangePassword;\nexports.default = _default;","map":{"version":3,"sources":["C:/Program Files/nodejs/ComeClosely/app/views/screens/ChangePassword/index.tsx"],"names":["INITIAL_STATE","currentPassword","newPassword","repeatNewPassword","ChangePassword","props","navigation","goBack","state","closeTapped","bind","styles","container","navigationBar","navigationText","closeView","AppImages","close","closeImg","lineView","marginTop","inputCotainer","textInputBackground","setState","newPasswordInputCotainer","newPasswordTextInputBackground","repeatNewPasswordinputCotainer","RepeatnewPasswordTextinputBackground","SubmitMainView","SubmitText","React","Component"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {\n  Image,\n  Text,\n  View,\n  SafeAreaView,\n  TouchableHighlight,\n  TouchableOpacity,\n} from 'react-native';\n\nimport TextInput from 'react-native-textinput-with-icons';\n\nimport {AppImages} from '../../config';\nimport styles from './styles';\n\ninterface ComponentProps {\n  navigation: any;\n}\ninterface ComponentState {\n  currentPassword: string;\n  newPassword: string;\n  repeatNewPassword: string;\n}\nconst INITIAL_STATE: ComponentState = {\n  currentPassword: '',\n  newPassword: '',\n  repeatNewPassword: '',\n};\nclass ChangePassword extends React.Component<ComponentProps, ComponentState> {\n  closeTapped() {\n    this.props.navigation.goBack();\n  }\n\n  constructor(props: ComponentProps) {\n    super(props);\n    this.state = {...INITIAL_STATE};\n    this.closeTapped = this.closeTapped.bind(this);\n  }\n\n  render() {\n    return (\n      <SafeAreaView style={styles.container}>\n        <View style={styles.navigationBar}>\n          <Text\n            numberOfLines={1}\n            adjustsFontSizeToFit\n            style={styles.navigationText}>\n            Password\n          </Text>\n          <View style={styles.closeView}>\n            <TouchableOpacity onPress={this.closeTapped}>\n              <Image source={AppImages.close} style={styles.closeImg} />\n            </TouchableOpacity>\n          </View>\n        </View>\n        <View style={styles.lineView} />\n        <View style={{marginTop: 25}}>\n          <View style={styles.inputCotainer}>\n            <TextInput\n              style={styles.textInputBackground}\n              label=\"Current Password\"\n              labelActiveColor=\"#FF2485\"\n              underlineActiveColor=\"#FF2485\"\n              underlineColor=\"#FF2485\"\n              // color='#515C6F'\n              labelColor=\"#2B2424\"\n              fontFamily=\"Gilroy-Semibold\"\n              containerMaxWidth=\"100%\"\n              value={this.state.currentPassword}\n              onChangeText={(currentPassword: string) =>\n                this.setState({currentPassword})\n              }\n            />\n          </View>\n          <View style={styles.newPasswordInputCotainer}>\n            <TextInput\n              style={styles.newPasswordTextInputBackground}\n              label=\"New Password\"\n              labelActiveColor=\"#FF2485\"\n              underlineActiveColor=\"#FF2485\"\n              underlineColor=\"#FF2485\"\n              containerMaxWidth=\"100%\"\n              labelColor=\"#2B2424\"\n              fontFamily=\"Gilroy-Semibold\"\n              value={this.state.newPassword}\n              onChangeText={(newPassword: string) =>\n                this.setState({newPassword})\n              }\n            />\n          </View>\n          <View style={styles.repeatNewPasswordinputCotainer}>\n            <TextInput\n              style={styles.RepeatnewPasswordTextinputBackground}\n              label=\"Repeat the new Password\"\n              labelActiveColor=\"#FF2485\"\n              underlineActiveColor=\"#FF2485\"\n              underlineColor=\"#FF2485\"\n              containerMaxWidth=\"100%\"\n              labelColor=\"#2B2424\"\n              fontFamily=\"Gilroy-Semibold\"\n              value={this.state.repeatNewPassword}\n              onChangeText={(repeatNewPassword: string) =>\n                this.setState({repeatNewPassword})\n              }\n            />\n          </View>\n          <TouchableHighlight\n            underlayColor=\"rgba(0,0,0,0.0)\"\n            style={styles.SubmitMainView}>\n            <Text style={styles.SubmitText}>SUBMIT</Text>\n          </TouchableHighlight>\n        </View>\n      </SafeAreaView>\n    );\n  }\n}\n\nexport default ChangePassword;\n"]},"metadata":{},"sourceType":"script"}