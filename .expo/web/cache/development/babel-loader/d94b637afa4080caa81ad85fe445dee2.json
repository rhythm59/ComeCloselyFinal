{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _jsxFileName = \"C:\\\\Program Files\\\\nodejs\\\\ComeClosely\\\\node_modules\\\\react-native-textinput-with-icons\\\\lib\\\\Label.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nvar _default = function (_Component) {\n  (0, _inherits2.default)(_default, _Component);\n\n  var _super = _createSuper(_default);\n\n  function _default(props) {\n    var _this;\n\n    (0, _classCallCheck2.default)(this, _default);\n    _this = _super.call(this, props);\n\n    _this.componentWillReceiveProps = function (nextProps) {\n      var _this$state = _this.state,\n          animatedScale = _this$state.animatedScale,\n          animatedTranslate = _this$state.animatedTranslate;\n      var labelDuration = nextProps.labelDuration,\n          labelActiveScale = nextProps.labelActiveScale,\n          labelActiveTop = nextProps.labelActiveTop,\n          hasValue = nextProps.hasValue,\n          focused = nextProps.focused;\n\n      if (_this.props.hasValue !== hasValue || _this.props.focused !== focused) {\n        _reactNative.Animated.timing(animatedScale, {\n          toValue: hasValue || focused ? labelActiveScale : 1,\n          duration: labelDuration,\n          useNativeDriver: true\n        }).start();\n\n        _reactNative.Animated.timing(animatedTranslate, {\n          toValue: hasValue || focused ? labelActiveTop : 0,\n          duration: labelDuration,\n          useNativeDriver: true\n        }).start();\n      }\n    };\n\n    var _hasValue = props.hasValue,\n        _focused = props.focused,\n        _labelActiveScale = props.labelActiveScale,\n        _labelActiveTop = props.labelActiveTop;\n    _this.state = {\n      animatedScale: new _reactNative.Animated.Value(_hasValue || _focused ? _labelActiveScale : 1),\n      animatedTranslate: new _reactNative.Animated.Value(_hasValue || _focused ? _labelActiveTop : 0)\n    };\n    return _this;\n  }\n\n  (0, _createClass2.default)(_default, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          focused = _this$props.focused,\n          paddingTop = _this$props.paddingTop,\n          paddingRight = _this$props.paddingRight,\n          paddingLeft = _this$props.paddingLeft,\n          activeColor = _this$props.activeColor,\n          fontSize = _this$props.fontSize,\n          fontFamily = _this$props.fontFamily,\n          fontWeight = _this$props.fontWeight,\n          label = _this$props.label,\n          labelColor = _this$props.labelColor,\n          labelActiveColor = _this$props.labelActiveColor,\n          RTL = _this$props.RTL,\n          error = _this$props.error,\n          errorColor = _this$props.errorColor;\n      var _this$state2 = this.state,\n          animatedScale = _this$state2.animatedScale,\n          animatedTranslate = _this$state2.animatedTranslate;\n      return _react.default.createElement(_reactNative.Animated.View, {\n        style: {\n          position: 'absolute',\n          width: RTL ? '100%' : '200%',\n          left: RTL ? !focused ? '-11%' : 0 : '-100%',\n          top: paddingTop,\n          transform: [{\n            translateY: animatedTranslate\n          }, {\n            scale: animatedScale\n          }]\n        },\n        numberOfLines: 1,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 7\n        }\n      }, _react.default.createElement(_reactNative.Text, {\n        style: {\n          left: RTL ? '10%' : '50%',\n          top: 0,\n          paddingRight: paddingRight,\n          paddingLeft: paddingLeft,\n          color: error ? errorColor : focused ? activeColor || labelActiveColor : labelColor,\n          fontFamily: fontFamily,\n          fontSize: fontSize,\n          fontWeight: fontWeight\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 9\n        }\n      }, label));\n    }\n  }]);\n  return _default;\n}(_react.Component);\n\nexports.default = _default;\n_default.propTypes = {\n  label: _propTypes.default.string,\n  labelDuration: _propTypes.default.number,\n  labelColor: _propTypes.default.string,\n  labelActiveColor: _propTypes.default.string,\n  labelActiveScale: _propTypes.default.number,\n  labelActiveTop: _propTypes.default.number\n};\n_default.defaultProps = {\n  labelDuration: 200,\n  labelColor: 'gray',\n  labelActiveColor: '#3f51b5',\n  labelActiveScale: .8,\n  labelActiveTop: -18\n};","map":{"version":3,"sources":["C:/Program Files/nodejs/ComeClosely/node_modules/react-native-textinput-with-icons/lib/Label.js"],"names":["props","componentWillReceiveProps","nextProps","state","animatedScale","animatedTranslate","labelDuration","labelActiveScale","labelActiveTop","hasValue","focused","Animated","timing","toValue","duration","useNativeDriver","start","Value","paddingTop","paddingRight","paddingLeft","activeColor","fontSize","fontFamily","fontWeight","label","labelColor","labelActiveColor","RTL","error","errorColor","position","width","left","top","transform","translateY","scale","color","Component","propTypes","PropTypes","string","number","defaultProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport { Text, Animated } from 'react-native'\r\nimport PropTypes from 'prop-types'\r\n\r\nexport default class extends Component {\r\n  static propTypes = {\r\n    label: PropTypes.string,\r\n    labelDuration: PropTypes.number,\r\n    labelColor: PropTypes.string,\r\n    labelActiveColor: PropTypes.string,\r\n    labelActiveScale: PropTypes.number,\r\n    labelActiveTop: PropTypes.number\r\n  }\r\n\r\n  static defaultProps = {\r\n    labelDuration: 200,\r\n    labelColor: 'gray',\r\n    labelActiveColor: '#3f51b5',\r\n    labelActiveScale: .8,\r\n    labelActiveTop: -18\r\n  }\r\n\r\n  constructor(props) {\r\n    super(props)\r\n\r\n    let { hasValue, focused, labelActiveScale, labelActiveTop } = props\r\n\r\n    this.state = {\r\n      animatedScale: new Animated.Value(hasValue || focused ? labelActiveScale : 1),\r\n      animatedTranslate: new Animated.Value(hasValue || focused ? labelActiveTop : 0)\r\n    }\r\n  }\r\n\r\n  componentWillReceiveProps = nextProps => {\r\n    let { animatedScale, animatedTranslate } = this.state\r\n    let { labelDuration, labelActiveScale, labelActiveTop, hasValue, focused } = nextProps\r\n\r\n    if (this.props.hasValue !== hasValue || this.props.focused !== focused) {\r\n      Animated.timing(animatedScale, {\r\n        toValue: hasValue || focused ? labelActiveScale : 1,\r\n        duration: labelDuration,\r\n        useNativeDriver: true\r\n      }).start()\r\n\r\n      Animated.timing(animatedTranslate, {\r\n        toValue: hasValue || focused ? labelActiveTop : 0,\r\n        duration: labelDuration,\r\n        useNativeDriver: true\r\n      }).start()\r\n    }\r\n  }\r\n\r\n  render() {\r\n    let {\r\n      focused,\r\n      paddingTop,\r\n      paddingRight,\r\n      paddingLeft,\r\n      activeColor,\r\n      fontSize,\r\n      fontFamily,\r\n      fontWeight,\r\n      label,\r\n      labelColor,\r\n      labelActiveColor,\r\n      RTL,\r\n      error,\r\n      errorColor\r\n    } = this.props\r\n    let { animatedScale, animatedTranslate } = this.state\r\n\r\n    return (\r\n      <Animated.View\r\n        style={{\r\n          position: 'absolute',\r\n          width: RTL ? '100%' : '200%',\r\n          left: RTL ? (!focused ? '-11%' : 0) : '-100%',\r\n          top: paddingTop,\r\n          transform: [{ translateY: animatedTranslate }, { scale: animatedScale }]\r\n        }}\r\n        numberOfLines={1}>\r\n        <Text\r\n          style={{\r\n            left: RTL ? '10%' : '50%',\r\n            top: 0,\r\n            paddingRight,\r\n            paddingLeft,\r\n            color: error ? errorColor : focused ? activeColor || labelActiveColor : labelColor,\r\n            fontFamily,\r\n            fontSize,\r\n            fontWeight\r\n          }}>\r\n          {label}\r\n        </Text>\r\n      </Animated.View>\r\n    )\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"script"}