{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = exports.ProgressPie = void 0;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _art = require(\"@react-native-community/art\");\n\nvar _Circle = _interopRequireDefault(require(\"./Shapes/Circle\"));\n\nvar _Sector = _interopRequireDefault(require(\"./Shapes/Sector\"));\n\nvar _withAnimation = _interopRequireDefault(require(\"./withAnimation\"));\n\nvar _jsxFileName = \"C:\\\\Program Files\\\\nodejs\\\\ComeClosely\\\\node_modules\\\\react-native-progress\\\\Pie.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nvar CIRCLE = Math.PI * 2;\n\nvar AnimatedSurface = _reactNative.Animated.createAnimatedComponent(_art.Surface);\n\nvar AnimatedSector = _reactNative.Animated.createAnimatedComponent(_Sector.default);\n\nvar styles = _reactNative.StyleSheet.create({\n  container: {\n    backgroundColor: 'transparent',\n    overflow: 'hidden'\n  }\n});\n\nvar ProgressPie = function (_Component) {\n  (0, _inherits2.default)(ProgressPie, _Component);\n\n  var _super = _createSuper(ProgressPie);\n\n  function ProgressPie() {\n    (0, _classCallCheck2.default)(this, ProgressPie);\n    return _super.apply(this, arguments);\n  }\n\n  (0, _createClass2.default)(ProgressPie, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          animated = _this$props.animated,\n          borderColor = _this$props.borderColor,\n          borderWidth = _this$props.borderWidth,\n          children = _this$props.children,\n          color = _this$props.color,\n          progress = _this$props.progress,\n          rotation = _this$props.rotation,\n          size = _this$props.size,\n          style = _this$props.style,\n          unfilledColor = _this$props.unfilledColor,\n          restProps = (0, _objectWithoutProperties2.default)(_this$props, [\"animated\", \"borderColor\", \"borderWidth\", \"children\", \"color\", \"progress\", \"rotation\", \"size\", \"style\", \"unfilledColor\"]);\n      var Surface = rotation ? AnimatedSurface : _art.Surface;\n      var Shape = animated ? AnimatedSector : _Sector.default;\n      var angle = animated ? _reactNative.Animated.multiply(progress, CIRCLE) : progress * CIRCLE;\n      var radius = size / 2 - borderWidth;\n      var offset = {\n        top: borderWidth,\n        left: borderWidth\n      };\n      return _react.default.createElement(_reactNative.View, (0, _extends2.default)({\n        style: [styles.container, style]\n      }, restProps, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 7\n        }\n      }), _react.default.createElement(Surface, {\n        width: size,\n        height: size,\n        style: rotation ? {\n          transform: [{\n            rotate: rotation.interpolate({\n              inputRange: [0, 1],\n              outputRange: ['0deg', '360deg']\n            })\n          }]\n        } : undefined,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 9\n        }\n      }, unfilledColor ? _react.default.createElement(_Circle.default, {\n        radius: radius,\n        offset: offset,\n        fill: unfilledColor,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 13\n        }\n      }) : false, _react.default.createElement(Shape, {\n        radius: radius,\n        angle: angle,\n        offset: offset,\n        fill: color,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }\n      }), borderWidth ? _react.default.createElement(_Circle.default, {\n        radius: size / 2,\n        stroke: borderColor || color,\n        strokeWidth: borderWidth,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 13\n        }\n      }) : false), children);\n    }\n  }]);\n  return ProgressPie;\n}(_react.Component);\n\nexports.ProgressPie = ProgressPie;\nProgressPie.propTypes = {\n  animated: _propTypes.default.bool,\n  borderColor: _propTypes.default.string,\n  borderWidth: _propTypes.default.number,\n  color: _propTypes.default.string,\n  children: _propTypes.default.node,\n  progress: _propTypes.default.oneOfType([_propTypes.default.number, _propTypes.default.instanceOf(_reactNative.Animated.Value)]),\n  rotation: _propTypes.default.instanceOf(_reactNative.Animated.Value),\n  size: _propTypes.default.number,\n  style: _propTypes.default.any,\n  unfilledColor: _propTypes.default.string\n};\nProgressPie.defaultProps = {\n  borderWidth: 1,\n  color: 'rgba(0, 122, 255, 1)',\n  progress: 0,\n  size: 40\n};\n\nvar _default = (0, _withAnimation.default)(ProgressPie, 0.2);\n\nexports.default = _default;","map":{"version":3,"sources":["C:/Program Files/nodejs/ComeClosely/node_modules/react-native-progress/Pie.js"],"names":["CIRCLE","Math","PI","AnimatedSurface","Animated","createAnimatedComponent","ARTSurface","AnimatedSector","Sector","styles","StyleSheet","create","container","backgroundColor","overflow","ProgressPie","props","animated","borderColor","borderWidth","children","color","progress","rotation","size","style","unfilledColor","restProps","Surface","Shape","angle","multiply","radius","offset","top","left","transform","rotate","interpolate","inputRange","outputRange","undefined","Component","propTypes","PropTypes","bool","string","number","node","oneOfType","instanceOf","Value","any","defaultProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Animated, StyleSheet, View } from 'react-native';\nimport { Surface as ARTSurface } from '@react-native-community/art';\n\nimport Circle from './Shapes/Circle';\nimport Sector from './Shapes/Sector';\nimport withAnimation from './withAnimation';\n\nconst CIRCLE = Math.PI * 2;\n\nconst AnimatedSurface = Animated.createAnimatedComponent(ARTSurface);\nconst AnimatedSector = Animated.createAnimatedComponent(Sector);\n\nconst styles = StyleSheet.create({\n  container: {\n    backgroundColor: 'transparent',\n    overflow: 'hidden',\n  },\n});\n\nexport class ProgressPie extends Component {\n  static propTypes = {\n    animated: PropTypes.bool,\n    borderColor: PropTypes.string,\n    borderWidth: PropTypes.number,\n    color: PropTypes.string,\n    children: PropTypes.node,\n    progress: PropTypes.oneOfType([\n      PropTypes.number,\n      PropTypes.instanceOf(Animated.Value),\n    ]),\n    rotation: PropTypes.instanceOf(Animated.Value),\n    size: PropTypes.number,\n    style: PropTypes.any,\n    unfilledColor: PropTypes.string,\n  };\n\n  static defaultProps = {\n    borderWidth: 1,\n    color: 'rgba(0, 122, 255, 1)',\n    progress: 0,\n    size: 40,\n  };\n\n  render() {\n    const {\n      animated,\n      borderColor,\n      borderWidth,\n      children,\n      color,\n      progress,\n      rotation,\n      size,\n      style,\n      unfilledColor,\n      ...restProps\n    } = this.props;\n\n    const Surface = rotation ? AnimatedSurface : ARTSurface;\n    const Shape = animated ? AnimatedSector : Sector;\n\n    const angle = animated\n      ? Animated.multiply(progress, CIRCLE)\n      : progress * CIRCLE;\n    const radius = size / 2 - borderWidth;\n    const offset = {\n      top: borderWidth,\n      left: borderWidth,\n    };\n\n    return (\n      <View style={[styles.container, style]} {...restProps}>\n        <Surface\n          width={size}\n          height={size}\n          style={\n            rotation\n              ? {\n                  transform: [\n                    {\n                      rotate: rotation.interpolate({\n                        inputRange: [0, 1],\n                        outputRange: ['0deg', '360deg'],\n                      }),\n                    },\n                  ],\n                }\n              : undefined\n          }\n        >\n          {unfilledColor ? (\n            <Circle radius={radius} offset={offset} fill={unfilledColor} />\n          ) : (\n            false\n          )}\n          <Shape radius={radius} angle={angle} offset={offset} fill={color} />\n          {borderWidth ? (\n            <Circle\n              radius={size / 2}\n              stroke={borderColor || color}\n              strokeWidth={borderWidth}\n            />\n          ) : (\n            false\n          )}\n        </Surface>\n        {children}\n      </View>\n    );\n  }\n}\n\nexport default withAnimation(ProgressPie, 0.2);\n"]},"metadata":{},"sourceType":"script"}