{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _assertThisInitialized2 = _interopRequireDefault(require(\"@babel/runtime/helpers/assertThisInitialized\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _auth = _interopRequireDefault(require(\"@react-native-firebase/auth\"));\n\nvar _reactNativeSnapCarousel = _interopRequireDefault(require(\"react-native-snap-carousel\"));\n\nvar _reactNativeGestureHandler = require(\"react-native-gesture-handler\");\n\nvar _reactNativeSideMenu = _interopRequireDefault(require(\"react-native-side-menu\"));\n\nvar _reactRedux = require(\"react-redux\");\n\nvar _Menu = _interopRequireDefault(require(\"../../components/Menu\"));\n\nvar _animations = require(\"./animations\");\n\nvar _config = require(\"../../config\");\n\nvar _styles = _interopRequireDefault(require(\"./styles\"));\n\nvar _utils = require(\"../../../utils\");\n\nvar _event = require(\"../../../state/ducks/event\");\n\nvar _memories = require(\"../../../state/ducks/memories\");\n\nvar _services = require(\"../../../services\");\n\nvar _auth2 = require(\"../../../providers/auth\");\n\nvar _user = require(\"../../../state/ducks/user\");\n\nvar _jsxFileName = \"C:\\\\Program Files\\\\nodejs\\\\ComeClosely\\\\app\\\\views\\\\screens\\\\Home\\\\index.tsx\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nvar SCREEN_WIDTH = _reactNative.Dimensions.get('window').width;\n\nvar ITEM_WIDTH = Math.round(SCREEN_WIDTH * 0.9);\nvar DATA = [];\n\nfor (var i = 0; i < 10; i++) {\n  DATA.push(i);\n}\n\nvar Home = function (_React$Component) {\n  (0, _inherits2.default)(Home, _React$Component);\n\n  var _super = _createSuper(Home);\n\n  (0, _createClass2.default)(Home, [{\n    key: \"menuTapped\",\n    value: function menuTapped() {\n      this.setState({\n        isOpen: !this.state.isOpen\n      });\n    }\n  }, {\n    key: \"updateMenuState\",\n    value: function updateMenuState(isOpen) {\n      this.setState({\n        isOpen: isOpen\n      });\n    }\n  }, {\n    key: \"memoriesCommentTapped\",\n    value: function memoriesCommentTapped(memoryId) {\n      this.props.navigation.navigate('Comments', {\n        memoryId: memoryId\n      });\n    }\n  }]);\n\n  function Home(props) {\n    var _this;\n\n    (0, _classCallCheck2.default)(this, Home);\n    _this = _super.call(this, props);\n\n    _this.onMenuItemSelected = function (item) {\n      _this.props.navigation.navigate(item);\n\n      _this.setState({\n        isOpen: false,\n        selectedItem: item\n      });\n    };\n\n    _this.onEventTapped = function (item) {\n      _this.props.navigation.navigate('EventInfo', {\n        eventData: item\n      });\n    };\n\n    _this.state = {\n      isOpen: false,\n      selectedItem: 'About',\n      index: 0,\n      memories: [{\n        id: 0,\n        name: 'Ben',\n        time: '2 min ago',\n        likes: '12',\n        comments: '4',\n        image: _config.AppImages.memories1\n      }, {\n        id: 1,\n        name: 'Susan',\n        time: '12 min ago',\n        likes: '20',\n        comments: '8',\n        image: _config.AppImages.memories2\n      }],\n      eventsBannerList: [{\n        id: 0,\n        type: 'Party',\n        title: 'All Summer Castle Launch Party',\n        time: '12 Aug | 12:00 AM',\n        image: _config.AppImages.event1\n      }, {\n        id: 1,\n        type: 'Travel',\n        title: 'Summer Food Festival',\n        time: '12 Aug | 12:00 AM',\n        image: _config.AppImages.event2\n      }, {\n        id: 2,\n        type: 'food',\n        title: 'Summer Food Festival',\n        time: '12 Aug | 12:00 AM',\n        image: _config.AppImages.event3\n      }]\n    };\n\n    _this.alertItemName = function (item) {\n      console.log(item.name);\n    };\n\n    _this.bannerItem = _this.bannerItem.bind((0, _assertThisInitialized2.default)(_this));\n    _this.menuTapped = _this.menuTapped.bind((0, _assertThisInitialized2.default)(_this));\n    _this.memoriesCommentTapped = _this.memoriesCommentTapped.bind((0, _assertThisInitialized2.default)(_this));\n    return _this;\n  }\n\n  (0, _createClass2.default)(Home, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.props.getEvents();\n      this.props.getMemories();\n      this.props.getUser(this.context.currentUser.uid);\n    }\n  }, {\n    key: \"bannerItem\",\n    value: function bannerItem(_ref) {\n      var _this2 = this;\n\n      var item = _ref.item;\n      return _react.default.createElement(_reactNative.TouchableHighlight, {\n        underlayColor: \"rgba(0,0,0,0.0)\",\n        onPress: function onPress() {\n          _this2.onEventTapped(item);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 7\n        }\n      }, _react.default.createElement(_reactNative.View, {\n        style: _styles.default.itemContainer,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 9\n        }\n      }, _react.default.createElement(_reactNative.ImageBackground, {\n        style: _styles.default.pagerbackImage,\n        source: {\n          uri: item.coverPhoto\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 11\n        }\n      }, _react.default.createElement(_reactNative.View, {\n        style: _styles.default.pagerEventTypeMainView,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 13\n        }\n      }, _react.default.createElement(_reactNative.View, {\n        style: _styles.default.pagerEventTypeView,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 15\n        }\n      }, _react.default.createElement(_reactNative.Text, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 17\n        }\n      }, item.type))), _react.default.createElement(_reactNative.View, {\n        style: _styles.default.pagerBottomSubView,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 13\n        }\n      }, _react.default.createElement(_reactNative.View, {\n        style: _styles.default.pagerTimeView,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 15\n        }\n      }, _react.default.createElement(_reactNative.Text, {\n        style: _styles.default.pagerTimeText,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 17\n        }\n      }, item.time)), _react.default.createElement(_reactNative.View, {\n        style: _styles.default.pagerEventTitle,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 15\n        }\n      }, _react.default.createElement(_reactNative.Text, {\n        style: _styles.default.pagerEventTitleTxt,\n        adjustsFontSizeToFit: true,\n        numberOfLines: 2,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 17\n        }\n      }, item.title))))));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var menu = _react.default.createElement(_Menu.default, {\n        onItemSelected: this.onMenuItemSelected,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 18\n        }\n      });\n\n      return _react.default.createElement(_reactNativeSideMenu.default, {\n        menu: menu,\n        isOpen: this.state.isOpen,\n        onChange: function onChange(isOpen) {\n          return _this3.updateMenuState(isOpen);\n        },\n        menuPosition: \"right\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 7\n        }\n      }, _react.default.createElement(_reactNative.View, {\n        style: _styles.default.container,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 9\n        }\n      }, _react.default.createElement(_reactNative.View, {\n        style: _styles.default.viewSwiper,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 11\n        }\n      }, _react.default.createElement(_reactNative.ScrollView, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 13\n        }\n      }, _react.default.createElement(_reactNative.View, {\n        style: _styles.default.backImage,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 15\n        }\n      }, _react.default.createElement(_reactNative.Image, {\n        style: _styles.default.homeNavigationImg,\n        source: _config.AppImages.homeNavigation,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 17\n        }\n      })), _react.default.createElement(_reactNative.SafeAreaView, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 15\n        }\n      }, _react.default.createElement(_reactNative.View, {\n        style: _styles.default.viewHeader,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 17\n        }\n      }, _react.default.createElement(_reactNative.View, {\n        style: _styles.default.explore,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 19\n        }\n      }, _react.default.createElement(_reactNative.Text, {\n        style: _styles.default.exploretext,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 21\n        }\n      }, \"Explore\")), _react.default.createElement(_reactNative.View, {\n        style: _styles.default.viewMenu,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 19\n        }\n      }, _react.default.createElement(_reactNative.TouchableHighlight, {\n        underlayColor: \"rgba(0,0,0,0.0)\",\n        style: _styles.default.menu,\n        onPress: this.menuTapped,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 21\n        }\n      }, _react.default.createElement(_reactNative.Image, {\n        source: _config.AppImages.menu,\n        style: _styles.default.menuImg,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 23\n        }\n      })))), _react.default.createElement(_reactNative.View, {\n        style: _styles.default.viewEventForYou,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 17\n        }\n      }, _react.default.createElement(_reactNative.View, {\n        style: _styles.default.explore,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 19\n        }\n      }, _react.default.createElement(_reactNative.Text, {\n        style: _styles.default.eventForYouText,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 21\n        }\n      }, \"Events for you\"))), _react.default.createElement(_reactNativeSnapCarousel.default, {\n        data: this.props.events.filter(function (e) {\n          return e.userId !== _this3.context.currentUser.uid;\n        }),\n        renderItem: this.bannerItem,\n        sliderWidth: SCREEN_WIDTH,\n        itemWidth: ITEM_WIDTH,\n        containerCustomStyle: _styles.default.carouselContainer,\n        inactiveSlideShift: 0,\n        inactiveSlideOpacity: 1,\n        onSnapToItem: function onSnapToItem(index) {\n          return _this3.setState({\n            index: index\n          });\n        },\n        scrollInterpolator: _animations.scrollInterpolator,\n        slideInterpolatedStyle: _animations.animatedStyles,\n        useScrollView: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 17\n        }\n      }), _react.default.createElement(_reactNative.View, {\n        style: _styles.default.headerMemories,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 17\n        }\n      }, _react.default.createElement(_reactNative.View, {\n        style: _styles.default.explore,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 19\n        }\n      }, _react.default.createElement(_reactNative.Text, {\n        style: _styles.default.memoriesText,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 21\n        }\n      }, \"Memories\"))), _react.default.createElement(_reactNative.FlatList, {\n        data: this.props.memories.sort(function (a, b) {\n          return b.createdAt > a.createdAt;\n        }),\n        keyExtractor: function keyExtractor(item) {\n          return item.id;\n        },\n        renderItem: function renderItem(_ref2) {\n          var _item$likedByUsers$sp, _auth$currentUser;\n\n          var item = _ref2.item;\n          return _react.default.createElement(_reactNative.View, {\n            key: item.id,\n            style: _styles.default.viewMemories,\n            __self: _this3,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 253,\n              columnNumber: 21\n            }\n          }, _react.default.createElement(_reactNative.View, {\n            style: _styles.default.memoriesMainView,\n            __self: _this3,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 258,\n              columnNumber: 23\n            }\n          }, _react.default.createElement(_reactNative.ImageBackground, {\n            style: {\n              flex: 1\n            },\n            source: {\n              uri: item.image\n            },\n            __self: _this3,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 259,\n              columnNumber: 25\n            }\n          })), _react.default.createElement(_reactNative.View, {\n            style: _styles.default.memoriesBottomMainView,\n            __self: _this3,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 264,\n              columnNumber: 23\n            }\n          }, _react.default.createElement(_reactNative.View, {\n            style: _styles.default.memoriesBottomFirstView,\n            __self: _this3,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 265,\n              columnNumber: 25\n            }\n          }, _react.default.createElement(_reactNative.View, {\n            style: _styles.default.memoriesBottomProfileView,\n            __self: _this3,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 266,\n              columnNumber: 27\n            }\n          }, _react.default.createElement(_reactNative.ImageBackground, {\n            style: {\n              flex: 1\n            },\n            source: item.userAvatar ? {\n              uri: item.userAvatar\n            } : item.loginImage,\n            __self: _this3,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 267,\n              columnNumber: 29\n            }\n          })), _react.default.createElement(_reactNative.View, {\n            style: _styles.default.memoriesBottomSecondView,\n            __self: _this3,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 272,\n              columnNumber: 27\n            }\n          }, _react.default.createElement(_reactNative.View, {\n            style: _styles.default.memorisBottomCommentView,\n            __self: _this3,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 273,\n              columnNumber: 29\n            }\n          }, _react.default.createElement(_reactNative.Text, {\n            style: _styles.default.commentsCountTxt,\n            adjustsFontSizeToFit: true,\n            numberOfLines: 1,\n            __self: _this3,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 274,\n              columnNumber: 31\n            }\n          }, item.comments), _react.default.createElement(_reactNativeGestureHandler.TouchableOpacity, {\n            onPress: function onPress() {\n              return _this3.memoriesCommentTapped(item.id);\n            },\n            style: {\n              marginTop: 8,\n              aspectRatio: 1,\n              height: '55%'\n            },\n            __self: _this3,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 280,\n              columnNumber: 31\n            }\n          }, _react.default.createElement(_reactNative.ImageBackground, {\n            style: _styles.default.commentsImage,\n            source: _config.AppImages.comment,\n            __self: _this3,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 287,\n              columnNumber: 33\n            }\n          }))), _react.default.createElement(_reactNative.View, {\n            style: _styles.default.memorisBottomLikesView,\n            __self: _this3,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 293,\n              columnNumber: 29\n            }\n          }, _react.default.createElement(_reactNative.Text, {\n            style: _styles.default.memoriesLikesCountTxt,\n            adjustsFontSizeToFit: true,\n            numberOfLines: 1,\n            __self: _this3,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 294,\n              columnNumber: 31\n            }\n          }, item.likedByUsers ? (_item$likedByUsers$sp = item.likedByUsers.split()) == null ? void 0 : _item$likedByUsers$sp.length : null), _react.default.createElement(_reactNativeGestureHandler.TouchableOpacity, {\n            onPress: function onPress() {\n              return _services.MemoryServices.likeDislikeMemory(item);\n            },\n            style: _styles.default.memoriesHeartView,\n            __self: _this3,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 300,\n              columnNumber: 31\n            }\n          }, _react.default.createElement(_reactNative.ImageBackground, {\n            style: _styles.default.memoriesHeartImg,\n            source: item.likedByUsers && (0, _auth.default)().currentUser && item.likedByUsers.indexOf((_auth$currentUser = (0, _auth.default)().currentUser) == null ? void 0 : _auth$currentUser.uid) != -1 ? _config.AppImages.filledHeart : _config.AppImages.outlineHeart,\n            __self: _this3,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 303,\n              columnNumber: 33\n            }\n          }))), _react.default.createElement(_reactNative.View, {\n            style: _styles.default.memoriesNameNTimeView,\n            __self: _this3,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 312,\n              columnNumber: 29\n            }\n          }, _react.default.createElement(_reactNative.View, {\n            style: _styles.default.memoriesProfileNameView,\n            __self: _this3,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 313,\n              columnNumber: 31\n            }\n          }, _react.default.createElement(_reactNative.Text, {\n            style: _styles.default.memoriesProfileNameTxt,\n            adjustsFontSizeToFit: true,\n            numberOfLines: 1,\n            __self: _this3,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 314,\n              columnNumber: 33\n            }\n          }, item.userName)), _react.default.createElement(_reactNative.Text, {\n            style: _styles.default.memoriesTimeText,\n            adjustsFontSizeToFit: true,\n            numberOfLines: 1,\n            __self: _this3,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 321,\n              columnNumber: 31\n            }\n          }, (0, _utils.timeSince)(item.createdAt)))))));\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 17\n        }\n      }), _react.default.createElement(_reactNative.View, {\n        style: _styles.default.headerUpcomingEvent,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 335,\n          columnNumber: 17\n        }\n      }, _react.default.createElement(_reactNative.View, {\n        style: _styles.default.explore,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 337,\n          columnNumber: 19\n        }\n      }, _react.default.createElement(_reactNative.Text, {\n        style: _styles.default.memoriesText,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 338,\n          columnNumber: 21\n        }\n      }, \"Upcoming Events\"))), _react.default.createElement(_reactNative.View, {\n        style: _styles.default.mainViewUpcomingEvent,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 341,\n          columnNumber: 17\n        }\n      }, _react.default.createElement(_reactNative.FlatList, {\n        horizontal: true,\n        data: this.props.events,\n        keyExtractor: function keyExtractor(item) {\n          return item.id;\n        },\n        renderItem: function renderItem(_ref3) {\n          var item = _ref3.item;\n          return _react.default.createElement(_reactNativeGestureHandler.TouchableOpacity, {\n            key: item.id,\n            style: _styles.default.viewUpcomingEvent,\n            onPress: function onPress() {\n              return _this3.onEventTapped(item);\n            },\n            __self: _this3,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 347,\n              columnNumber: 23\n            }\n          }, _react.default.createElement(_reactNative.ImageBackground, {\n            style: _styles.default.upcomingEvetsBackImg,\n            source: {\n              uri: item.coverPhoto\n            },\n            __self: _this3,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 352,\n              columnNumber: 25\n            }\n          }, _react.default.createElement(_reactNative.View, {\n            style: _styles.default.UpcomingEventTypeMainView,\n            __self: _this3,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 355,\n              columnNumber: 27\n            }\n          }, _react.default.createElement(_reactNative.Text, {\n            style: _styles.default.UpcomingEventTypeView,\n            __self: _this3,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 356,\n              columnNumber: 29\n            }\n          }, item.type)), _react.default.createElement(_reactNative.View, {\n            style: _styles.default.upcomingEvetsTimeNTitleView,\n            __self: _this3,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 360,\n              columnNumber: 27\n            }\n          }, _react.default.createElement(_reactNative.Text, {\n            style: _styles.default.upcomingEvetsTitleText,\n            adjustsFontSizeToFit: true,\n            numberOfLines: 2,\n            __self: _this3,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 361,\n              columnNumber: 29\n            }\n          }, item.title), _react.default.createElement(_reactNative.Text, {\n            style: _styles.default.upcomingEvetsTimeTxt,\n            __self: _this3,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 367,\n              columnNumber: 29\n            }\n          }, item.time))));\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 342,\n          columnNumber: 19\n        }\n      })), _react.default.createElement(_reactNative.View, {\n        style: _styles.default.bottomTabSpace,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 376,\n          columnNumber: 17\n        }\n      }))))));\n    }\n  }]);\n  return Home;\n}(_react.default.Component);\n\nHome.contextType = _auth2.AuthContext;\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    getEvents: function getEvents() {\n      return dispatch(_event.eventOperations.getEvents());\n    },\n    getMemories: function getMemories() {\n      return dispatch(_memories.memoriesOperations.getMemories());\n    },\n    getUser: function getUser(id) {\n      return dispatch(_user.userOperations.getUser(id));\n    }\n  };\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    events: state.event.events,\n    memories: state.memories.memories\n  };\n};\n\nvar _default = (0, _reactRedux.connect)(mapStateToProps, mapDispatchToProps)(Home);\n\nexports.default = _default;","map":{"version":3,"sources":["C:/Program Files/nodejs/ComeClosely/app/views/screens/Home/index.tsx"],"names":["SCREEN_WIDTH","Dimensions","get","width","ITEM_WIDTH","Math","round","DATA","i","push","Home","setState","isOpen","state","memoryId","props","navigation","navigate","onMenuItemSelected","item","selectedItem","onEventTapped","eventData","index","memories","id","name","time","likes","comments","image","AppImages","memories1","memories2","eventsBannerList","type","title","event1","event2","event3","alertItemName","console","log","bannerItem","bind","menuTapped","memoriesCommentTapped","getEvents","getMemories","getUser","context","currentUser","uid","styles","itemContainer","pagerbackImage","uri","coverPhoto","pagerEventTypeMainView","pagerEventTypeView","pagerBottomSubView","pagerTimeView","pagerTimeText","pagerEventTitle","pagerEventTitleTxt","menu","updateMenuState","container","viewSwiper","backImage","homeNavigationImg","homeNavigation","viewHeader","explore","exploretext","viewMenu","menuImg","viewEventForYou","eventForYouText","events","filter","e","userId","carouselContainer","scrollInterpolator","animatedStyles","headerMemories","memoriesText","sort","a","b","createdAt","viewMemories","memoriesMainView","flex","memoriesBottomMainView","memoriesBottomFirstView","memoriesBottomProfileView","userAvatar","loginImage","memoriesBottomSecondView","memorisBottomCommentView","commentsCountTxt","marginTop","aspectRatio","height","commentsImage","comment","memorisBottomLikesView","memoriesLikesCountTxt","likedByUsers","split","length","MemoryServices","likeDislikeMemory","memoriesHeartView","memoriesHeartImg","indexOf","filledHeart","outlineHeart","memoriesNameNTimeView","memoriesProfileNameView","memoriesProfileNameTxt","userName","memoriesTimeText","headerUpcomingEvent","mainViewUpcomingEvent","viewUpcomingEvent","upcomingEvetsBackImg","UpcomingEventTypeMainView","UpcomingEventTypeView","upcomingEvetsTimeNTitleView","upcomingEvetsTitleText","upcomingEvetsTimeTxt","bottomTabSpace","React","Component","contextType","AuthContext","mapDispatchToProps","dispatch","eventOperations","memoriesOperations","userOperations","mapStateToProps","event"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport {\r\n  Text,\r\n  View,\r\n  FlatList,\r\n  Dimensions,\r\n  SafeAreaView,\r\n  TouchableHighlight,\r\n  ImageBackground,\r\n  Image,\r\n  ScrollView,\r\n} from 'react-native';\r\n\r\nimport auth from '@react-native-firebase/auth';\r\nimport Carousel from 'react-native-snap-carousel';\r\nimport { TouchableOpacity } from 'react-native-gesture-handler';\r\nimport SideMenu from 'react-native-side-menu';\r\nimport { connect } from 'react-redux';\r\n\r\nimport Menu from '../../components/Menu';\r\nimport { scrollInterpolator, animatedStyles } from './animations';\r\nimport { AppImages } from '../../config';\r\nimport styles from './styles';\r\nimport { timeSince } from '../../../utils';\r\nimport { eventOperations } from '../../../state/ducks/event';\r\nimport { memoriesOperations } from '../../../state/ducks/memories';\r\nimport { MemoryServices } from '../../../services';\r\nimport { AuthContext } from '../../../providers/auth';\r\nimport { userOperations } from '../../../state/ducks/user';\r\n\r\n\r\nconst SCREEN_WIDTH = Dimensions.get('window').width;\r\nconst ITEM_WIDTH = Math.round(SCREEN_WIDTH * 0.9);\r\n\r\nconst DATA = [];\r\nfor (let i = 0; i < 10; i++) {\r\n  DATA.push(i);\r\n}\r\n\r\ninterface ComponentProps {\r\n  navigation: any;\r\n  getMemories: typeof Function;\r\n  getEvents: typeof Function;\r\n  getUser: typeof Function;\r\n  events: any;\r\n  memories: any;\r\n}\r\nclass Home extends React.Component<ComponentProps> {\r\n  menuTapped() {\r\n    this.setState({\r\n      isOpen: !this.state.isOpen,\r\n    });\r\n  }\r\n\r\n  updateMenuState(isOpen: boolean) {\r\n    this.setState({ isOpen });\r\n  }\r\n\r\n  memoriesCommentTapped(memoryId: any) {\r\n    this.props.navigation.navigate('Comments', { memoryId });\r\n  }\r\n\r\n  onMenuItemSelected = (item: any) => {\r\n    this.props.navigation.navigate(item);\r\n    this.setState({\r\n      isOpen: false,\r\n      selectedItem: item,\r\n    });\r\n  };\r\n\r\n  onEventTapped = (item: any) => {\r\n    this.props.navigation.navigate('EventInfo', { eventData: item })\r\n  }\r\n\r\n  state = {\r\n    isOpen: false,\r\n    selectedItem: 'About',\r\n    index: 0,\r\n    memories: [\r\n      {\r\n        id: 0,\r\n        name: 'Ben',\r\n        time: '2 min ago',\r\n        likes: '12',\r\n        comments: '4',\r\n        image: AppImages.memories1,\r\n      },\r\n      {\r\n        id: 1,\r\n        name: 'Susan',\r\n        time: '12 min ago',\r\n        likes: '20',\r\n        comments: '8',\r\n        image: AppImages.memories2,\r\n      },\r\n    ],\r\n    // upcomingEvets: [\r\n    //   {\r\n    //     id: 0,\r\n    //     type: 'Party',\r\n    //     title: 'All Summer Castle Launch Party',\r\n    //     time: '12 Aug | 12:00 AM',\r\n    //     image: AppImages.upcomingEvent1,\r\n    //   },\r\n    //   {\r\n    //     id: 1,\r\n    //     type: 'food',\r\n    //     title: 'Summer Food Festival',\r\n    //     time: '12 Aug | 12:00 AM',\r\n    //     image: AppImages.upcomingEvent2,\r\n    //   },\r\n    // ],\r\n    eventsBannerList: [\r\n      {\r\n        id: 0,\r\n        type: 'Party',\r\n        title: 'All Summer Castle Launch Party',\r\n        time: '12 Aug | 12:00 AM',\r\n        image: AppImages.event1,\r\n      },\r\n      {\r\n        id: 1,\r\n        type: 'Travel',\r\n        title: 'Summer Food Festival',\r\n        time: '12 Aug | 12:00 AM',\r\n        image: AppImages.event2,\r\n      },\r\n      {\r\n        id: 2,\r\n        type: 'food',\r\n        title: 'Summer Food Festival',\r\n        time: '12 Aug | 12:00 AM',\r\n        image: AppImages.event3,\r\n      },\r\n    ],\r\n  };\r\n\r\n  alertItemName = (item: any) => {\r\n    console.log(item.name);\r\n  };\r\n\r\n  constructor(props: ComponentProps) {\r\n    super(props);\r\n    this.bannerItem = this.bannerItem.bind(this);\r\n    this.menuTapped = this.menuTapped.bind(this);\r\n    this.memoriesCommentTapped = this.memoriesCommentTapped.bind(this);\r\n  }\r\n  componentDidMount() {\r\n    this.props.getEvents();\r\n    this.props.getMemories();\r\n    this.props.getUser(this.context.currentUser.uid);\r\n  }\r\n\r\n  bannerItem({ item }: any) {\r\n    return (\r\n      <TouchableHighlight\r\n        underlayColor=\"rgba(0,0,0,0.0)\"\r\n        onPress={() => {\r\n          this.onEventTapped(item)\r\n          // this.props.navigation.navigate('EventInfo');\r\n        }}>\r\n        <View style={styles.itemContainer}>\r\n          <ImageBackground style={styles.pagerbackImage} source={{ uri: item.coverPhoto }}>\r\n            <View style={styles.pagerEventTypeMainView}>\r\n              <View style={styles.pagerEventTypeView}>\r\n                <Text>{item.type}</Text>\r\n              </View>\r\n            </View>\r\n            <View style={styles.pagerBottomSubView}>\r\n              <View style={styles.pagerTimeView}>\r\n                <Text style={styles.pagerTimeText}>{item.time}</Text>\r\n              </View>\r\n              <View style={styles.pagerEventTitle}>\r\n                <Text\r\n                  style={styles.pagerEventTitleTxt}\r\n                  adjustsFontSizeToFit\r\n                  numberOfLines={2}>\r\n                  {item.title}\r\n                </Text>\r\n              </View>\r\n            </View>\r\n          </ImageBackground>\r\n        </View>\r\n      </TouchableHighlight>\r\n    );\r\n  }\r\n\r\n  render() { \r\n    const menu = <Menu onItemSelected={this.onMenuItemSelected} />;\r\n    return (\r\n      <SideMenu\r\n        menu={menu}\r\n        isOpen={this.state.isOpen}\r\n        onChange={(isOpen) => this.updateMenuState(isOpen)}\r\n        menuPosition=\"right\">\r\n        <View style={styles.container}>\r\n          <View style={styles.viewSwiper}>\r\n            <ScrollView>\r\n              <View style={styles.backImage}>\r\n                <Image\r\n                  style={styles.homeNavigationImg}\r\n                  source={AppImages.homeNavigation}\r\n                />\r\n              </View>\r\n              <SafeAreaView>\r\n                <View style={styles.viewHeader}>\r\n                  {/* <view></view> */}\r\n                  <View style={styles.explore}>\r\n                    <Text style={styles.exploretext}>Explore</Text>\r\n                  </View>\r\n                  <View style={styles.viewMenu}>\r\n                    <TouchableHighlight\r\n                      underlayColor=\"rgba(0,0,0,0.0)\"\r\n                      style={styles.menu}\r\n                      onPress={this.menuTapped}>\r\n                      <Image source={AppImages.menu} style={styles.menuImg} />\r\n                    </TouchableHighlight>\r\n                  </View>\r\n                </View>\r\n                <View style={styles.viewEventForYou}>\r\n                  {/* <view></view> */}\r\n                  <View style={styles.explore}>\r\n                    <Text style={styles.eventForYouText}>Events for you</Text>\r\n                  </View>\r\n                </View>\r\n                <Carousel\r\n                  /* ref={(c) => (this.carousel = c)} */\r\n                  data={this.props.events.filter(e => e.userId !== this.context.currentUser.uid)}\r\n                  // data={this.state.eventsBannerList}\r\n                  renderItem={this.bannerItem}\r\n                  sliderWidth={SCREEN_WIDTH}\r\n                  itemWidth={ITEM_WIDTH}\r\n                  containerCustomStyle={styles.carouselContainer}\r\n                  inactiveSlideShift={0}\r\n                  inactiveSlideOpacity={1}\r\n                  onSnapToItem={(index: number) => this.setState({ index })}\r\n                  scrollInterpolator={scrollInterpolator}\r\n                  slideInterpolatedStyle={animatedStyles}\r\n                  useScrollView={true}\r\n                />\r\n                <View style={styles.headerMemories}>\r\n                  {/* <view></view> */}\r\n                  <View style={styles.explore}>\r\n                    <Text style={styles.memoriesText}>Memories</Text>\r\n                  </View>\r\n                </View>\r\n\r\n                <FlatList\r\n                  // data={this.props.memories}\r\n                  data={this.props.memories.sort((a: any, b: any) => b.createdAt > a.createdAt)}\r\n                  keyExtractor={(item) => item.id}\r\n                  renderItem={({ item }) => (\r\n                    <View\r\n                      key={item.id}\r\n                      style={styles.viewMemories}\r\n                    /* onPress={() => this.alertItemName(item)} */\r\n                    >\r\n                      <View style={styles.memoriesMainView}>\r\n                        <ImageBackground\r\n                          style={{ flex: 1 }}\r\n                          source={{ uri: item.image }}\r\n                        />\r\n                      </View>\r\n                      <View style={styles.memoriesBottomMainView}>\r\n                        <View style={styles.memoriesBottomFirstView}>\r\n                          <View style={styles.memoriesBottomProfileView}>\r\n                            <ImageBackground\r\n                              style={{ flex: 1 }}\r\n                              source={item.userAvatar ? { uri: item.userAvatar } : item.loginImage}\r\n                            />\r\n                          </View>\r\n                          <View style={styles.memoriesBottomSecondView}>\r\n                            <View style={styles.memorisBottomCommentView}>\r\n                              <Text\r\n                                style={styles.commentsCountTxt}\r\n                                adjustsFontSizeToFit\r\n                                numberOfLines={1}>\r\n                                {item.comments}\r\n                              </Text>\r\n                              <TouchableOpacity\r\n                                onPress={() => this.memoriesCommentTapped(item.id)}\r\n                                style={{\r\n                                  marginTop: 8,\r\n                                  aspectRatio: 1,\r\n                                  height: '55%',\r\n                                }}>\r\n                                <ImageBackground\r\n                                  style={styles.commentsImage}\r\n                                  source={AppImages.comment}\r\n                                />\r\n                              </TouchableOpacity>\r\n                            </View>\r\n                            <View style={styles.memorisBottomLikesView}>\r\n                              <Text\r\n                                style={styles.memoriesLikesCountTxt}\r\n                                adjustsFontSizeToFit\r\n                                numberOfLines={1}>\r\n                                {item.likedByUsers ? item.likedByUsers.split()?.length : null}\r\n                              </Text>\r\n                              <TouchableOpacity\r\n                                onPress={() => MemoryServices.likeDislikeMemory(item)}\r\n                                style={styles.memoriesHeartView}>\r\n                                <ImageBackground\r\n                                  style={styles.memoriesHeartImg}\r\n                                  source={(item.likedByUsers && auth().currentUser &&\r\n                                    item.likedByUsers.indexOf(auth().currentUser?.uid) != -1) ?\r\n                                    AppImages.filledHeart :\r\n                                    AppImages.outlineHeart}\r\n                                />\r\n                              </TouchableOpacity>\r\n                            </View>\r\n                            <View style={styles.memoriesNameNTimeView}>\r\n                              <View style={styles.memoriesProfileNameView}>\r\n                                <Text\r\n                                  style={styles.memoriesProfileNameTxt}\r\n                                  adjustsFontSizeToFit\r\n                                  numberOfLines={1}>\r\n                                  {item.userName}\r\n                                </Text>\r\n                              </View>\r\n                              <Text\r\n                                style={styles.memoriesTimeText}\r\n                                adjustsFontSizeToFit\r\n                                numberOfLines={1}>\r\n                                {timeSince(item.createdAt)}\r\n                              </Text>\r\n                            </View>\r\n                          </View>\r\n                        </View>\r\n                      </View>\r\n                    </View>\r\n                  )}\r\n                />\r\n\r\n                <View style={styles.headerUpcomingEvent}>\r\n                  {/* <view></view> */}\r\n                  <View style={styles.explore}>\r\n                    <Text style={styles.memoriesText}>Upcoming Events</Text>\r\n                  </View>\r\n                </View>\r\n                <View style={styles.mainViewUpcomingEvent}>\r\n                  <FlatList\r\n                    horizontal\r\n                    data={this.props.events}\r\n                    keyExtractor={(item) => item.id}\r\n                    renderItem={({ item }) => (\r\n                      <TouchableOpacity\r\n                        key={item.id}\r\n                        style={styles.viewUpcomingEvent}\r\n                        onPress={() => this.onEventTapped(item)}\r\n                      >\r\n                        <ImageBackground\r\n                          style={styles.upcomingEvetsBackImg}\r\n                          source={{ uri: item.coverPhoto }}>\r\n                          <View style={styles.UpcomingEventTypeMainView}>\r\n                            <Text style={styles.UpcomingEventTypeView}>\r\n                              {item.type}\r\n                            </Text>\r\n                          </View>\r\n                          <View style={styles.upcomingEvetsTimeNTitleView}>\r\n                            <Text\r\n                              style={styles.upcomingEvetsTitleText}\r\n                              adjustsFontSizeToFit\r\n                              numberOfLines={2}>\r\n                              {item.title}\r\n                            </Text>\r\n                            <Text style={styles.upcomingEvetsTimeTxt}>\r\n                              {item.time}\r\n                            </Text>\r\n                          </View>\r\n                        </ImageBackground>\r\n                      </TouchableOpacity>\r\n                    )}\r\n                  />\r\n                </View>\r\n                <View style={styles.bottomTabSpace} />\r\n              </SafeAreaView>\r\n            </ScrollView>\r\n          </View>\r\n        </View>\r\n      </SideMenu>\r\n    );\r\n  }\r\n}\r\nHome.contextType = AuthContext;\r\n\r\nconst mapDispatchToProps = (dispatch: Function) => {\r\n  return {\r\n    getEvents: () => dispatch(eventOperations.getEvents()),\r\n    getMemories: () => dispatch(memoriesOperations.getMemories()),\r\n    getUser: (id: string) => dispatch(userOperations.getUser(id)),\r\n  };\r\n};\r\n\r\nconst mapStateToProps = (state: any) => {\r\n  return {\r\n    events: state.event.events,\r\n    memories: state.memories.memories,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Home);\r\n// export default Home;\r\n"]},"metadata":{},"sourceType":"script"}