{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _reactRedux = require(\"react-redux\");\n\nvar _reactNativeTextinputWithIcons = _interopRequireDefault(require(\"react-native-textinput-with-icons\"));\n\nvar _reactNativeGestureHandler = require(\"react-native-gesture-handler\");\n\nvar _reactNativeSafeAreaContext = require(\"react-native-safe-area-context\");\n\nvar _reactNativeElements = require(\"react-native-elements\");\n\nvar _reactNativeKeyboardAwareScrollView = require(\"react-native-keyboard-aware-scroll-view\");\n\nvar _formik = require(\"formik\");\n\nvar Yup = _interopRequireWildcard(require(\"yup\"));\n\nvar _styles = _interopRequireDefault(require(\"./styles\"));\n\nvar _FormButton = _interopRequireDefault(require(\"../../components/FormButton\"));\n\nvar _FormFieldWrapper = _interopRequireDefault(require(\"../../components/FormFieldWrapper\"));\n\nvar _auth = require(\"../../../state/ducks/auth\");\n\nvar _jsxFileName = \"C:\\\\Program Files\\\\nodejs\\\\ComeClosely\\\\app\\\\views\\\\screens\\\\SignIn\\\\index.tsx\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nvar INITIAL_STATE = {\n  email: '',\n  password: ''\n};\nvar validationSchema = Yup.object().shape({\n  email: Yup.string().label('Email').required('Please enter your email').email('Enter a valid email'),\n  password: Yup.string().label('Password').required('Please enter your password')\n});\n\nvar SignIn = function (_React$Component) {\n  (0, _inherits2.default)(SignIn, _React$Component);\n\n  var _super = _createSuper(SignIn);\n\n  function SignIn(props) {\n    var _this;\n\n    (0, _classCallCheck2.default)(this, SignIn);\n    _this = _super.call(this, props);\n\n    _this.handleSubmit = function (values) {\n      _this.props.signIn(values);\n    };\n\n    _this.btnSignUpTapped = function () {\n      _this.props.navigation.navigate('SignUp');\n    };\n\n    _this.btnForgotPasswordTapped = function () {\n      _this.props.navigation.navigate('ForgotPassword');\n    };\n\n    return _this;\n  }\n\n  (0, _createClass2.default)(SignIn, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var isLoading = this.props.isLoading;\n      return _react.default.createElement(_reactNativeKeyboardAwareScrollView.KeyboardAwareScrollView, {\n        extraHeight: 15,\n        enableOnAndroid: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 7\n        }\n      }, _react.default.createElement(_reactNativeSafeAreaContext.SafeAreaView, {\n        style: _styles.default.mainView,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 9\n        }\n      }, _react.default.createElement(_reactNative.View, {\n        style: _styles.default.titleView,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }\n      }, _react.default.createElement(_reactNative.Text, {\n        style: _styles.default.title,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 13\n        }\n      }, \"Come\"), _react.default.createElement(_reactNative.Text, {\n        style: _styles.default.titleColor,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 13\n        }\n      }, \"Closely\")), _react.default.createElement(_formik.Formik, {\n        initialValues: INITIAL_STATE,\n        validationSchema: validationSchema,\n        onSubmit: function onSubmit(values) {\n          _this2.handleSubmit(values);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }\n      }, function (formikProps) {\n        return _react.default.createElement(_react.Fragment, {\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 15\n          }\n        }, _react.default.createElement(_reactNative.View, {\n          style: _styles.default.topView,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 17\n          }\n        }, _react.default.createElement(_FormFieldWrapper.default, {\n          formikProps: formikProps,\n          formikKey: \"email\",\n          containerStyles: _styles.default.fieldWrapper,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 19\n          }\n        }, _react.default.createElement(_reactNativeTextinputWithIcons.default, {\n          style: _styles.default.textInput,\n          color: \"#515C6F\",\n          underlineActiveColor: \"#FF2485\",\n          fontFamily: \"Poppins-Regular\",\n          label: \"Email Address\",\n          labelColor: \"#D4D4D4\",\n          labelActiveColor: \"#FF2485\",\n          leftIcon: \"email-outline\",\n          leftIconType: \"material\",\n          mode: \"outlined\",\n          leftIconColor: \"#707070\",\n          value: formikProps.values.email,\n          onChangeText: formikProps.handleChange('email'),\n          onBlur: formikProps.handleBlur('email'),\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 21\n          }\n        })), _react.default.createElement(_FormFieldWrapper.default, {\n          formikProps: formikProps,\n          formikKey: \"password\",\n          containerStyles: _styles.default.fieldWrapper,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 19\n          }\n        }, _react.default.createElement(_reactNativeTextinputWithIcons.default, {\n          style: _styles.default.textInput,\n          color: \"#515C6F\",\n          underlineActiveColor: \"#FF2485\",\n          fontFamily: \"Poppins-Regular\",\n          label: \"Password\",\n          labelColor: \"#D4D4D4\",\n          labelActiveColor: \"#FF2485\",\n          leftIcon: \"lock\",\n          leftIconType: \"awesome\",\n          mode: \"outlined\",\n          leftIconColor: \"#707070\",\n          secureTextEntry: true,\n          value: formikProps.values.password,\n          onChangeText: formikProps.handleChange('password'),\n          onBlur: formikProps.handleBlur('password'),\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 21\n          }\n        })), _react.default.createElement(_reactNative.TouchableHighlight, {\n          underlayColor: \"rgba(0,0,0,0.0)\",\n          onPress: function onPress() {\n            _this2.btnForgotPasswordTapped();\n          },\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 19\n          }\n        }, _react.default.createElement(_reactNative.Text, {\n          style: _styles.default.forgotPassword,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 21\n          }\n        }, \"Forgot Password?\"))), _react.default.createElement(_reactNative.View, {\n          style: _styles.default.bottomView,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 17\n          }\n        }, _react.default.createElement(_reactNative.View, {\n          style: _styles.default.buttonView,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 19\n          }\n        }, _react.default.createElement(_reactNative.View, {\n          style: _styles.default.submitView,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 21\n          }\n        }, _react.default.createElement(_FormButton.default, {\n          title: \"LOGIN\",\n          containerStyles: _styles.default.buttonSubmit,\n          loading: isLoading,\n          disabled: isLoading || !formikProps.isValid,\n          onPress: formikProps.handleSubmit,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 23\n          }\n        })), _react.default.createElement(_reactNative.View, {\n          style: _styles.default.orView,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 21\n          }\n        }, _react.default.createElement(_reactNative.Text, {\n          style: _styles.default.or,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 23\n          }\n        }, \"OR\")), _react.default.createElement(_reactNative.View, {\n          style: _styles.default.buttonFacebookView,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 21\n          }\n        }, _react.default.createElement(_reactNativeElements.SocialIcon, {\n          style: _styles.default.buttonFacebook,\n          button: true,\n          iconSize: 20,\n          type: \"facebook\",\n          title: \"Login with Facebook\",\n          onPress: function onPress() {},\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 23\n          }\n        })), _react.default.createElement(_reactNative.View, {\n          style: _styles.default.buttonGoogleView,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 21\n          }\n        }, _react.default.createElement(_reactNativeElements.SocialIcon, {\n          style: _styles.default.buttonGoogle,\n          button: true,\n          iconSize: 20,\n          type: \"google\",\n          title: \"Login with Google\",\n          onPress: function onPress() {},\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 23\n          }\n        }))), _react.default.createElement(_reactNative.View, {\n          style: _styles.default.footerView,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 19\n          }\n        }, _react.default.createElement(_reactNative.View, {\n          style: _styles.default.newUserView,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 21\n          }\n        }, _react.default.createElement(_reactNative.Text, {\n          style: _styles.default.newUser,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 23\n          }\n        }, \"New user?\"), _react.default.createElement(_reactNativeGestureHandler.TouchableOpacity, {\n          onPress: function onPress() {\n            _this2.btnSignUpTapped();\n          },\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 23\n          }\n        }, _react.default.createElement(_reactNative.Text, {\n          style: _styles.default.textTerms,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 25\n          }\n        }, \"Sign up\")), _react.default.createElement(_reactNative.Text, {\n          style: _styles.default.here,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 23\n          }\n        }, \"here\")), _react.default.createElement(_reactNative.View, {\n          style: _styles.default.bottomTextView,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 21\n          }\n        }, _react.default.createElement(_reactNative.Text, {\n          style: _styles.default.bottomText,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 23\n          }\n        }, \"By creating an account, You agree to our\"), _react.default.createElement(_reactNative.View, {\n          style: _styles.default.termsMainView,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 196,\n            columnNumber: 23\n          }\n        }, _react.default.createElement(_reactNativeGestureHandler.TouchableOpacity, {\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 197,\n            columnNumber: 25\n          }\n        }, _react.default.createElement(_reactNative.Text, {\n          style: _styles.default.textTerms,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 198,\n            columnNumber: 27\n          }\n        }, \"Terms of Service\")), _react.default.createElement(_reactNative.Text, {\n          style: _styles.default.and,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 200,\n            columnNumber: 25\n          }\n        }, \"and\"), _react.default.createElement(_reactNativeGestureHandler.TouchableOpacity, {\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 201,\n            columnNumber: 25\n          }\n        }, _react.default.createElement(_reactNative.Text, {\n          style: _styles.default.textTerms,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 27\n          }\n        }, \"Privacy Policy\")))))));\n      })));\n    }\n  }]);\n  return SignIn;\n}(_react.default.Component);\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    signIn: function signIn(creds) {\n      return dispatch(_auth.authOperations.signIn(creds));\n    }\n  };\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    signInError: state.auth.signInError,\n    isLoading: state.auth.signInLoading\n  };\n};\n\nvar _default = (0, _reactRedux.connect)(mapStateToProps, mapDispatchToProps)(SignIn);\n\nexports.default = _default;","map":{"version":3,"sources":["C:/Program Files/nodejs/ComeClosely/app/views/screens/SignIn/index.tsx"],"names":["INITIAL_STATE","email","password","validationSchema","Yup","object","shape","string","label","required","SignIn","props","handleSubmit","values","signIn","btnSignUpTapped","navigation","navigate","btnForgotPasswordTapped","isLoading","styles","mainView","titleView","title","titleColor","formikProps","topView","fieldWrapper","textInput","handleChange","handleBlur","forgotPassword","bottomView","buttonView","submitView","buttonSubmit","isValid","orView","or","buttonFacebookView","buttonFacebook","buttonGoogleView","buttonGoogle","footerView","newUserView","newUser","textTerms","here","bottomTextView","bottomText","termsMainView","and","React","Component","mapDispatchToProps","dispatch","creds","authOperations","mapStateToProps","state","signInError","auth","signInLoading"],"mappings":"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","sourcesContent":["import React, {Fragment} from 'react';\nimport {View, Text, TouchableHighlight} from 'react-native';\n\nimport {connect} from 'react-redux';\nimport TextInput from 'react-native-textinput-with-icons';\nimport {TouchableOpacity} from 'react-native-gesture-handler';\nimport {SafeAreaView} from 'react-native-safe-area-context';\nimport {SocialIcon} from 'react-native-elements';\nimport {KeyboardAwareScrollView} from 'react-native-keyboard-aware-scroll-view';\nimport {Formik} from 'formik';\nimport * as Yup from 'yup';\nimport 'react-native-gesture-handler';\n\nimport styles from './styles';\nimport FormButton from '../../components/FormButton';\nimport FormFieldWrapper from '../../components/FormFieldWrapper';\nimport {Creds} from '../../../state/types';\nimport {authOperations} from '../../../state/ducks/auth';\n\ninterface ComponentProp {\n  navigation: any;\n  signInError: string;\n  isLoading: boolean;\n  signIn(creds: Creds): void;\n}\ninterface ComponentState {\n  email: string;\n  password: string;\n}\nconst INITIAL_STATE: ComponentState = {\n  email: '',\n  password: '',\n};\n\nconst validationSchema = Yup.object().shape({\n  email: Yup.string()\n    .label('Email')\n    .required('Please enter your email')\n    .email('Enter a valid email'),\n  password: Yup.string()\n    .label('Password')\n    .required('Please enter your password'),\n});\n\nclass SignIn extends React.Component<ComponentProp, {}> {\n  constructor(props: any) {\n    super(props);\n  }\n\n  handleSubmit = (values: ComponentState) => {\n    this.props.signIn(values);\n  };\n\n  btnSignUpTapped = () => {\n    this.props.navigation.navigate('SignUp');\n  };\n\n  btnForgotPasswordTapped = () => {\n    this.props.navigation.navigate('ForgotPassword');\n  };\n\n  render() {\n    const {isLoading} = this.props;\n    return (\n      <KeyboardAwareScrollView extraHeight={15} enableOnAndroid={true}>\n        <SafeAreaView style={styles.mainView}>\n          <View style={styles.titleView}>\n            <Text style={styles.title}>Come</Text>\n            <Text style={styles.titleColor}>Closely</Text>\n          </View>\n          <Formik\n            initialValues={INITIAL_STATE}\n            validationSchema={validationSchema}\n            onSubmit={(values) => {\n              this.handleSubmit(values);\n            }}>\n            {(formikProps) => (\n              <Fragment>\n                <View style={styles.topView}>\n                  <FormFieldWrapper\n                    formikProps={formikProps}\n                    formikKey=\"email\"\n                    containerStyles={styles.fieldWrapper}>\n                    <TextInput\n                      style={styles.textInput}\n                      color=\"#515C6F\"\n                      underlineActiveColor=\"#FF2485\"\n                      fontFamily=\"Poppins-Regular\"\n                      label=\"Email Address\"\n                      labelColor=\"#D4D4D4\"\n                      labelActiveColor=\"#FF2485\"\n                      leftIcon=\"email-outline\"\n                      leftIconType=\"material\"\n                      mode=\"outlined\"\n                      leftIconColor=\"#707070\"\n                      value={formikProps.values.email}\n                      onChangeText={formikProps.handleChange('email')}\n                      onBlur={formikProps.handleBlur('email')}\n                    />\n                  </FormFieldWrapper>\n\n                  <FormFieldWrapper\n                    formikProps={formikProps}\n                    formikKey=\"password\"\n                    containerStyles={styles.fieldWrapper}>\n                    <TextInput\n                      style={styles.textInput}\n                      color=\"#515C6F\"\n                      underlineActiveColor=\"#FF2485\"\n                      fontFamily=\"Poppins-Regular\"\n                      label=\"Password\"\n                      labelColor=\"#D4D4D4\"\n                      labelActiveColor=\"#FF2485\"\n                      leftIcon=\"lock\"\n                      leftIconType=\"awesome\"\n                      mode=\"outlined\"\n                      leftIconColor=\"#707070\"\n                      secureTextEntry={true}\n                      value={formikProps.values.password}\n                      onChangeText={formikProps.handleChange('password')}\n                      onBlur={formikProps.handleBlur('password')}\n                    />\n                  </FormFieldWrapper>\n\n                  <TouchableHighlight\n                    underlayColor=\"rgba(0,0,0,0.0)\"\n                    onPress={() => {\n                      this.btnForgotPasswordTapped();\n                    }}>\n                    <Text style={styles.forgotPassword}>Forgot Password?</Text>\n                  </TouchableHighlight>\n                </View>\n                <View style={styles.bottomView}>\n                  <View style={styles.buttonView}>\n                    <View style={styles.submitView}>\n                      <FormButton\n                        title=\"LOGIN\"\n                        containerStyles={styles.buttonSubmit}\n                        loading={isLoading}\n                        disabled={isLoading || !formikProps.isValid}\n                        onPress={formikProps.handleSubmit}\n                      />\n                    </View>\n                    {/* <View>\n                      {signInError ? (\n                        <Text style={styles.or}> {signInError} </Text>\n                      ) : null}\n                    </View> */}\n                    <View style={styles.orView}>\n                      <Text style={styles.or}>OR</Text>\n                    </View>\n                    {/* social icon  */}\n                    <View style={styles.buttonFacebookView}>\n                      <SocialIcon\n                        style={styles.buttonFacebook}\n                        button\n                        iconSize={20}\n                        type=\"facebook\"\n                        title=\"Login with Facebook\"\n                        onPress={() => {\n                          // alert('facebook');\n                        }}\n                      />\n                    </View>\n\n                    <View style={styles.buttonGoogleView}>\n                      <SocialIcon\n                        style={styles.buttonGoogle}\n                        button\n                        iconSize={20}\n                        type=\"google\"\n                        title=\"Login with Google\"\n                        onPress={() => {\n                          // alert('Googleplus');\n                        }}\n                      />\n                    </View>\n                  </View>\n\n                  <View style={styles.footerView}>\n                    <View style={styles.newUserView}>\n                      <Text style={styles.newUser}>New user?</Text>\n                      <TouchableOpacity\n                        onPress={() => {\n                          this.btnSignUpTapped();\n                        }}>\n                        <Text style={styles.textTerms}>Sign up</Text>\n                      </TouchableOpacity>\n                      <Text style={styles.here}>here</Text>\n                    </View>\n                    <View style={styles.bottomTextView}>\n                      <Text style={styles.bottomText}>\n                        By creating an account, You agree to our\n                      </Text>\n\n                      <View style={styles.termsMainView}>\n                        <TouchableOpacity>\n                          <Text style={styles.textTerms}>Terms of Service</Text>\n                        </TouchableOpacity>\n                        <Text style={styles.and}>and</Text>\n                        <TouchableOpacity>\n                          <Text style={styles.textTerms}>Privacy Policy</Text>\n                        </TouchableOpacity>\n                      </View>\n                    </View>\n                  </View>\n                </View>\n              </Fragment>\n            )}\n          </Formik>\n        </SafeAreaView>\n      </KeyboardAwareScrollView>\n    );\n  }\n}\n\nconst mapDispatchToProps = (dispatch: Function) => {\n  return {\n    signIn: (creds: Creds) => dispatch(authOperations.signIn(creds)),\n  };\n};\n\nconst mapStateToProps = (state: any) => {\n  return {\n    signInError: state.auth.signInError,\n    isLoading: state.auth.signInLoading,\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SignIn);\n"]},"metadata":{},"sourceType":"script"}