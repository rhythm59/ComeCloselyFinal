{"ast":null,"code":"var _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _common = require(\"@react-native-firebase/app/lib/common\");\n\nvar _StorageDownloadTask = _interopRequireDefault(require(\"./StorageDownloadTask\"));\n\nvar _StorageListResult = _interopRequireWildcard(require(\"./StorageListResult\"));\n\nvar _StorageStatics = _interopRequireDefault(require(\"./StorageStatics\"));\n\nvar _StorageUploadTask = _interopRequireDefault(require(\"./StorageUploadTask\"));\n\nvar _utils = require(\"./utils\");\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nvar StorageReference = function (_ReferenceBase) {\n  (0, _inherits2.default)(StorageReference, _ReferenceBase);\n\n  var _super = _createSuper(StorageReference);\n\n  function StorageReference(storage, path) {\n    var _this;\n\n    (0, _classCallCheck2.default)(this, StorageReference);\n    _this = _super.call(this, path);\n    _this._storage = storage;\n    return _this;\n  }\n\n  (0, _createClass2.default)(StorageReference, [{\n    key: \"child\",\n    value: function child(path) {\n      var childPath = (0, _common.pathChild)(this.path, path);\n      return new StorageReference(this._storage, childPath);\n    }\n  }, {\n    key: \"delete\",\n    value: function _delete() {\n      return this._storage.native.delete(this.toString());\n    }\n  }, {\n    key: \"getDownloadURL\",\n    value: function getDownloadURL() {\n      return this._storage.native.getDownloadURL(this.toString());\n    }\n  }, {\n    key: \"getMetadata\",\n    value: function getMetadata() {\n      return this._storage.native.getMetadata(this.toString());\n    }\n  }, {\n    key: \"list\",\n    value: function list(options) {\n      var _this2 = this;\n\n      if (!(0, _common.isUndefined)(options) && !(0, _common.isObject)(options)) {\n        throw new Error(\"firebase.storage.StorageReference.list(*) 'options' expected an object value.\");\n      }\n\n      var listOptions = {\n        maxResults: 1000\n      };\n\n      if (options) {\n        if ((0, _common.hasOwnProperty)(options, 'maxResults')) {\n          if (!(0, _common.isNumber)(options.maxResults) || !(0, _common.isInteger)(options.maxResults)) {\n            throw new Error(\"firebase.storage.StorageReference.list(*) 'options.maxResults' expected a number value.\");\n          }\n\n          if (options.maxResults < 1 || options.maxResults > 1000) {\n            throw new Error(\"firebase.storage.StorageReference.list(*) 'options.maxResults' expected a number value between 1-1000.\");\n          }\n\n          listOptions.maxResults = options.maxResults;\n        }\n\n        if (options.pageToken) {\n          if (!(0, _common.isString)(options.pageToken)) {\n            throw new Error(\"firebase.storage.StorageReference.list(*) 'options.pageToken' expected a string value.\");\n          }\n\n          listOptions.pageToken = options.pageToken;\n        }\n      }\n\n      return this._storage.native.list(this.toString(), listOptions).then(function (data) {\n        return new _StorageListResult.default(_this2._storage, data);\n      });\n    }\n  }, {\n    key: \"listAll\",\n    value: function listAll() {\n      var _this3 = this;\n\n      return this._storage.native.listAll(this.toString()).then(function (data) {\n        return new _StorageListResult.default(_this3._storage, data);\n      });\n    }\n  }, {\n    key: \"put\",\n    value: function put(data, metadata) {\n      var _this4 = this;\n\n      if (!(0, _common.isUndefined)(metadata)) {\n        (0, _utils.validateMetadata)(metadata);\n      }\n\n      return new _StorageUploadTask.default(this, function (task) {\n        return _common.Base64.fromData(data).then(function (_ref) {\n          var string = _ref.string,\n              format = _ref.format;\n\n          var _this4$_updateString = _this4._updateString(string, format, metadata),\n              _string = _this4$_updateString._string,\n              _format = _this4$_updateString._format,\n              _metadata = _this4$_updateString._metadata;\n\n          return _this4._storage.native.putString(_this4.toString(), _string, _format, _metadata, task._id);\n        });\n      });\n    }\n  }, {\n    key: \"putString\",\n    value: function putString(string) {\n      var _this5 = this;\n\n      var format = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _StorageStatics.default.StringFormat.RAW;\n      var metadata = arguments.length > 2 ? arguments[2] : undefined;\n\n      var _this$_updateString = this._updateString(string, format, metadata),\n          _string = _this$_updateString._string,\n          _format = _this$_updateString._format,\n          _metadata = _this$_updateString._metadata;\n\n      return new _StorageUploadTask.default(this, function (task) {\n        return _this5._storage.native.putString(_this5.toString(), _string, _format, _metadata, task._id);\n      });\n    }\n  }, {\n    key: \"toString\",\n    value: function toString() {\n      if (this.path.length <= 1) {\n        return \"\" + this._storage._customUrlOrRegion;\n      }\n\n      return this._storage._customUrlOrRegion + \"/\" + this.path;\n    }\n  }, {\n    key: \"updateMetadata\",\n    value: function updateMetadata(metadata) {\n      (0, _utils.validateMetadata)(metadata);\n      return this._storage.native.updateMetadata(this.toString(), metadata);\n    }\n  }, {\n    key: \"writeToFile\",\n    value: function writeToFile(filePath) {\n      var _this6 = this;\n\n      if (!(0, _common.isString)(filePath)) {\n        throw new Error(\"firebase.storage.StorageReference.writeToFile(*) 'filePath' expects a string value.\");\n      }\n\n      return new _StorageDownloadTask.default(this, function (task) {\n        return _this6._storage.native.writeToFile(_this6.toString(), (0, _common.toFilePath)(filePath), task._id);\n      });\n    }\n  }, {\n    key: \"downloadFile\",\n    value: function downloadFile(filePath) {\n      console.warn(\"firebase.storage.Reference.downloadFile() is deprecated, please rename usages to 'writeToFile()'\");\n      return this.writeToFile((0, _common.toFilePath)(filePath));\n    }\n  }, {\n    key: \"putFile\",\n    value: function putFile(filePath, metadata) {\n      var _this7 = this;\n\n      if (!(0, _common.isUndefined)(metadata)) {\n        (0, _utils.validateMetadata)(metadata);\n      }\n\n      if (!(0, _common.isString)(filePath)) {\n        throw new Error(\"firebase.storage.StorageReference.putFile(*, _) 'filePath' expects a string value.\");\n      }\n\n      return new _StorageUploadTask.default(this, function (task) {\n        return _this7._storage.native.putFile(_this7.toString(), (0, _common.toFilePath)(filePath), metadata, task._id);\n      });\n    }\n  }, {\n    key: \"_updateString\",\n    value: function _updateString(string, format, metadata) {\n      if (!(0, _common.isString)(string)) {\n        throw new Error(\"firebase.storage.StorageReference.putString(*, _, _) 'string' expects a string value.\");\n      }\n\n      if (!Object.values(_StorageStatics.default.StringFormat).includes(format)) {\n        throw new Error(\"firebase.storage.StorageReference.putString(_, *, _) 'format' provided is invalid, must be one of \" + Object.values(_StorageStatics.default.StringFormat).join(',') + \".\");\n      }\n\n      if (!(0, _common.isUndefined)(metadata)) {\n        (0, _utils.validateMetadata)(metadata);\n      }\n\n      var _string = string;\n      var _format = format;\n      var _metadata = metadata;\n\n      if (format === _StorageStatics.default.StringFormat.RAW) {\n        _string = _common.Base64.btoa(_string);\n        _format = _StorageStatics.default.StringFormat.BASE64;\n      } else if (format === _StorageStatics.default.StringFormat.DATA_URL) {\n        var _getDataUrlParts = (0, _common.getDataUrlParts)(_string),\n            mediaType = _getDataUrlParts.mediaType,\n            base64String = _getDataUrlParts.base64String;\n\n        if ((0, _common.isUndefined)(base64String)) {\n          throw new Error('firebase.storage.StorageReference.putString(*, _, _) invalid data_url string provided.');\n        }\n\n        if ((0, _common.isUndefined)(metadata) || (0, _common.isUndefined)(metadata.contentType)) {\n          if ((0, _common.isUndefined)(metadata)) {\n            _metadata = {};\n          }\n\n          _metadata.contentType = mediaType;\n          _string = base64String;\n          _format = _StorageStatics.default.StringFormat.BASE64;\n        }\n      }\n\n      return {\n        _string: _string,\n        _metadata: _metadata,\n        _format: _format\n      };\n    }\n  }, {\n    key: \"bucket\",\n    get: function get() {\n      return this._storage._customUrlOrRegion.replace('gs://', '');\n    }\n  }, {\n    key: \"fullPath\",\n    get: function get() {\n      return this.path;\n    }\n  }, {\n    key: \"name\",\n    get: function get() {\n      return (0, _common.pathLastComponent)(this.path);\n    }\n  }, {\n    key: \"parent\",\n    get: function get() {\n      var parentPath = (0, _common.pathParent)(this.path);\n\n      if (parentPath === null) {\n        return parentPath;\n      }\n\n      return new StorageReference(this._storage, parentPath);\n    }\n  }, {\n    key: \"root\",\n    get: function get() {\n      return new StorageReference(this._storage, '/');\n    }\n  }, {\n    key: \"storage\",\n    get: function get() {\n      return this._storage;\n    }\n  }]);\n  return StorageReference;\n}(_common.ReferenceBase);\n\nexports.default = StorageReference;\n(0, _StorageListResult.provideStorageReferenceClass)(StorageReference);","map":{"version":3,"sources":["C:/Program Files/nodejs/ComeClosely/node_modules/@react-native-firebase/storage/lib/StorageReference.js"],"names":["StorageReference","storage","path","_storage","childPath","native","delete","toString","getDownloadURL","getMetadata","options","Error","listOptions","maxResults","pageToken","list","then","data","StorageListResult","listAll","metadata","StorageUploadTask","task","Base64","fromData","string","format","_updateString","_string","_format","_metadata","putString","_id","StorageStatics","StringFormat","RAW","length","_customUrlOrRegion","updateMetadata","filePath","StorageDownloadTask","writeToFile","console","warn","putFile","Object","values","includes","join","btoa","BASE64","DATA_URL","mediaType","base64String","contentType","replace","parentPath","ReferenceBase"],"mappings":";;;;;;;;;;;;;;;;;;;AAkBA;;AAeA;;AACA;;AACA;;AACA;;AACA;;;;;;IAEqBA,gB;;;;;AACnB,4BAAYC,OAAZ,EAAqBC,IAArB,EAA2B;AAAA;;AAAA;AACzB,8BAAMA,IAAN;AACA,UAAKC,QAAL,GAAgBF,OAAhB;AAFyB;AAG1B;;;;0BAmDKC,I,EAAM;AACV,UAAME,SAAS,GAAG,uBAAU,KAAKF,IAAf,EAAqBA,IAArB,CAAlB;AACA,aAAO,IAAIF,gBAAJ,CAAqB,KAAKG,QAA1B,EAAoCC,SAApC,CAAP;AACD;;;8BAKQ;AACP,aAAO,KAAKD,QAAL,CAAcE,MAAd,CAAqBC,MAArB,CAA4B,KAAKC,QAAL,EAA5B,CAAP;AACD;;;qCAKgB;AACf,aAAO,KAAKJ,QAAL,CAAcE,MAAd,CAAqBG,cAArB,CAAoC,KAAKD,QAAL,EAApC,CAAP;AACD;;;kCAKa;AACZ,aAAO,KAAKJ,QAAL,CAAcE,MAAd,CAAqBI,WAArB,CAAiC,KAAKF,QAAL,EAAjC,CAAP;AACD;;;yBAKIG,O,EAAS;AAAA;;AACZ,UAAI,CAAC,yBAAYA,OAAZ,CAAD,IAAyB,CAAC,sBAASA,OAAT,CAA9B,EAAiD;AAC/C,cAAM,IAAIC,KAAJ,CACJ,+EADI,CAAN;AAGD;;AAED,UAAMC,WAAW,GAAG;AAClBC,QAAAA,UAAU,EAAE;AADM,OAApB;;AAIA,UAAIH,OAAJ,EAAa;AACX,YAAI,4BAAeA,OAAf,EAAwB,YAAxB,CAAJ,EAA2C;AACzC,cAAI,CAAC,sBAASA,OAAO,CAACG,UAAjB,CAAD,IAAiC,CAAC,uBAAUH,OAAO,CAACG,UAAlB,CAAtC,EAAqE;AACnE,kBAAM,IAAIF,KAAJ,CACJ,yFADI,CAAN;AAGD;;AAED,cAAID,OAAO,CAACG,UAAR,GAAqB,CAArB,IAA0BH,OAAO,CAACG,UAAR,GAAqB,IAAnD,EAAyD;AACvD,kBAAM,IAAIF,KAAJ,CACJ,wGADI,CAAN;AAGD;;AAEDC,UAAAA,WAAW,CAACC,UAAZ,GAAyBH,OAAO,CAACG,UAAjC;AACD;;AAED,YAAIH,OAAO,CAACI,SAAZ,EAAuB;AACrB,cAAI,CAAC,sBAASJ,OAAO,CAACI,SAAjB,CAAL,EAAkC;AAChC,kBAAM,IAAIH,KAAJ,CACJ,wFADI,CAAN;AAGD;;AAEDC,UAAAA,WAAW,CAACE,SAAZ,GAAwBJ,OAAO,CAACI,SAAhC;AACD;AACF;;AAED,aAAO,KAAKX,QAAL,CAAcE,MAAd,CACJU,IADI,CACC,KAAKR,QAAL,EADD,EACkBK,WADlB,EAEJI,IAFI,CAEC,UAAAC,IAAI;AAAA,eAAI,IAAIC,0BAAJ,CAAsB,MAAI,CAACf,QAA3B,EAAqCc,IAArC,CAAJ;AAAA,OAFL,CAAP;AAGD;;;8BAKS;AAAA;;AACR,aAAO,KAAKd,QAAL,CAAcE,MAAd,CACJc,OADI,CACI,KAAKZ,QAAL,EADJ,EAEJS,IAFI,CAEC,UAAAC,IAAI;AAAA,eAAI,IAAIC,0BAAJ,CAAsB,MAAI,CAACf,QAA3B,EAAqCc,IAArC,CAAJ;AAAA,OAFL,CAAP;AAGD;;;wBAKGA,I,EAAMG,Q,EAAU;AAAA;;AAClB,UAAI,CAAC,yBAAYA,QAAZ,CAAL,EAA4B;AAC1B,qCAAiBA,QAAjB;AACD;;AAED,aAAO,IAAIC,0BAAJ,CAAsB,IAAtB,EAA4B,UAAAC,IAAI;AAAA,eACrCC,eAAOC,QAAP,CAAgBP,IAAhB,EAAsBD,IAAtB,CAA2B,gBAAwB;AAAA,cAArBS,MAAqB,QAArBA,MAAqB;AAAA,cAAbC,MAAa,QAAbA,MAAa;;AAAA,qCACT,MAAI,CAACC,aAAL,CAAmBF,MAAnB,EAA2BC,MAA3B,EAAmCN,QAAnC,CADS;AAAA,cACzCQ,OADyC,wBACzCA,OADyC;AAAA,cAChCC,OADgC,wBAChCA,OADgC;AAAA,cACvBC,SADuB,wBACvBA,SADuB;;AAEjD,iBAAO,MAAI,CAAC3B,QAAL,CAAcE,MAAd,CAAqB0B,SAArB,CACL,MAAI,CAACxB,QAAL,EADK,EAELqB,OAFK,EAGLC,OAHK,EAILC,SAJK,EAKLR,IAAI,CAACU,GALA,CAAP;AAOD,SATD,CADqC;AAAA,OAAhC,CAAP;AAYD;;;8BAKSP,M,EAA4D;AAAA;;AAAA,UAApDC,MAAoD,uEAA3CO,wBAAeC,YAAf,CAA4BC,GAAe;AAAA,UAAVf,QAAU;;AAAA,gCAC5B,KAAKO,aAAL,CAAmBF,MAAnB,EAA2BC,MAA3B,EAAmCN,QAAnC,CAD4B;AAAA,UAC5DQ,OAD4D,uBAC5DA,OAD4D;AAAA,UACnDC,OADmD,uBACnDA,OADmD;AAAA,UAC1CC,SAD0C,uBAC1CA,SAD0C;;AAGpE,aAAO,IAAIT,0BAAJ,CAAsB,IAAtB,EAA4B,UAAAC,IAAI;AAAA,eACrC,MAAI,CAACnB,QAAL,CAAcE,MAAd,CAAqB0B,SAArB,CAA+B,MAAI,CAACxB,QAAL,EAA/B,EAAgDqB,OAAhD,EAAyDC,OAAzD,EAAkEC,SAAlE,EAA6ER,IAAI,CAACU,GAAlF,CADqC;AAAA,OAAhC,CAAP;AAGD;;;+BAKU;AACT,UAAI,KAAK9B,IAAL,CAAUkC,MAAV,IAAoB,CAAxB,EAA2B;AACzB,oBAAU,KAAKjC,QAAL,CAAckC,kBAAxB;AACD;;AAED,aAAU,KAAKlC,QAAL,CAAckC,kBAAxB,SAA8C,KAAKnC,IAAnD;AACD;;;mCAKckB,Q,EAAU;AACvB,mCAAiBA,QAAjB;AACA,aAAO,KAAKjB,QAAL,CAAcE,MAAd,CAAqBiC,cAArB,CAAoC,KAAK/B,QAAL,EAApC,EAAqDa,QAArD,CAAP;AACD;;;gCASWmB,Q,EAAU;AAAA;;AACpB,UAAI,CAAC,sBAASA,QAAT,CAAL,EAAyB;AACvB,cAAM,IAAI5B,KAAJ,CACJ,qFADI,CAAN;AAGD;;AAED,aAAO,IAAI6B,4BAAJ,CAAwB,IAAxB,EAA8B,UAAAlB,IAAI;AAAA,eACvC,MAAI,CAACnB,QAAL,CAAcE,MAAd,CAAqBoC,WAArB,CAAiC,MAAI,CAAClC,QAAL,EAAjC,EAAkD,wBAAWgC,QAAX,CAAlD,EAAwEjB,IAAI,CAACU,GAA7E,CADuC;AAAA,OAAlC,CAAP;AAGD;;;iCAMYO,Q,EAAU;AACrBG,MAAAA,OAAO,CAACC,IAAR,CACE,kGADF;AAGA,aAAO,KAAKF,WAAL,CAAiB,wBAAWF,QAAX,CAAjB,CAAP;AACD;;;4BAKOA,Q,EAAUnB,Q,EAAU;AAAA;;AAC1B,UAAI,CAAC,yBAAYA,QAAZ,CAAL,EAA4B;AAC1B,qCAAiBA,QAAjB;AACD;;AAED,UAAI,CAAC,sBAASmB,QAAT,CAAL,EAAyB;AACvB,cAAM,IAAI5B,KAAJ,CACJ,oFADI,CAAN;AAGD;;AAED,aAAO,IAAIU,0BAAJ,CAAsB,IAAtB,EAA4B,UAAAC,IAAI;AAAA,eACrC,MAAI,CAACnB,QAAL,CAAcE,MAAd,CAAqBuC,OAArB,CAA6B,MAAI,CAACrC,QAAL,EAA7B,EAA8C,wBAAWgC,QAAX,CAA9C,EAAoEnB,QAApE,EAA8EE,IAAI,CAACU,GAAnF,CADqC;AAAA,OAAhC,CAAP;AAGD;;;kCAEaP,M,EAAQC,M,EAAQN,Q,EAAU;AACtC,UAAI,CAAC,sBAASK,MAAT,CAAL,EAAuB;AACrB,cAAM,IAAId,KAAJ,CACJ,uFADI,CAAN;AAGD;;AAED,UAAI,CAACkC,MAAM,CAACC,MAAP,CAAcb,wBAAeC,YAA7B,EAA2Ca,QAA3C,CAAoDrB,MAApD,CAAL,EAAkE;AAChE,cAAM,IAAIf,KAAJ,wGACiGkC,MAAM,CAACC,MAAP,CACnGb,wBAAeC,YADoF,EAEnGc,IAFmG,CAE9F,GAF8F,CADjG,OAAN;AAKD;;AAED,UAAI,CAAC,yBAAY5B,QAAZ,CAAL,EAA4B;AAC1B,qCAAiBA,QAAjB;AACD;;AAED,UAAIQ,OAAO,GAAGH,MAAd;AACA,UAAII,OAAO,GAAGH,MAAd;AACA,UAAII,SAAS,GAAGV,QAAhB;;AAEA,UAAIM,MAAM,KAAKO,wBAAeC,YAAf,CAA4BC,GAA3C,EAAgD;AAC9CP,QAAAA,OAAO,GAAGL,eAAO0B,IAAP,CAAYrB,OAAZ,CAAV;AACAC,QAAAA,OAAO,GAAGI,wBAAeC,YAAf,CAA4BgB,MAAtC;AACD,OAHD,MAGO,IAAIxB,MAAM,KAAKO,wBAAeC,YAAf,CAA4BiB,QAA3C,EAAqD;AAAA,+BACtB,6BAAgBvB,OAAhB,CADsB;AAAA,YAClDwB,SADkD,oBAClDA,SADkD;AAAA,YACvCC,YADuC,oBACvCA,YADuC;;AAE1D,YAAI,yBAAYA,YAAZ,CAAJ,EAA+B;AAC7B,gBAAM,IAAI1C,KAAJ,CACJ,wFADI,CAAN;AAGD;;AAED,YAAI,yBAAYS,QAAZ,KAAyB,yBAAYA,QAAQ,CAACkC,WAArB,CAA7B,EAAgE;AAC9D,cAAI,yBAAYlC,QAAZ,CAAJ,EAA2B;AACzBU,YAAAA,SAAS,GAAG,EAAZ;AACD;;AACDA,UAAAA,SAAS,CAACwB,WAAV,GAAwBF,SAAxB;AACAxB,UAAAA,OAAO,GAAGyB,YAAV;AACAxB,UAAAA,OAAO,GAAGI,wBAAeC,YAAf,CAA4BgB,MAAtC;AACD;AACF;;AACD,aAAO;AAAEtB,QAAAA,OAAO,EAAPA,OAAF;AAAWE,QAAAA,SAAS,EAATA,SAAX;AAAsBD,QAAAA,OAAO,EAAPA;AAAtB,OAAP;AACD;;;wBAjRY;AACX,aAAO,KAAK1B,QAAL,CAAckC,kBAAd,CAAiCkB,OAAjC,CAAyC,OAAzC,EAAkD,EAAlD,CAAP;AACD;;;wBAKc;AACb,aAAO,KAAKrD,IAAZ;AACD;;;wBAKU;AACT,aAAO,+BAAkB,KAAKA,IAAvB,CAAP;AACD;;;wBAKY;AACX,UAAMsD,UAAU,GAAG,wBAAW,KAAKtD,IAAhB,CAAnB;;AACA,UAAIsD,UAAU,KAAK,IAAnB,EAAyB;AACvB,eAAOA,UAAP;AACD;;AACD,aAAO,IAAIxD,gBAAJ,CAAqB,KAAKG,QAA1B,EAAoCqD,UAApC,CAAP;AACD;;;wBAKU;AACT,aAAO,IAAIxD,gBAAJ,CAAqB,KAAKG,QAA1B,EAAoC,GAApC,CAAP;AACD;;;wBAKa;AACZ,aAAO,KAAKA,QAAZ;AACD;;;EAlD2CsD,qB;;;AA6R9C,qDAA6BzD,gBAA7B","sourcesContent":["/* eslint-disable no-console */\n/*\n * Copyright (c) 2016-present Invertase Limited & Contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this library except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\n\nimport {\n  Base64,\n  getDataUrlParts,\n  hasOwnProperty,\n  isInteger,\n  isNumber,\n  isObject,\n  isString,\n  isUndefined,\n  pathChild,\n  pathLastComponent,\n  pathParent,\n  ReferenceBase,\n  toFilePath,\n} from '@react-native-firebase/app/lib/common';\nimport StorageDownloadTask from './StorageDownloadTask';\nimport StorageListResult, { provideStorageReferenceClass } from './StorageListResult';\nimport StorageStatics from './StorageStatics';\nimport StorageUploadTask from './StorageUploadTask';\nimport { validateMetadata } from './utils';\n\nexport default class StorageReference extends ReferenceBase {\n  constructor(storage, path) {\n    super(path);\n    this._storage = storage;\n  }\n\n  /**\n   * @url https://firebase.google.com/docs/reference/js/firebase.storage.Reference#bucket\n   */\n  get bucket() {\n    return this._storage._customUrlOrRegion.replace('gs://', '');\n  }\n\n  /**\n   * @url https://firebase.google.com/docs/reference/js/firebase.storage.Reference#fullPath\n   */\n  get fullPath() {\n    return this.path;\n  }\n\n  /**\n   * @url https://firebase.google.com/docs/reference/js/firebase.storage.Reference#name\n   */\n  get name() {\n    return pathLastComponent(this.path);\n  }\n\n  /**\n   * @url https://firebase.google.com/docs/reference/js/firebase.storage.Reference#parent\n   */\n  get parent() {\n    const parentPath = pathParent(this.path);\n    if (parentPath === null) {\n      return parentPath;\n    }\n    return new StorageReference(this._storage, parentPath);\n  }\n\n  /**\n   * @url https://firebase.google.com/docs/reference/js/firebase.storage.Reference#root\n   */\n  get root() {\n    return new StorageReference(this._storage, '/');\n  }\n\n  /**\n   * @url https://firebase.google.com/docs/reference/js/firebase.storage.Reference#storage\n   */\n  get storage() {\n    return this._storage;\n  }\n\n  /**\n   * @url https://firebase.google.com/docs/reference/js/firebase.storage.Reference#child\n   */\n  child(path) {\n    const childPath = pathChild(this.path, path);\n    return new StorageReference(this._storage, childPath);\n  }\n\n  /**\n   * @url https://firebase.google.com/docs/reference/js/firebase.storage.Reference#delete\n   */\n  delete() {\n    return this._storage.native.delete(this.toString());\n  }\n\n  /**\n   * @url https://firebase.google.com/docs/reference/js/firebase.storage.Reference#getDownloadURL\n   */\n  getDownloadURL() {\n    return this._storage.native.getDownloadURL(this.toString());\n  }\n\n  /**\n   * @url https://firebase.google.com/docs/reference/js/firebase.storage.Reference#getMetadata\n   */\n  getMetadata() {\n    return this._storage.native.getMetadata(this.toString());\n  }\n\n  /**\n   * @url https://firebase.google.com/docs/reference/js/firebase.storage.Reference#list\n   */\n  list(options) {\n    if (!isUndefined(options) && !isObject(options)) {\n      throw new Error(\n        \"firebase.storage.StorageReference.list(*) 'options' expected an object value.\",\n      );\n    }\n\n    const listOptions = {\n      maxResults: 1000,\n    };\n\n    if (options) {\n      if (hasOwnProperty(options, 'maxResults')) {\n        if (!isNumber(options.maxResults) || !isInteger(options.maxResults)) {\n          throw new Error(\n            \"firebase.storage.StorageReference.list(*) 'options.maxResults' expected a number value.\",\n          );\n        }\n\n        if (options.maxResults < 1 || options.maxResults > 1000) {\n          throw new Error(\n            \"firebase.storage.StorageReference.list(*) 'options.maxResults' expected a number value between 1-1000.\",\n          );\n        }\n\n        listOptions.maxResults = options.maxResults;\n      }\n\n      if (options.pageToken) {\n        if (!isString(options.pageToken)) {\n          throw new Error(\n            \"firebase.storage.StorageReference.list(*) 'options.pageToken' expected a string value.\",\n          );\n        }\n\n        listOptions.pageToken = options.pageToken;\n      }\n    }\n\n    return this._storage.native\n      .list(this.toString(), listOptions)\n      .then(data => new StorageListResult(this._storage, data));\n  }\n\n  /**\n   * @url https://firebase.google.com/docs/reference/js/firebase.storage.Reference#listAll\n   */\n  listAll() {\n    return this._storage.native\n      .listAll(this.toString())\n      .then(data => new StorageListResult(this._storage, data));\n  }\n\n  /**\n   * @url https://firebase.google.com/docs/reference/js/firebase.storage.Reference#put\n   */\n  put(data, metadata) {\n    if (!isUndefined(metadata)) {\n      validateMetadata(metadata);\n    }\n\n    return new StorageUploadTask(this, task =>\n      Base64.fromData(data).then(({ string, format }) => {\n        const { _string, _format, _metadata } = this._updateString(string, format, metadata);\n        return this._storage.native.putString(\n          this.toString(),\n          _string,\n          _format,\n          _metadata,\n          task._id,\n        );\n      }),\n    );\n  }\n\n  /**\n   * @url https://firebase.google.com/docs/reference/js/firebase.storage.Reference#putString\n   */\n  putString(string, format = StorageStatics.StringFormat.RAW, metadata) {\n    const { _string, _format, _metadata } = this._updateString(string, format, metadata);\n\n    return new StorageUploadTask(this, task =>\n      this._storage.native.putString(this.toString(), _string, _format, _metadata, task._id),\n    );\n  }\n\n  /**\n   * @url https://firebase.google.com/docs/reference/js/firebase.storage.Reference#fullPath\n   */\n  toString() {\n    if (this.path.length <= 1) {\n      return `${this._storage._customUrlOrRegion}`;\n    }\n\n    return `${this._storage._customUrlOrRegion}/${this.path}`;\n  }\n\n  /**\n   * @url https://firebase.google.com/docs/reference/js/firebase.storage.Reference#updateMetadata\n   */\n  updateMetadata(metadata) {\n    validateMetadata(metadata);\n    return this._storage.native.updateMetadata(this.toString(), metadata);\n  }\n\n  /* ----------------------------------------\n   *   EXTRA APIS (DO NOT ON EXIST WEB SDK)\n   * ---------------------------------------- */\n\n  /**\n   * @url https://firebase.google.com/docs/reference/js/firebase.storage.Reference\n   */\n  writeToFile(filePath) {\n    if (!isString(filePath)) {\n      throw new Error(\n        \"firebase.storage.StorageReference.writeToFile(*) 'filePath' expects a string value.\",\n      );\n    }\n\n    return new StorageDownloadTask(this, task =>\n      this._storage.native.writeToFile(this.toString(), toFilePath(filePath), task._id),\n    );\n  }\n\n  /**\n   * @url https://firebase.google.com/docs/reference/js/firebase.storage.Reference\n   */\n  // TODO(deprecation) remove in 6.2.\n  downloadFile(filePath) {\n    console.warn(\n      \"firebase.storage.Reference.downloadFile() is deprecated, please rename usages to 'writeToFile()'\",\n    );\n    return this.writeToFile(toFilePath(filePath));\n  }\n\n  /**\n   * @url https://firebase.google.com/docs/reference/js/firebase.storage.Reference\n   */\n  putFile(filePath, metadata) {\n    if (!isUndefined(metadata)) {\n      validateMetadata(metadata);\n    }\n\n    if (!isString(filePath)) {\n      throw new Error(\n        \"firebase.storage.StorageReference.putFile(*, _) 'filePath' expects a string value.\",\n      );\n    }\n\n    return new StorageUploadTask(this, task =>\n      this._storage.native.putFile(this.toString(), toFilePath(filePath), metadata, task._id),\n    );\n  }\n\n  _updateString(string, format, metadata) {\n    if (!isString(string)) {\n      throw new Error(\n        \"firebase.storage.StorageReference.putString(*, _, _) 'string' expects a string value.\",\n      );\n    }\n\n    if (!Object.values(StorageStatics.StringFormat).includes(format)) {\n      throw new Error(\n        `firebase.storage.StorageReference.putString(_, *, _) 'format' provided is invalid, must be one of ${Object.values(\n          StorageStatics.StringFormat,\n        ).join(',')}.`,\n      );\n    }\n\n    if (!isUndefined(metadata)) {\n      validateMetadata(metadata);\n    }\n\n    let _string = string;\n    let _format = format;\n    let _metadata = metadata;\n\n    if (format === StorageStatics.StringFormat.RAW) {\n      _string = Base64.btoa(_string);\n      _format = StorageStatics.StringFormat.BASE64;\n    } else if (format === StorageStatics.StringFormat.DATA_URL) {\n      const { mediaType, base64String } = getDataUrlParts(_string);\n      if (isUndefined(base64String)) {\n        throw new Error(\n          'firebase.storage.StorageReference.putString(*, _, _) invalid data_url string provided.',\n        );\n      }\n\n      if (isUndefined(metadata) || isUndefined(metadata.contentType)) {\n        if (isUndefined(metadata)) {\n          _metadata = {};\n        }\n        _metadata.contentType = mediaType;\n        _string = base64String;\n        _format = StorageStatics.StringFormat.BASE64;\n      }\n    }\n    return { _string, _metadata, _format };\n  }\n}\n\nprovideStorageReferenceClass(StorageReference);\n"]},"metadata":{},"sourceType":"script"}