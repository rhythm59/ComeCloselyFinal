{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _extends3 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\n\nvar loadingReducer = function loadingReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n  var type = action.type;\n  var matches = /(.*)_(REQUEST|SUCCESS|FAILURE)/.exec(type);\n\n  if (!matches) {\n    return state;\n  }\n\n  var _matches = (0, _slicedToArray2.default)(matches, 3),\n      requestName = _matches[1],\n      requestState = _matches[2];\n\n  return (0, _extends3.default)({}, state, (0, _defineProperty2.default)({}, requestName, requestState === 'REQUEST'));\n};\n\nvar _default = loadingReducer;\nexports.default = _default;","map":{"version":3,"sources":["C:/Program Files/nodejs/ComeClosely/app/state/ducks/loading/reducers.ts"],"names":["loadingReducer","state","action","type","matches","exec","requestName","requestState"],"mappings":";;;;;;;;;;;;;AAAA,IAAMA,cAAc,GAAG,SAAjBA,cAAiB,GAA6B;AAAA,MAA5BC,KAA4B,uEAApB,EAAoB;AAAA,MAAhBC,MAAgB;AAAA,MAC3CC,IAD2C,GACnCD,MADmC,CAC3CC,IAD2C;AAElD,MAAMC,OAAO,GAAG,iCAAiCC,IAAjC,CAAsCF,IAAtC,CAAhB;;AAGA,MAAI,CAACC,OAAL,EAAc;AACZ,WAAOH,KAAP;AACD;;AAPiD,8CASZG,OATY;AAAA,MASzCE,WATyC;AAAA,MAS5BC,YAT4B;;AAUlD,oCACKN,KADL,oCAKGK,WALH,EAKiBC,YAAY,KAAK,SALlC;AAOD,CAjBD;;eAmBeP,c","sourcesContent":["const loadingReducer = (state = {}, action: any) => {\n  const {type} = action;\n  const matches = /(.*)_(REQUEST|SUCCESS|FAILURE)/.exec(type);\n\n  // not a *_REQUEST / *_SUCCESS /  *_FAILURE actions, so we ignore them\n  if (!matches) {\n    return state;\n  }\n\n  const [, requestName, requestState] = matches;\n  return {\n    ...state,\n    // Store whether a request is happening at the moment or not\n    // e.g. will be true when receiving SIGNIN_REQUEST\n    //      and false when receiving SIGNIN_SUCCESS / SIGNIN_FAILURE\n    [requestName]: requestState === 'REQUEST',\n  };\n};\n\nexport default loadingReducer;\n"]},"metadata":{},"sourceType":"script"}