{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nObject.defineProperty(exports, \"Triangle\", {\n  enumerable: true,\n  get: function get() {\n    return _Triangle.default;\n  }\n});\nexports.default = void 0;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _assertThisInitialized2 = _interopRequireDefault(require(\"@babel/runtime/helpers/assertThisInitialized\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _Triangle = _interopRequireDefault(require(\"./Triangle\"));\n\nvar _jsxFileName = \"C:\\\\Program Files\\\\nodejs\\\\ComeClosely\\\\node_modules\\\\react-native-autoscroll-flatlist\\\\index.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nvar AutoScrollFlatList = function (_React$PureComponent) {\n  (0, _inherits2.default)(AutoScrollFlatList, _React$PureComponent);\n\n  var _super = _createSuper(AutoScrollFlatList);\n\n  function AutoScrollFlatList(props) {\n    var _this;\n\n    (0, _classCallCheck2.default)(this, AutoScrollFlatList);\n    _this = _super.call(this, props);\n    _this.listRef = _react.default.createRef();\n    _this.flatListHeight = 0;\n    _this.contentHeight = 0;\n    _this.scrollTop = 0;\n\n    _this.scrollToEnd = function () {\n      var params = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n        animated: true\n      };\n\n      _this.setState({\n        newItemCount: 0\n      });\n\n      _this.scrollToOffset({\n        offset: _this.contentHeight - _this.flatListHeight,\n        animated: params.animated\n      });\n    };\n\n    _this.scrollToIndex = function (params) {\n      if (_this.listRef.current) {\n        _this.listRef.current.scrollToIndex(params);\n      }\n    };\n\n    _this.scrollToItem = function (params) {\n      if (_this.listRef.current) {\n        _this.listRef.current.scrollToItem(params);\n      }\n    };\n\n    _this.scrollToOffset = function (params) {\n      if (_this.listRef.current) {\n        _this.listRef.current.scrollToOffset(params);\n      }\n    };\n\n    _this.recordInteraction = function () {\n      if (_this.listRef.current) {\n        _this.listRef.current.recordInteraction();\n      }\n    };\n\n    _this.flashScrollIndicators = function () {\n      if (_this.listRef.current) {\n        _this.listRef.current.flashScrollIndicators();\n      }\n    };\n\n    _this.getScrollableNode = function () {\n      if (_this.listRef.current) {\n        return _this.listRef.current.getScrollableNode();\n      }\n    };\n\n    _this.getNativeScrollRef = function () {\n      if (_this.listRef.current) {\n        return _this.listRef.current.getNativeScrollRef();\n      }\n    };\n\n    _this.getScrollResponder = function () {\n      if (_this.listRef.current) {\n        return _this.listRef.current.getScrollResponder();\n      }\n    };\n\n    _this.isAutoScrolling = function () {\n      return _this.state.enabledAutoScrollToEnd;\n    };\n\n    _this.onLayout = function (event) {\n      _this.flatListHeight = event.nativeEvent.layout.height;\n\n      if (_this.listRef.current && _this.state.enabledAutoScrollToEnd) {\n        _this.scrollToEnd();\n      }\n\n      var onLayout = _this.props.onLayout;\n\n      if (onLayout) {\n        onLayout(event);\n      }\n    };\n\n    _this.onContentSizeChange = function (width, height) {\n      _this.contentHeight = height;\n\n      if (_this.state.enabledAutoScrollToEnd) {\n        _this.scrollToEnd();\n      }\n\n      var onContentSizeChange = _this.props.onContentSizeChange;\n\n      if (onContentSizeChange) {\n        onContentSizeChange(width, height);\n      }\n    };\n\n    _this.onScroll = function (event) {\n      var prevScrollTop = _this.scrollTop;\n      _this.scrollTop = _this.props.horizontal ? event.nativeEvent.contentOffset.x : event.nativeEvent.contentOffset.y;\n      var isScrollingDown = prevScrollTop <= _this.scrollTop;\n      var isEndOfList = _this.scrollTop + _this.props.threshold >= Math.floor(_this.contentHeight - _this.flatListHeight);\n\n      _this.setState({\n        enabledAutoScrollToEnd: _this.state.enabledAutoScrollToEnd && isScrollingDown || isEndOfList\n      }, function () {\n        var onScroll = _this.props.onScroll;\n\n        if (onScroll) {\n          onScroll(event);\n        }\n      });\n\n      event.persist();\n    };\n\n    _this.renderDefaultNewItemAlertComponent = function (newItemCount, translateY) {\n      var _this$props = _this.props,\n          newItemAlertMessage = _this$props.newItemAlertMessage,\n          newItemAlertContainerStyle = _this$props.newItemAlertContainerStyle,\n          newItemAlertTextStyle = _this$props.newItemAlertTextStyle;\n      var message = newItemAlertMessage ? newItemAlertMessage(newItemCount) : newItemCount + \" new item\" + (newItemCount > 1 ? \"s\" : \"\");\n      return _react.default.createElement(_reactNative.Animated.View, {\n        style: [styles.newItemAlert, newItemAlertContainerStyle, {\n          transform: [{\n            translateY: translateY\n          }]\n        }],\n        __self: (0, _assertThisInitialized2.default)(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 21\n        }\n      }, _react.default.createElement(_reactNative.Text, {\n        style: [styles.alertMessage, newItemAlertTextStyle],\n        __self: (0, _assertThisInitialized2.default)(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 17\n        }\n      }, message), _react.default.createElement(_Triangle.default, {\n        size: 4,\n        __self: (0, _assertThisInitialized2.default)(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 17\n        }\n      }));\n    };\n\n    _this.renderDefaultIndicatorComponent = function () {\n      var _this$props$indicator;\n\n      return _react.default.createElement(_reactNative.View, {\n        style: (_this$props$indicator = _this.props.indicatorContainerStyle) != null ? _this$props$indicator : styles.scrollToEndIndicator,\n        __self: (0, _assertThisInitialized2.default)(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 55\n        }\n      }, _react.default.createElement(_Triangle.default, {\n        __self: (0, _assertThisInitialized2.default)(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 13\n        }\n      }));\n    };\n\n    _this.state = {\n      enabledAutoScrollToEnd: true,\n      newItemCount: 0,\n      alertY: new _reactNative.Animated.Value(0)\n    };\n    return _this;\n  }\n\n  (0, _createClass2.default)(AutoScrollFlatList, [{\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, prevState) {\n      var _prevProps$data, _prevProps$data2;\n\n      var _this$props2 = this.props,\n          data = _this$props2.data,\n          filteredDataForNewItemCount = _this$props2.filteredDataForNewItemCount;\n      var _this$state = this.state,\n          enabledAutoScrollToEnd = _this$state.enabledAutoScrollToEnd,\n          newItemCount = _this$state.newItemCount,\n          alertY = _this$state.alertY;\n      var filteredPrevData = filteredDataForNewItemCount ? filteredDataForNewItemCount((_prevProps$data = prevProps.data) != null ? _prevProps$data : []) : (_prevProps$data2 = prevProps.data) != null ? _prevProps$data2 : [];\n      var filteredData = filteredDataForNewItemCount ? filteredDataForNewItemCount(data != null ? data : []) : data != null ? data : [];\n\n      if (!enabledAutoScrollToEnd && filteredData.length > filteredPrevData.length) {\n        var newCount = prevState.newItemCount + filteredData.length - filteredPrevData.length;\n        this.setState({\n          newItemCount: newCount\n        });\n\n        if (newCount === 1) {\n          alertY.setValue(-30);\n\n          _reactNative.Animated.timing(alertY, {\n            toValue: 10,\n            duration: 250\n          }).start();\n        }\n      } else if (enabledAutoScrollToEnd && newItemCount) {\n        this.setState({\n          newItemCount: 0\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props3 = this.props,\n          contentContainerStyle = _this$props3.contentContainerStyle,\n          threshold = _this$props3.threshold,\n          showScrollToEndIndicator = _this$props3.showScrollToEndIndicator,\n          showNewItemAlert = _this$props3.showNewItemAlert,\n          newItemAlertRenderer = _this$props3.newItemAlertRenderer,\n          indicatorContainerStyle = _this$props3.indicatorContainerStyle,\n          indicatorComponent = _this$props3.indicatorComponent,\n          numColumns = _this$props3.numColumns,\n          restProps = (0, _objectWithoutProperties2.default)(_this$props3, [\"contentContainerStyle\", \"threshold\", \"showScrollToEndIndicator\", \"showNewItemAlert\", \"newItemAlertRenderer\", \"indicatorContainerStyle\", \"indicatorComponent\", \"numColumns\"]);\n      var _this$state2 = this.state,\n          enabledAutoScrollToEnd = _this$state2.enabledAutoScrollToEnd,\n          newItemCount = _this$state2.newItemCount,\n          alertY = _this$state2.alertY;\n      return _react.default.createElement(_reactNative.View, {\n        style: styles.container,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 17\n        }\n      }, _react.default.createElement(_reactNative.FlatList, (0, _extends2.default)({}, restProps, {\n        ref: this.listRef,\n        key: numColumns,\n        numColumns: numColumns,\n        contentContainerStyle: contentContainerStyle != null ? contentContainerStyle : styles.contentContainer,\n        onLayout: this.onLayout,\n        onContentSizeChange: this.onContentSizeChange,\n        onScroll: this.onScroll,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 17\n        }\n      })), showNewItemAlert && !enabledAutoScrollToEnd && newItemCount > 0 && _react.default.createElement(_reactNative.TouchableWithoutFeedback, {\n        onPress: function onPress() {\n          return _this2.scrollToEnd();\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 86\n        }\n      }, newItemAlertRenderer ? newItemAlertRenderer(newItemCount, alertY) : this.renderDefaultNewItemAlertComponent(newItemCount, alertY)), showScrollToEndIndicator && !enabledAutoScrollToEnd && _react.default.createElement(_reactNative.TouchableWithoutFeedback, {\n        onPress: function onPress() {\n          return _this2.scrollToEnd();\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 73\n        }\n      }, indicatorComponent != null ? indicatorComponent : this.renderDefaultIndicatorComponent()));\n    }\n  }]);\n  return AutoScrollFlatList;\n}(_react.default.PureComponent);\n\nexports.default = AutoScrollFlatList;\nAutoScrollFlatList.defaultProps = {\n  threshold: 0,\n  showScrollToEndIndicator: true,\n  showNewItemAlert: true\n};\n\nvar styles = _reactNative.StyleSheet.create({\n  container: {\n    flex: 1,\n    overflow: \"hidden\"\n  },\n  contentContainer: {\n    alignItems: \"stretch\",\n    paddingVertical: 8,\n    paddingHorizontal: 8\n  },\n  scrollToEndIndicator: {\n    position: \"absolute\",\n    right: 20,\n    bottom: 20,\n    width: 30,\n    height: 30,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    borderWidth: 1,\n    borderColor: \"#000000\",\n    borderRadius: 5,\n    backgroundColor: \"#ffffff\"\n  },\n  newItemAlert: {\n    position: \"absolute\",\n    alignSelf: \"center\",\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    borderRadius: 10,\n    borderWidth: _reactNative.StyleSheet.hairlineWidth,\n    borderColor: \"#000000\",\n    backgroundColor: \"#ffffff\",\n    paddingVertical: 3,\n    paddingHorizontal: 8\n  },\n  alertMessage: {\n    marginRight: 4\n  }\n});","map":{"version":3,"sources":["../../src/index.tsx"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["import React from \"react\";\nimport { Animated, FlatList, StyleSheet, Text, TouchableWithoutFeedback, View } from \"react-native\";\nimport Triangle from \"./Triangle\";\nexport default class AutoScrollFlatList extends React.PureComponent {\n    constructor(props) {\n        super(props);\n        this.listRef = React.createRef();\n        this.flatListHeight = 0;\n        this.contentHeight = 0;\n        this.scrollTop = 0;\n        /**\n         *  Exposing FlatList Methods To AutoScrollFlatList's Ref\n         */\n        this.scrollToEnd = (params = { animated: true }) => {\n            this.setState({ newItemCount: 0 });\n            this.scrollToOffset({ offset: this.contentHeight - this.flatListHeight, animated: params.animated });\n        };\n        this.scrollToIndex = (params) => {\n            if (this.listRef.current) {\n                this.listRef.current.scrollToIndex(params);\n            }\n        };\n        this.scrollToItem = (params) => {\n            if (this.listRef.current) {\n                this.listRef.current.scrollToItem(params);\n            }\n        };\n        this.scrollToOffset = (params) => {\n            if (this.listRef.current) {\n                this.listRef.current.scrollToOffset(params);\n            }\n        };\n        this.recordInteraction = () => {\n            if (this.listRef.current) {\n                this.listRef.current.recordInteraction();\n            }\n        };\n        this.flashScrollIndicators = () => {\n            if (this.listRef.current) {\n                this.listRef.current.flashScrollIndicators();\n            }\n        };\n        this.getScrollableNode = () => {\n            if (this.listRef.current) {\n                return this.listRef.current.getScrollableNode();\n            }\n        };\n        this.getNativeScrollRef = () => {\n            if (this.listRef.current) {\n                return this.listRef.current.getNativeScrollRef();\n            }\n        };\n        this.getScrollResponder = () => {\n            if (this.listRef.current) {\n                return this.listRef.current.getScrollResponder();\n            }\n        };\n        this.isAutoScrolling = () => this.state.enabledAutoScrollToEnd;\n        /**\n         * End of Exposed Methods\n         */\n        this.onLayout = (event) => {\n            this.flatListHeight = event.nativeEvent.layout.height;\n            if (this.listRef.current && this.state.enabledAutoScrollToEnd) {\n                this.scrollToEnd();\n            }\n            // User-defined onLayout event\n            const { onLayout } = this.props;\n            if (onLayout) {\n                onLayout(event);\n            }\n        };\n        this.onContentSizeChange = (width, height) => {\n            this.contentHeight = height;\n            if (this.state.enabledAutoScrollToEnd) {\n                this.scrollToEnd();\n            }\n            // User-defined onContentSizeChange event\n            const { onContentSizeChange } = this.props;\n            if (onContentSizeChange) {\n                onContentSizeChange(width, height);\n            }\n        };\n        this.onScroll = (event) => {\n            /**\n             *  Default behavior: if scrollTop is at the end of <Flatlist>, autoscroll will be enabled.\n             *  CAVEAT: Android has precision error here from 4 decimal places, therefore we need to use Math.floor() to make sure the calculation is correct on Android.\n             */\n            const prevScrollTop = this.scrollTop;\n            this.scrollTop = this.props.horizontal ? event.nativeEvent.contentOffset.x : event.nativeEvent.contentOffset.y;\n            const isScrollingDown = prevScrollTop <= this.scrollTop;\n            const isEndOfList = this.scrollTop + this.props.threshold >= Math.floor(this.contentHeight - this.flatListHeight);\n            this.setState({ enabledAutoScrollToEnd: (this.state.enabledAutoScrollToEnd && isScrollingDown) || isEndOfList }, () => {\n                // User-defined onScroll event\n                const { onScroll } = this.props;\n                if (onScroll) {\n                    onScroll(event);\n                }\n            });\n            event.persist();\n        };\n        this.renderDefaultNewItemAlertComponent = (newItemCount, translateY) => {\n            const { newItemAlertMessage, newItemAlertContainerStyle, newItemAlertTextStyle } = this.props;\n            const message = newItemAlertMessage ? newItemAlertMessage(newItemCount) : `${newItemCount} new item${newItemCount > 1 ? \"s\" : \"\"}`;\n            return (<Animated.View style={[styles.newItemAlert, newItemAlertContainerStyle, { transform: [{ translateY }] }]}>\n                <Text style={[styles.alertMessage, newItemAlertTextStyle]}>{message}</Text>\n                <Triangle size={4}/>\n            </Animated.View>);\n        };\n        this.renderDefaultIndicatorComponent = () => (<View style={this.props.indicatorContainerStyle ?? styles.scrollToEndIndicator}>\n            <Triangle />\n        </View>);\n        this.state = {\n            enabledAutoScrollToEnd: true,\n            newItemCount: 0,\n            alertY: new Animated.Value(0),\n        };\n    }\n    componentDidUpdate(prevProps, prevState) {\n        const { data, filteredDataForNewItemCount } = this.props;\n        const { enabledAutoScrollToEnd, newItemCount, alertY } = this.state;\n        const filteredPrevData = filteredDataForNewItemCount ? filteredDataForNewItemCount(prevProps.data ?? []) : prevProps.data ?? [];\n        const filteredData = filteredDataForNewItemCount ? filteredDataForNewItemCount(data ?? []) : data ?? [];\n        if (!enabledAutoScrollToEnd && filteredData.length > filteredPrevData.length) {\n            const newCount = prevState.newItemCount + filteredData.length - filteredPrevData.length;\n            this.setState({ newItemCount: newCount });\n            if (newCount === 1) {\n                alertY.setValue(-30);\n                Animated.timing(alertY, {\n                    toValue: 10,\n                    duration: 250,\n                }).start();\n            }\n        }\n        else if (enabledAutoScrollToEnd && newItemCount) {\n            this.setState({ newItemCount: 0 });\n        }\n    }\n    render() {\n        /**\n         * Need to force a refresh for the FlatList by changing the key when numColumns changes.\n         * Ref: https://stackoverflow.com/questions/44291781/dynamically-changing-number-of-columns-in-react-native-flat-list\n         */\n        const { contentContainerStyle, threshold, showScrollToEndIndicator, showNewItemAlert, newItemAlertRenderer, indicatorContainerStyle, indicatorComponent, numColumns, ...restProps } = this.props;\n        const { enabledAutoScrollToEnd, newItemCount, alertY } = this.state;\n        return (<View style={styles.container}>\n                <FlatList {...restProps} ref={this.listRef} key={numColumns} numColumns={numColumns} contentContainerStyle={contentContainerStyle ?? styles.contentContainer} onLayout={this.onLayout} onContentSizeChange={this.onContentSizeChange} onScroll={this.onScroll}/>\n                {showNewItemAlert && !enabledAutoScrollToEnd && newItemCount > 0 && (<TouchableWithoutFeedback onPress={() => this.scrollToEnd()}>{newItemAlertRenderer ? newItemAlertRenderer(newItemCount, alertY) : this.renderDefaultNewItemAlertComponent(newItemCount, alertY)}</TouchableWithoutFeedback>)}\n                {showScrollToEndIndicator && !enabledAutoScrollToEnd && <TouchableWithoutFeedback onPress={() => this.scrollToEnd()}>{indicatorComponent ?? this.renderDefaultIndicatorComponent()}</TouchableWithoutFeedback>}\n            </View>);\n    }\n}\nAutoScrollFlatList.defaultProps = {\n    threshold: 0,\n    showScrollToEndIndicator: true,\n    showNewItemAlert: true,\n};\nconst styles = StyleSheet.create({\n    container: {\n        flex: 1,\n        overflow: \"hidden\",\n    },\n    contentContainer: {\n        alignItems: \"stretch\",\n        paddingVertical: 8,\n        paddingHorizontal: 8,\n    },\n    scrollToEndIndicator: {\n        position: \"absolute\",\n        right: 20,\n        bottom: 20,\n        width: 30,\n        height: 30,\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        borderWidth: 1,\n        borderColor: \"#000000\",\n        borderRadius: 5,\n        backgroundColor: \"#ffffff\",\n    },\n    newItemAlert: {\n        position: \"absolute\",\n        alignSelf: \"center\",\n        flexDirection: \"row\",\n        alignItems: \"center\",\n        borderRadius: 10,\n        borderWidth: StyleSheet.hairlineWidth,\n        borderColor: \"#000000\",\n        backgroundColor: \"#ffffff\",\n        paddingVertical: 3,\n        paddingHorizontal: 8,\n    },\n    alertMessage: {\n        marginRight: 4,\n    },\n});\nexport { Triangle };\n//# sourceMappingURL=index.js.map"]},"metadata":{},"sourceType":"script"}