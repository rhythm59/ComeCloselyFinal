{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nObject.defineProperty(exports, \"TextTrackType\", {\n  enumerable: true,\n  get: function get() {\n    return _TextTrackType.default;\n  }\n});\nObject.defineProperty(exports, \"FilterType\", {\n  enumerable: true,\n  get: function get() {\n    return _FilterType.default;\n  }\n});\nexports.default = void 0;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _resolveAssetSource = _interopRequireDefault(require(\"react-native/Libraries/Image/resolveAssetSource\"));\n\nvar _TextTrackType = _interopRequireDefault(require(\"./TextTrackType\"));\n\nvar _FilterType = _interopRequireDefault(require(\"./FilterType\"));\n\nvar _VideoResizeMode = _interopRequireDefault(require(\"./VideoResizeMode.js\"));\n\nvar _jsxFileName = \"C:\\\\Program Files\\\\nodejs\\\\ComeClosely\\\\node_modules\\\\react-native-video\\\\Video.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nvar styles = _reactNative.StyleSheet.create({\n  base: {\n    overflow: 'hidden'\n  }\n});\n\nvar Video = function (_Component) {\n  (0, _inherits2.default)(Video, _Component);\n\n  var _super = _createSuper(Video);\n\n  function Video(props) {\n    var _this;\n\n    (0, _classCallCheck2.default)(this, Video);\n    _this = _super.call(this, props);\n\n    _this.seek = function (time) {\n      var tolerance = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 100;\n      if (isNaN(time)) throw new Error('Specified time is not a number');\n\n      if (_reactNative.Platform.OS === 'ios') {\n        _this.setNativeProps({\n          seek: {\n            time: time,\n            tolerance: tolerance\n          }\n        });\n      } else {\n        _this.setNativeProps({\n          seek: time\n        });\n      }\n    };\n\n    _this.presentFullscreenPlayer = function () {\n      _this.setNativeProps({\n        fullscreen: true\n      });\n    };\n\n    _this.dismissFullscreenPlayer = function () {\n      _this.setNativeProps({\n        fullscreen: false\n      });\n    };\n\n    _this.save = function _callee(options) {\n      return _regenerator.default.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regenerator.default.awrap(_reactNative.NativeModules.VideoManager.save(options, (0, _reactNative.findNodeHandle)(_this._root)));\n\n            case 2:\n              return _context.abrupt(\"return\", _context.sent);\n\n            case 3:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.restoreUserInterfaceForPictureInPictureStopCompleted = function (restored) {\n      _this.setNativeProps({\n        restoreUserInterfaceForPIPStopCompletionHandler: restored\n      });\n    };\n\n    _this._assignRoot = function (component) {\n      _this._root = component;\n    };\n\n    _this._hidePoster = function () {\n      if (_this.state.showPoster) {\n        _this.setState({\n          showPoster: false\n        });\n      }\n    };\n\n    _this._onLoadStart = function (event) {\n      if (_this.props.onLoadStart) {\n        _this.props.onLoadStart(event.nativeEvent);\n      }\n    };\n\n    _this._onLoad = function (event) {\n      if (_reactNative.Platform.OS === 'windows') {\n        _this._hidePoster();\n      }\n\n      if (_this.props.onLoad) {\n        _this.props.onLoad(event.nativeEvent);\n      }\n    };\n\n    _this._onError = function (event) {\n      if (_this.props.onError) {\n        _this.props.onError(event.nativeEvent);\n      }\n    };\n\n    _this._onProgress = function (event) {\n      if (_this.props.onProgress) {\n        _this.props.onProgress(event.nativeEvent);\n      }\n    };\n\n    _this._onBandwidthUpdate = function (event) {\n      if (_this.props.onBandwidthUpdate) {\n        _this.props.onBandwidthUpdate(event.nativeEvent);\n      }\n    };\n\n    _this._onSeek = function (event) {\n      if (_this.props.onSeek) {\n        _this.props.onSeek(event.nativeEvent);\n      }\n    };\n\n    _this._onEnd = function (event) {\n      if (_this.props.onEnd) {\n        _this.props.onEnd(event.nativeEvent);\n      }\n    };\n\n    _this._onTimedMetadata = function (event) {\n      if (_this.props.onTimedMetadata) {\n        _this.props.onTimedMetadata(event.nativeEvent);\n      }\n    };\n\n    _this._onFullscreenPlayerWillPresent = function (event) {\n      if (_this.props.onFullscreenPlayerWillPresent) {\n        _this.props.onFullscreenPlayerWillPresent(event.nativeEvent);\n      }\n    };\n\n    _this._onFullscreenPlayerDidPresent = function (event) {\n      if (_this.props.onFullscreenPlayerDidPresent) {\n        _this.props.onFullscreenPlayerDidPresent(event.nativeEvent);\n      }\n    };\n\n    _this._onFullscreenPlayerWillDismiss = function (event) {\n      if (_this.props.onFullscreenPlayerWillDismiss) {\n        _this.props.onFullscreenPlayerWillDismiss(event.nativeEvent);\n      }\n    };\n\n    _this._onFullscreenPlayerDidDismiss = function (event) {\n      if (_this.props.onFullscreenPlayerDidDismiss) {\n        _this.props.onFullscreenPlayerDidDismiss(event.nativeEvent);\n      }\n    };\n\n    _this._onReadyForDisplay = function (event) {\n      _this._hidePoster();\n\n      if (_this.props.onReadyForDisplay) {\n        _this.props.onReadyForDisplay(event.nativeEvent);\n      }\n    };\n\n    _this._onPlaybackStalled = function (event) {\n      if (_this.props.onPlaybackStalled) {\n        _this.props.onPlaybackStalled(event.nativeEvent);\n      }\n    };\n\n    _this._onPlaybackResume = function (event) {\n      if (_this.props.onPlaybackResume) {\n        _this.props.onPlaybackResume(event.nativeEvent);\n      }\n    };\n\n    _this._onPlaybackRateChange = function (event) {\n      if (_this.props.onPlaybackRateChange) {\n        _this.props.onPlaybackRateChange(event.nativeEvent);\n      }\n    };\n\n    _this._onExternalPlaybackChange = function (event) {\n      if (_this.props.onExternalPlaybackChange) {\n        _this.props.onExternalPlaybackChange(event.nativeEvent);\n      }\n    };\n\n    _this._onAudioBecomingNoisy = function () {\n      if (_this.props.onAudioBecomingNoisy) {\n        _this.props.onAudioBecomingNoisy();\n      }\n    };\n\n    _this._onPictureInPictureStatusChanged = function (event) {\n      if (_this.props.onPictureInPictureStatusChanged) {\n        _this.props.onPictureInPictureStatusChanged(event.nativeEvent);\n      }\n    };\n\n    _this._onRestoreUserInterfaceForPictureInPictureStop = function (event) {\n      if (_this.props.onRestoreUserInterfaceForPictureInPictureStop) {\n        _this.props.onRestoreUserInterfaceForPictureInPictureStop();\n      }\n    };\n\n    _this._onAudioFocusChanged = function (event) {\n      if (_this.props.onAudioFocusChanged) {\n        _this.props.onAudioFocusChanged(event.nativeEvent);\n      }\n    };\n\n    _this._onBuffer = function (event) {\n      if (_this.props.onBuffer) {\n        _this.props.onBuffer(event.nativeEvent);\n      }\n    };\n\n    _this.getViewManagerConfig = function (viewManagerName) {\n      if (!_reactNative.NativeModules.UIManager.getViewManagerConfig) {\n        return _reactNative.NativeModules.UIManager[viewManagerName];\n      }\n\n      return _reactNative.NativeModules.UIManager.getViewManagerConfig(viewManagerName);\n    };\n\n    _this.state = {\n      showPoster: !!props.poster\n    };\n    return _this;\n  }\n\n  (0, _createClass2.default)(Video, [{\n    key: \"setNativeProps\",\n    value: function setNativeProps(nativeProps) {\n      this._root.setNativeProps(nativeProps);\n    }\n  }, {\n    key: \"toTypeString\",\n    value: function toTypeString(x) {\n      switch (typeof x) {\n        case \"object\":\n          return x instanceof Date ? x.toISOString() : JSON.stringify(x);\n\n        case \"undefined\":\n          return \"\";\n\n        default:\n          return x.toString();\n      }\n    }\n  }, {\n    key: \"stringsOnlyObject\",\n    value: function stringsOnlyObject(obj) {\n      var _this2 = this;\n\n      var strObj = {};\n      Object.keys(obj).forEach(function (x) {\n        strObj[x] = _this2.toTypeString(obj[x]);\n      });\n      return strObj;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var resizeMode = this.props.resizeMode;\n      var source = (0, _resolveAssetSource.default)(this.props.source) || {};\n      var shouldCache = !Boolean(source.__packager_asset);\n      var uri = source.uri || '';\n\n      if (uri && uri.match(/^\\//)) {\n        uri = \"file://\" + uri;\n      }\n\n      if (!uri) {\n        console.warn('Trying to load empty source.');\n      }\n\n      var isNetwork = !!(uri && uri.match(/^https?:/));\n      var isAsset = !!(uri && uri.match(/^(assets-library|ipod-library|file|content|ms-appx|ms-appdata):/));\n      var nativeResizeMode;\n      var RCTVideoInstance = this.getViewManagerConfig('RCTVideo');\n\n      if (resizeMode === _VideoResizeMode.default.stretch) {\n        nativeResizeMode = RCTVideoInstance.Constants.ScaleToFill;\n      } else if (resizeMode === _VideoResizeMode.default.contain) {\n        nativeResizeMode = RCTVideoInstance.Constants.ScaleAspectFit;\n      } else if (resizeMode === _VideoResizeMode.default.cover) {\n        nativeResizeMode = RCTVideoInstance.Constants.ScaleAspectFill;\n      } else {\n        nativeResizeMode = RCTVideoInstance.Constants.ScaleNone;\n      }\n\n      var nativeProps = (0, _extends2.default)({}, this.props);\n      (0, _extends2.default)(nativeProps, {\n        style: [styles.base, nativeProps.style],\n        resizeMode: nativeResizeMode,\n        src: {\n          uri: uri,\n          isNetwork: isNetwork,\n          isAsset: isAsset,\n          shouldCache: shouldCache,\n          type: source.type || '',\n          mainVer: source.mainVer || 0,\n          patchVer: source.patchVer || 0,\n          requestHeaders: source.headers ? this.stringsOnlyObject(source.headers) : {}\n        },\n        onVideoLoadStart: this._onLoadStart,\n        onVideoLoad: this._onLoad,\n        onVideoError: this._onError,\n        onVideoProgress: this._onProgress,\n        onVideoSeek: this._onSeek,\n        onVideoEnd: this._onEnd,\n        onVideoBuffer: this._onBuffer,\n        onVideoBandwidthUpdate: this._onBandwidthUpdate,\n        onTimedMetadata: this._onTimedMetadata,\n        onVideoAudioBecomingNoisy: this._onAudioBecomingNoisy,\n        onVideoExternalPlaybackChange: this._onExternalPlaybackChange,\n        onVideoFullscreenPlayerWillPresent: this._onFullscreenPlayerWillPresent,\n        onVideoFullscreenPlayerDidPresent: this._onFullscreenPlayerDidPresent,\n        onVideoFullscreenPlayerWillDismiss: this._onFullscreenPlayerWillDismiss,\n        onVideoFullscreenPlayerDidDismiss: this._onFullscreenPlayerDidDismiss,\n        onReadyForDisplay: this._onReadyForDisplay,\n        onPlaybackStalled: this._onPlaybackStalled,\n        onPlaybackResume: this._onPlaybackResume,\n        onPlaybackRateChange: this._onPlaybackRateChange,\n        onAudioFocusChanged: this._onAudioFocusChanged,\n        onAudioBecomingNoisy: this._onAudioBecomingNoisy,\n        onPictureInPictureStatusChanged: this._onPictureInPictureStatusChanged,\n        onRestoreUserInterfaceForPictureInPictureStop: this._onRestoreUserInterfaceForPictureInPictureStop\n      });\n      var posterStyle = (0, _extends2.default)({}, _reactNative.StyleSheet.absoluteFillObject, {\n        resizeMode: this.props.posterResizeMode || 'contain'\n      });\n      return _react.default.createElement(_reactNative.View, {\n        style: nativeProps.style,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 314,\n          columnNumber: 7\n        }\n      }, _react.default.createElement(RCTVideo, (0, _extends2.default)({\n        ref: this._assignRoot\n      }, nativeProps, {\n        style: _reactNative.StyleSheet.absoluteFill,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 315,\n          columnNumber: 9\n        }\n      })), this.state.showPoster && _react.default.createElement(_reactNative.Image, {\n        style: posterStyle,\n        source: {\n          uri: this.props.poster\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 321,\n          columnNumber: 11\n        }\n      }));\n    }\n  }]);\n  return Video;\n}(_react.Component);\n\nexports.default = Video;\nVideo.propTypes = (0, _extends2.default)({\n  filter: _propTypes.default.oneOf([_FilterType.default.NONE, _FilterType.default.INVERT, _FilterType.default.MONOCHROME, _FilterType.default.POSTERIZE, _FilterType.default.FALSE, _FilterType.default.MAXIMUMCOMPONENT, _FilterType.default.MINIMUMCOMPONENT, _FilterType.default.CHROME, _FilterType.default.FADE, _FilterType.default.INSTANT, _FilterType.default.MONO, _FilterType.default.NOIR, _FilterType.default.PROCESS, _FilterType.default.TONAL, _FilterType.default.TRANSFER, _FilterType.default.SEPIA]),\n  filterEnabled: _propTypes.default.bool,\n  src: _propTypes.default.object,\n  seek: _propTypes.default.oneOfType([_propTypes.default.number, _propTypes.default.object]),\n  fullscreen: _propTypes.default.bool,\n  onVideoLoadStart: _propTypes.default.func,\n  onVideoLoad: _propTypes.default.func,\n  onVideoBuffer: _propTypes.default.func,\n  onVideoError: _propTypes.default.func,\n  onVideoProgress: _propTypes.default.func,\n  onVideoBandwidthUpdate: _propTypes.default.func,\n  onVideoSeek: _propTypes.default.func,\n  onVideoEnd: _propTypes.default.func,\n  onTimedMetadata: _propTypes.default.func,\n  onVideoAudioBecomingNoisy: _propTypes.default.func,\n  onVideoExternalPlaybackChange: _propTypes.default.func,\n  onVideoFullscreenPlayerWillPresent: _propTypes.default.func,\n  onVideoFullscreenPlayerDidPresent: _propTypes.default.func,\n  onVideoFullscreenPlayerWillDismiss: _propTypes.default.func,\n  onVideoFullscreenPlayerDidDismiss: _propTypes.default.func,\n  source: _propTypes.default.oneOfType([_propTypes.default.shape({\n    uri: _propTypes.default.string\n  }), _propTypes.default.number]),\n  minLoadRetryCount: _propTypes.default.number,\n  maxBitRate: _propTypes.default.number,\n  resizeMode: _propTypes.default.string,\n  poster: _propTypes.default.string,\n  posterResizeMode: _reactNative.Image.propTypes.resizeMode,\n  repeat: _propTypes.default.bool,\n  allowsExternalPlayback: _propTypes.default.bool,\n  selectedAudioTrack: _propTypes.default.shape({\n    type: _propTypes.default.string.isRequired,\n    value: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.number])\n  }),\n  selectedVideoTrack: _propTypes.default.shape({\n    type: _propTypes.default.string.isRequired,\n    value: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.number])\n  }),\n  selectedTextTrack: _propTypes.default.shape({\n    type: _propTypes.default.string.isRequired,\n    value: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.number])\n  }),\n  textTracks: _propTypes.default.arrayOf(_propTypes.default.shape({\n    title: _propTypes.default.string,\n    uri: _propTypes.default.string.isRequired,\n    type: _propTypes.default.oneOf([_TextTrackType.default.SRT, _TextTrackType.default.TTML, _TextTrackType.default.VTT]),\n    language: _propTypes.default.string.isRequired\n  })),\n  paused: _propTypes.default.bool,\n  muted: _propTypes.default.bool,\n  volume: _propTypes.default.number,\n  bufferConfig: _propTypes.default.shape({\n    minBufferMs: _propTypes.default.number,\n    maxBufferMs: _propTypes.default.number,\n    bufferForPlaybackMs: _propTypes.default.number,\n    bufferForPlaybackAfterRebufferMs: _propTypes.default.number\n  }),\n  stereoPan: _propTypes.default.number,\n  rate: _propTypes.default.number,\n  pictureInPicture: _propTypes.default.bool,\n  playInBackground: _propTypes.default.bool,\n  playWhenInactive: _propTypes.default.bool,\n  ignoreSilentSwitch: _propTypes.default.oneOf(['ignore', 'obey']),\n  reportBandwidth: _propTypes.default.bool,\n  disableFocus: _propTypes.default.bool,\n  controls: _propTypes.default.bool,\n  audioOnly: _propTypes.default.bool,\n  currentTime: _propTypes.default.number,\n  fullscreenAutorotate: _propTypes.default.bool,\n  fullscreenOrientation: _propTypes.default.oneOf(['all', 'landscape', 'portrait']),\n  progressUpdateInterval: _propTypes.default.number,\n  useTextureView: _propTypes.default.bool,\n  hideShutterView: _propTypes.default.bool,\n  onLoadStart: _propTypes.default.func,\n  onLoad: _propTypes.default.func,\n  onBuffer: _propTypes.default.func,\n  onError: _propTypes.default.func,\n  onProgress: _propTypes.default.func,\n  onBandwidthUpdate: _propTypes.default.func,\n  onSeek: _propTypes.default.func,\n  onEnd: _propTypes.default.func,\n  onFullscreenPlayerWillPresent: _propTypes.default.func,\n  onFullscreenPlayerDidPresent: _propTypes.default.func,\n  onFullscreenPlayerWillDismiss: _propTypes.default.func,\n  onFullscreenPlayerDidDismiss: _propTypes.default.func,\n  onReadyForDisplay: _propTypes.default.func,\n  onPlaybackStalled: _propTypes.default.func,\n  onPlaybackResume: _propTypes.default.func,\n  onPlaybackRateChange: _propTypes.default.func,\n  onAudioFocusChanged: _propTypes.default.func,\n  onAudioBecomingNoisy: _propTypes.default.func,\n  onPictureInPictureStatusChanged: _propTypes.default.func,\n  needsToRestoreUserInterfaceForPictureInPictureStop: _propTypes.default.func,\n  onExternalPlaybackChange: _propTypes.default.func,\n  scaleX: _propTypes.default.number,\n  scaleY: _propTypes.default.number,\n  translateX: _propTypes.default.number,\n  translateY: _propTypes.default.number,\n  rotation: _propTypes.default.number\n}, _reactNative.ViewPropTypes);\nvar RCTVideo = (0, _reactNative.requireNativeComponent)('RCTVideo', Video, {\n  nativeOnly: {\n    src: true,\n    seek: true,\n    fullscreen: true\n  }\n});","map":{"version":3,"sources":["C:/Program Files/nodejs/ComeClosely/node_modules/react-native-video/Video.js"],"names":["styles","StyleSheet","create","base","overflow","Video","props","seek","time","tolerance","isNaN","Error","Platform","OS","setNativeProps","presentFullscreenPlayer","fullscreen","dismissFullscreenPlayer","save","options","NativeModules","VideoManager","_root","restoreUserInterfaceForPictureInPictureStopCompleted","restored","restoreUserInterfaceForPIPStopCompletionHandler","_assignRoot","component","_hidePoster","state","showPoster","setState","_onLoadStart","event","onLoadStart","nativeEvent","_onLoad","onLoad","_onError","onError","_onProgress","onProgress","_onBandwidthUpdate","onBandwidthUpdate","_onSeek","onSeek","_onEnd","onEnd","_onTimedMetadata","onTimedMetadata","_onFullscreenPlayerWillPresent","onFullscreenPlayerWillPresent","_onFullscreenPlayerDidPresent","onFullscreenPlayerDidPresent","_onFullscreenPlayerWillDismiss","onFullscreenPlayerWillDismiss","_onFullscreenPlayerDidDismiss","onFullscreenPlayerDidDismiss","_onReadyForDisplay","onReadyForDisplay","_onPlaybackStalled","onPlaybackStalled","_onPlaybackResume","onPlaybackResume","_onPlaybackRateChange","onPlaybackRateChange","_onExternalPlaybackChange","onExternalPlaybackChange","_onAudioBecomingNoisy","onAudioBecomingNoisy","_onPictureInPictureStatusChanged","onPictureInPictureStatusChanged","_onRestoreUserInterfaceForPictureInPictureStop","onRestoreUserInterfaceForPictureInPictureStop","_onAudioFocusChanged","onAudioFocusChanged","_onBuffer","onBuffer","getViewManagerConfig","viewManagerName","UIManager","poster","nativeProps","x","Date","toISOString","JSON","stringify","toString","obj","strObj","Object","keys","forEach","toTypeString","resizeMode","source","shouldCache","Boolean","__packager_asset","uri","match","console","warn","isNetwork","isAsset","nativeResizeMode","RCTVideoInstance","VideoResizeMode","stretch","Constants","ScaleToFill","contain","ScaleAspectFit","cover","ScaleAspectFill","ScaleNone","style","src","type","mainVer","patchVer","requestHeaders","headers","stringsOnlyObject","onVideoLoadStart","onVideoLoad","onVideoError","onVideoProgress","onVideoSeek","onVideoEnd","onVideoBuffer","onVideoBandwidthUpdate","onVideoAudioBecomingNoisy","onVideoExternalPlaybackChange","onVideoFullscreenPlayerWillPresent","onVideoFullscreenPlayerDidPresent","onVideoFullscreenPlayerWillDismiss","onVideoFullscreenPlayerDidDismiss","posterStyle","absoluteFillObject","posterResizeMode","absoluteFill","Component","propTypes","filter","PropTypes","oneOf","FilterType","NONE","INVERT","MONOCHROME","POSTERIZE","FALSE","MAXIMUMCOMPONENT","MINIMUMCOMPONENT","CHROME","FADE","INSTANT","MONO","NOIR","PROCESS","TONAL","TRANSFER","SEPIA","filterEnabled","bool","object","oneOfType","number","func","shape","string","minLoadRetryCount","maxBitRate","Image","repeat","allowsExternalPlayback","selectedAudioTrack","isRequired","value","selectedVideoTrack","selectedTextTrack","textTracks","arrayOf","title","TextTrackType","SRT","TTML","VTT","language","paused","muted","volume","bufferConfig","minBufferMs","maxBufferMs","bufferForPlaybackMs","bufferForPlaybackAfterRebufferMs","stereoPan","rate","pictureInPicture","playInBackground","playWhenInactive","ignoreSilentSwitch","reportBandwidth","disableFocus","controls","audioOnly","currentTime","fullscreenAutorotate","fullscreenOrientation","progressUpdateInterval","useTextureView","hideShutterView","needsToRestoreUserInterfaceForPictureInPictureStop","scaleX","scaleY","translateX","translateY","rotation","ViewPropTypes","RCTVideo","nativeOnly"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport PropTypes from 'prop-types';\nimport {StyleSheet, requireNativeComponent, NativeModules, View, ViewPropTypes, Image, Platform, findNodeHandle} from 'react-native';\nimport resolveAssetSource from 'react-native/Libraries/Image/resolveAssetSource';\nimport TextTrackType from './TextTrackType';\nimport FilterType from './FilterType';\nimport VideoResizeMode from './VideoResizeMode.js';\n\nconst styles = StyleSheet.create({\n  base: {\n    overflow: 'hidden',\n  },\n});\n\nexport { TextTrackType, FilterType };\n\nexport default class Video extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      showPoster: !!props.poster\n    };\n  }\n\n  setNativeProps(nativeProps) {\n    this._root.setNativeProps(nativeProps);\n  }\n  \n  toTypeString(x) {\n    switch (typeof x) {\n      case \"object\":\n        return x instanceof Date \n          ? x.toISOString() \n          : JSON.stringify(x); // object, null\n      case \"undefined\":\n        return \"\";\n      default: // boolean, number, string\n        return x.toString();      \n    }\n  }\n\n  stringsOnlyObject(obj) {\n    const strObj = {};\n\n    Object.keys(obj).forEach(x => {\n      strObj[x] = this.toTypeString(obj[x]);\n    });\n\n    return strObj;\n  }\n\n  seek = (time, tolerance = 100) => {\n    if (isNaN(time)) throw new Error('Specified time is not a number');\n    \n    if (Platform.OS === 'ios') {\n      this.setNativeProps({\n        seek: {\n          time,\n          tolerance\n        }\n      });\n    } else {\n      this.setNativeProps({ seek: time });\n    }\n  };\n\n  presentFullscreenPlayer = () => {\n    this.setNativeProps({ fullscreen: true });\n  };\n\n  dismissFullscreenPlayer = () => {\n    this.setNativeProps({ fullscreen: false });\n  };\n\n  save = async (options?) => {\n    return await NativeModules.VideoManager.save(options, findNodeHandle(this._root));\n  }\n\n  restoreUserInterfaceForPictureInPictureStopCompleted = (restored) => {\n    this.setNativeProps({ restoreUserInterfaceForPIPStopCompletionHandler: restored });\n  };\n\n  _assignRoot = (component) => {\n    this._root = component;\n  };\n\n  _hidePoster = () => {\n    if (this.state.showPoster) {\n      this.setState({showPoster: false});\n    }\n  }\n\n  _onLoadStart = (event) => {\n    if (this.props.onLoadStart) {\n      this.props.onLoadStart(event.nativeEvent);\n    }\n  };\n\n  _onLoad = (event) => {\n    // Need to hide poster here for windows as onReadyForDisplay is not implemented\n    if (Platform.OS === 'windows') {\n      this._hidePoster();\n    }\n    if (this.props.onLoad) {\n      this.props.onLoad(event.nativeEvent);\n    }\n  };\n\n  _onError = (event) => {\n    if (this.props.onError) {\n      this.props.onError(event.nativeEvent);\n    }\n  };\n\n  _onProgress = (event) => {\n    if (this.props.onProgress) {\n      this.props.onProgress(event.nativeEvent);\n    }\n  };\n\n  _onBandwidthUpdate = (event) => {\n    if (this.props.onBandwidthUpdate) {\n      this.props.onBandwidthUpdate(event.nativeEvent);\n    }\n  };  \n\n  _onSeek = (event) => {\n    if (this.props.onSeek) {\n      this.props.onSeek(event.nativeEvent);\n    }\n  };\n\n  _onEnd = (event) => {\n    if (this.props.onEnd) {\n      this.props.onEnd(event.nativeEvent);\n    }\n  };\n\n  _onTimedMetadata = (event) => {\n    if (this.props.onTimedMetadata) {\n      this.props.onTimedMetadata(event.nativeEvent);\n    }\n  };\n\n  _onFullscreenPlayerWillPresent = (event) => {\n    if (this.props.onFullscreenPlayerWillPresent) {\n      this.props.onFullscreenPlayerWillPresent(event.nativeEvent);\n    }\n  };\n\n  _onFullscreenPlayerDidPresent = (event) => {\n    if (this.props.onFullscreenPlayerDidPresent) {\n      this.props.onFullscreenPlayerDidPresent(event.nativeEvent);\n    }\n  };\n\n  _onFullscreenPlayerWillDismiss = (event) => {\n    if (this.props.onFullscreenPlayerWillDismiss) {\n      this.props.onFullscreenPlayerWillDismiss(event.nativeEvent);\n    }\n  };\n\n  _onFullscreenPlayerDidDismiss = (event) => {\n    if (this.props.onFullscreenPlayerDidDismiss) {\n      this.props.onFullscreenPlayerDidDismiss(event.nativeEvent);\n    }\n  };\n\n  _onReadyForDisplay = (event) => {\n    this._hidePoster();\n    if (this.props.onReadyForDisplay) {\n      this.props.onReadyForDisplay(event.nativeEvent);\n    }\n  };\n\n  _onPlaybackStalled = (event) => {\n    if (this.props.onPlaybackStalled) {\n      this.props.onPlaybackStalled(event.nativeEvent);\n    }\n  };\n\n  _onPlaybackResume = (event) => {\n    if (this.props.onPlaybackResume) {\n      this.props.onPlaybackResume(event.nativeEvent);\n    }\n  };\n\n  _onPlaybackRateChange = (event) => {\n    if (this.props.onPlaybackRateChange) {\n      this.props.onPlaybackRateChange(event.nativeEvent);\n    }\n  };\n  \n  _onExternalPlaybackChange = (event) => {\n    if (this.props.onExternalPlaybackChange) {\n      this.props.onExternalPlaybackChange(event.nativeEvent);\n    }\n  }\n\n  _onAudioBecomingNoisy = () => {\n    if (this.props.onAudioBecomingNoisy) {\n      this.props.onAudioBecomingNoisy();\n    }\n  };\n\n  _onPictureInPictureStatusChanged = (event) => {\n    if (this.props.onPictureInPictureStatusChanged) {\n      this.props.onPictureInPictureStatusChanged(event.nativeEvent);\n    }\n  };\n\n  _onRestoreUserInterfaceForPictureInPictureStop = (event) => {\n  \tif (this.props.onRestoreUserInterfaceForPictureInPictureStop) {\n      this.props.onRestoreUserInterfaceForPictureInPictureStop();\n    }\n  };\n\n  _onAudioFocusChanged = (event) => {\n    if (this.props.onAudioFocusChanged) {\n      this.props.onAudioFocusChanged(event.nativeEvent);\n    }\n  };\n\n  _onBuffer = (event) => {\n    if (this.props.onBuffer) {\n      this.props.onBuffer(event.nativeEvent);\n    }\n  };\n\n  getViewManagerConfig = viewManagerName => {\n    if (!NativeModules.UIManager.getViewManagerConfig) {\n      return NativeModules.UIManager[viewManagerName];\n    }\n    return NativeModules.UIManager.getViewManagerConfig(viewManagerName);\n  };\n\n  render() {\n    const resizeMode = this.props.resizeMode;\n    const source = resolveAssetSource(this.props.source) || {};\n    const shouldCache = !Boolean(source.__packager_asset)\n\n    let uri = source.uri || '';\n    if (uri && uri.match(/^\\//)) {\n      uri = `file://${uri}`;\n    }\n    \n    if (!uri) {\n      console.warn('Trying to load empty source.');\n    }\n\n    const isNetwork = !!(uri && uri.match(/^https?:/));\n    const isAsset = !!(uri && uri.match(/^(assets-library|ipod-library|file|content|ms-appx|ms-appdata):/));\n\n    let nativeResizeMode;\n    const RCTVideoInstance = this.getViewManagerConfig('RCTVideo');\n\n    if (resizeMode === VideoResizeMode.stretch) {\n      nativeResizeMode = RCTVideoInstance.Constants.ScaleToFill;\n    } else if (resizeMode === VideoResizeMode.contain) {\n      nativeResizeMode = RCTVideoInstance.Constants.ScaleAspectFit;\n    } else if (resizeMode === VideoResizeMode.cover) {\n      nativeResizeMode = RCTVideoInstance.Constants.ScaleAspectFill;\n    } else {\n      nativeResizeMode = RCTVideoInstance.Constants.ScaleNone;\n    }\n\n    const nativeProps = Object.assign({}, this.props);\n    Object.assign(nativeProps, {\n      style: [styles.base, nativeProps.style],\n      resizeMode: nativeResizeMode,\n      src: {\n        uri,\n        isNetwork,\n        isAsset,\n        shouldCache,\n        type: source.type || '',\n        mainVer: source.mainVer || 0,\n        patchVer: source.patchVer || 0,\n        requestHeaders: source.headers ? this.stringsOnlyObject(source.headers) : {}\n      },\n      onVideoLoadStart: this._onLoadStart,\n      onVideoLoad: this._onLoad,\n      onVideoError: this._onError,\n      onVideoProgress: this._onProgress,\n      onVideoSeek: this._onSeek,\n      onVideoEnd: this._onEnd,\n      onVideoBuffer: this._onBuffer,\n      onVideoBandwidthUpdate: this._onBandwidthUpdate,\n      onTimedMetadata: this._onTimedMetadata,\n      onVideoAudioBecomingNoisy: this._onAudioBecomingNoisy,\n      onVideoExternalPlaybackChange: this._onExternalPlaybackChange,\n      onVideoFullscreenPlayerWillPresent: this._onFullscreenPlayerWillPresent,\n      onVideoFullscreenPlayerDidPresent: this._onFullscreenPlayerDidPresent,\n      onVideoFullscreenPlayerWillDismiss: this._onFullscreenPlayerWillDismiss,\n      onVideoFullscreenPlayerDidDismiss: this._onFullscreenPlayerDidDismiss,\n      onReadyForDisplay: this._onReadyForDisplay,\n      onPlaybackStalled: this._onPlaybackStalled,\n      onPlaybackResume: this._onPlaybackResume,\n      onPlaybackRateChange: this._onPlaybackRateChange,\n      onAudioFocusChanged: this._onAudioFocusChanged,\n      onAudioBecomingNoisy: this._onAudioBecomingNoisy,\n      onPictureInPictureStatusChanged: this._onPictureInPictureStatusChanged,\n      onRestoreUserInterfaceForPictureInPictureStop: this._onRestoreUserInterfaceForPictureInPictureStop,\n    });\n\n    const posterStyle = {\n      ...StyleSheet.absoluteFillObject,\n      resizeMode: this.props.posterResizeMode || 'contain',\n    };\n\n    return (\n      <View style={nativeProps.style}>\n        <RCTVideo\n          ref={this._assignRoot}\n          {...nativeProps}\n          style={StyleSheet.absoluteFill}\n        />\n        {this.state.showPoster && (\n          <Image style={posterStyle} source={{ uri: this.props.poster }} />\n        )}\n      </View>\n    );\n  }\n}\n\nVideo.propTypes = {\n  filter: PropTypes.oneOf([\n      FilterType.NONE,\n      FilterType.INVERT,\n      FilterType.MONOCHROME,\n      FilterType.POSTERIZE,\n      FilterType.FALSE,\n      FilterType.MAXIMUMCOMPONENT,\n      FilterType.MINIMUMCOMPONENT,\n      FilterType.CHROME,\n      FilterType.FADE,\n      FilterType.INSTANT,\n      FilterType.MONO,\n      FilterType.NOIR,\n      FilterType.PROCESS,\n      FilterType.TONAL,\n      FilterType.TRANSFER,\n      FilterType.SEPIA\n  ]),\n  filterEnabled: PropTypes.bool,\n  /* Native only */\n  src: PropTypes.object,\n  seek: PropTypes.oneOfType([\n    PropTypes.number,\n    PropTypes.object\n  ]),\n  fullscreen: PropTypes.bool,\n  onVideoLoadStart: PropTypes.func,\n  onVideoLoad: PropTypes.func,\n  onVideoBuffer: PropTypes.func,\n  onVideoError: PropTypes.func,\n  onVideoProgress: PropTypes.func,\n  onVideoBandwidthUpdate: PropTypes.func,\n  onVideoSeek: PropTypes.func,\n  onVideoEnd: PropTypes.func,\n  onTimedMetadata: PropTypes.func,\n  onVideoAudioBecomingNoisy: PropTypes.func,\n  onVideoExternalPlaybackChange: PropTypes.func,\n  onVideoFullscreenPlayerWillPresent: PropTypes.func,\n  onVideoFullscreenPlayerDidPresent: PropTypes.func,\n  onVideoFullscreenPlayerWillDismiss: PropTypes.func,\n  onVideoFullscreenPlayerDidDismiss: PropTypes.func,\n\n  /* Wrapper component */\n  source: PropTypes.oneOfType([\n    PropTypes.shape({\n      uri: PropTypes.string\n    }),\n    // Opaque type returned by require('./video.mp4')\n    PropTypes.number\n  ]),\n  minLoadRetryCount: PropTypes.number,\n  maxBitRate: PropTypes.number,\n  resizeMode: PropTypes.string,\n  poster: PropTypes.string,\n  posterResizeMode: Image.propTypes.resizeMode,\n  repeat: PropTypes.bool,\n  allowsExternalPlayback: PropTypes.bool,\n  selectedAudioTrack: PropTypes.shape({\n    type: PropTypes.string.isRequired,\n    value: PropTypes.oneOfType([\n      PropTypes.string,\n      PropTypes.number\n    ])\n  }),\n  selectedVideoTrack: PropTypes.shape({\n    type: PropTypes.string.isRequired,\n    value: PropTypes.oneOfType([\n      PropTypes.string,\n      PropTypes.number\n    ])\n  }),  \n  selectedTextTrack: PropTypes.shape({\n    type: PropTypes.string.isRequired,\n    value: PropTypes.oneOfType([\n      PropTypes.string,\n      PropTypes.number\n    ])\n  }),\n  textTracks: PropTypes.arrayOf(\n    PropTypes.shape({\n      title: PropTypes.string,\n      uri: PropTypes.string.isRequired,\n      type: PropTypes.oneOf([\n        TextTrackType.SRT,\n        TextTrackType.TTML,\n        TextTrackType.VTT,\n      ]),\n      language: PropTypes.string.isRequired\n    })\n  ),\n  paused: PropTypes.bool,\n  muted: PropTypes.bool,\n  volume: PropTypes.number,\n  bufferConfig: PropTypes.shape({\n    minBufferMs: PropTypes.number,\n    maxBufferMs: PropTypes.number,\n    bufferForPlaybackMs: PropTypes.number,\n    bufferForPlaybackAfterRebufferMs: PropTypes.number,\n  }),\n  stereoPan: PropTypes.number,\n  rate: PropTypes.number,\n  pictureInPicture: PropTypes.bool,\n  playInBackground: PropTypes.bool,\n  playWhenInactive: PropTypes.bool,\n  ignoreSilentSwitch: PropTypes.oneOf(['ignore', 'obey']),\n  reportBandwidth: PropTypes.bool,\n  disableFocus: PropTypes.bool,\n  controls: PropTypes.bool,\n  audioOnly: PropTypes.bool,\n  currentTime: PropTypes.number,\n  fullscreenAutorotate: PropTypes.bool,\n  fullscreenOrientation: PropTypes.oneOf(['all','landscape','portrait']),\n  progressUpdateInterval: PropTypes.number,\n  useTextureView: PropTypes.bool,\n  hideShutterView: PropTypes.bool,\n  onLoadStart: PropTypes.func,\n  onLoad: PropTypes.func,\n  onBuffer: PropTypes.func,\n  onError: PropTypes.func,\n  onProgress: PropTypes.func,\n  onBandwidthUpdate: PropTypes.func,\n  onSeek: PropTypes.func,\n  onEnd: PropTypes.func,\n  onFullscreenPlayerWillPresent: PropTypes.func,\n  onFullscreenPlayerDidPresent: PropTypes.func,\n  onFullscreenPlayerWillDismiss: PropTypes.func,\n  onFullscreenPlayerDidDismiss: PropTypes.func,\n  onReadyForDisplay: PropTypes.func,\n  onPlaybackStalled: PropTypes.func,\n  onPlaybackResume: PropTypes.func,\n  onPlaybackRateChange: PropTypes.func,\n  onAudioFocusChanged: PropTypes.func,\n  onAudioBecomingNoisy: PropTypes.func,\n  onPictureInPictureStatusChanged: PropTypes.func,\n  needsToRestoreUserInterfaceForPictureInPictureStop: PropTypes.func,\n  onExternalPlaybackChange: PropTypes.func,\n\n  /* Required by react-native */\n  scaleX: PropTypes.number,\n  scaleY: PropTypes.number,\n  translateX: PropTypes.number,\n  translateY: PropTypes.number,\n  rotation: PropTypes.number,\n  ...ViewPropTypes,\n};\n\nconst RCTVideo = requireNativeComponent('RCTVideo', Video, {\n  nativeOnly: {\n    src: true,\n    seek: true,\n    fullscreen: true,\n  },\n});\n"]},"metadata":{},"sourceType":"script"}