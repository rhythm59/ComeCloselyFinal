{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _reactNativeTextinputWithIcons = _interopRequireDefault(require(\"react-native-textinput-with-icons\"));\n\nvar _styles = _interopRequireDefault(require(\"./styles\"));\n\nvar _jsxFileName = \"C:\\\\Program Files\\\\nodejs\\\\ComeClosely\\\\app\\\\views\\\\screens\\\\EnterNewPassword\\\\index.tsx\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nvar INITIAL_STATE = {\n  newPassword: '',\n  confirmPassword: ''\n};\n\nvar EnterNewPassword = function (_React$Component) {\n  (0, _inherits2.default)(EnterNewPassword, _React$Component);\n\n  var _super = _createSuper(EnterNewPassword);\n\n  function EnterNewPassword(props) {\n    var _this;\n\n    (0, _classCallCheck2.default)(this, EnterNewPassword);\n    _this = _super.call(this, props);\n    _this.state = (0, _extends2.default)({}, INITIAL_STATE);\n    return _this;\n  }\n\n  (0, _createClass2.default)(EnterNewPassword, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return _react.default.createElement(_reactNative.View, {\n        style: _styles.default.container,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 7\n        }\n      }, _react.default.createElement(_reactNative.ScrollView, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 9\n        }\n      }, _react.default.createElement(_reactNative.View, {\n        style: _styles.default.childView,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 11\n        }\n      }, _react.default.createElement(_reactNative.View, {\n        style: _styles.default.forgotTextMainView,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 13\n        }\n      }, _react.default.createElement(_reactNative.Text, {\n        style: _styles.default.forgotText,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 15\n        }\n      }, \"Forgot Password\")), _react.default.createElement(_reactNative.View, {\n        style: _styles.default.descriptionMainView,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 13\n        }\n      }, _react.default.createElement(_reactNative.Text, {\n        style: _styles.default.descriptionText,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 15\n        }\n      }, \"Enter the new password to get in your account \", '\\n', \"make sure to remember your password\", '\\n', \"and don't sahre it with anyone\")), _react.default.createElement(_reactNative.View, {\n        style: _styles.default.inputCotainer,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 13\n        }\n      }, _react.default.createElement(_reactNativeTextinputWithIcons.default, {\n        style: _styles.default.textInputBackground,\n        label: \"New Password\",\n        labelActiveColor: \"#FF2485\",\n        underlineActiveColor: \"#FF2485\",\n        containerMaxWidth: \"100%\",\n        color: \"#515C6F\",\n        secureTextEntry: true,\n        value: this.state.newPassword,\n        onChangeText: function onChangeText(newPassword) {\n          return _this2.setState({\n            newPassword: newPassword\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 15\n        }\n      })), _react.default.createElement(_reactNative.View, {\n        style: _styles.default.confirmPasswordInputCotainer,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 13\n        }\n      }, _react.default.createElement(_reactNativeTextinputWithIcons.default, {\n        style: _styles.default.confirmPasswordBackground,\n        label: \"Confirm Password\",\n        labelActiveColor: \"#FF2485\",\n        underlineActiveColor: \"#FF2485\",\n        color: \"#515C6F\",\n        secureTextEntry: true,\n        containerMaxWidth: \"100%\",\n        value: this.state.confirmPassword,\n        onChangeText: function onChangeText(confirmPassword) {\n          return _this2.setState({\n            confirmPassword: confirmPassword\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 15\n        }\n      })), _react.default.createElement(_reactNative.TouchableHighlight, {\n        style: _styles.default.submitMainView,\n        underlayColor: \"rgba(0,0,0,0.0)\",\n        onPress: function onPress() {\n          _this2.props.navigation.navigate('Login');\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 13\n        }\n      }, _react.default.createElement(_reactNative.Text, {\n        style: _styles.default.submitText,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 15\n        }\n      }, \"SUBMIT\")))));\n    }\n  }]);\n  return EnterNewPassword;\n}(_react.default.Component);\n\nvar _default = EnterNewPassword;\nexports.default = _default;","map":{"version":3,"sources":["C:/Program Files/nodejs/ComeClosely/app/views/screens/EnterNewPassword/index.tsx"],"names":["INITIAL_STATE","newPassword","confirmPassword","EnterNewPassword","props","state","styles","container","childView","forgotTextMainView","forgotText","descriptionMainView","descriptionText","inputCotainer","textInputBackground","setState","confirmPasswordInputCotainer","confirmPasswordBackground","submitMainView","navigation","navigate","submitText","React","Component"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {View, Text, TouchableHighlight, ScrollView} from 'react-native';\n\nimport TextInput from 'react-native-textinput-with-icons';\n\nimport styles from './styles';\n\ninterface ComponentState {\n  newPassword: string;\n  confirmPassword: string;\n}\nconst INITIAL_STATE: ComponentState = {\n  newPassword: '',\n  confirmPassword: '',\n};\n\nclass EnterNewPassword extends React.Component<\n  {navigation: any},\n  ComponentState\n> {\n  constructor(props: any) {\n    super(props);\n    this.state = {...INITIAL_STATE};\n  }\n\n  render() {\n    return (\n      <View style={styles.container}>\n        <ScrollView>\n          <View style={styles.childView}>\n            <View style={styles.forgotTextMainView}>\n              <Text style={styles.forgotText}>Forgot Password</Text>\n            </View>\n            <View style={styles.descriptionMainView}>\n              <Text style={styles.descriptionText}>\n                Enter the new password to get in your account {'\\n'}make sure to\n                remember your password{'\\n'}and don't sahre it with anyone\n              </Text>\n            </View>\n\n            <View style={styles.inputCotainer}>\n              <TextInput\n                style={styles.textInputBackground}\n                label=\"New Password\"\n                labelActiveColor=\"#FF2485\"\n                underlineActiveColor=\"#FF2485\"\n                containerMaxWidth=\"100%\"\n                color=\"#515C6F\"\n                secureTextEntry={true}\n                value={this.state.newPassword}\n                onChangeText={(newPassword: string) =>\n                  this.setState({newPassword})\n                }\n              />\n            </View>\n            <View style={styles.confirmPasswordInputCotainer}>\n              <TextInput\n                style={styles.confirmPasswordBackground}\n                label=\"Confirm Password\"\n                labelActiveColor=\"#FF2485\"\n                underlineActiveColor=\"#FF2485\"\n                color=\"#515C6F\"\n                secureTextEntry={true}\n                containerMaxWidth=\"100%\"\n                value={this.state.confirmPassword}\n                onChangeText={(confirmPassword: string) =>\n                  this.setState({confirmPassword})\n                }\n              />\n            </View>\n            <TouchableHighlight\n              style={styles.submitMainView}\n              underlayColor=\"rgba(0,0,0,0.0)\"\n              onPress={() => {\n                this.props.navigation.navigate('Login');\n              }}>\n              <Text style={styles.submitText}>SUBMIT</Text>\n            </TouchableHighlight>\n          </View>\n        </ScrollView>\n      </View>\n    );\n  }\n}\n\nexport default EnterNewPassword;\n"]},"metadata":{},"sourceType":"script"}